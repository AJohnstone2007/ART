!print "First example"
S ::= 'a' R T
R ::= 'r' 
T ::= 't'
!generate 10 sententialforms


!print "Adding a rule"
!clear cfgRules
S ::= 'a' R T
R ::= 'r' 
R ::= 'r' 'r'
T ::= 't'
!generate 10 sententialforms


!print "Using the | bar to combine rules"
!clear cfgRules
S ::= 'a' R T
R ::= 'r' | 'r' 'r' 
T ::= 't'
!generate 10 sententialforms


(*
!print "Illegal empty rules style generates syntax error"
!clear cfgRules
S ::= 'a' R T
R ::= 
T ::= 't'
!generate 10 sententialforms
*)

!print "Correct form for empty rules"
!clear cfgRules
S ::= 'a' R T
R ::= #
T ::= 't'
!generate 10 sententialforms

(*
!print "Illegal use of #"
!clear cfgRules
R ::= 'r' # A
*)

!print "Correct form for empty rules" 
!clear cfgRules
S ::= 'a' R T
R ::= #
T ::= 't'
!generate 10 sententialforms
!try "at"
!print tryTerm

!print "Using the | bar with an empty rule"
!clear cfgRules
S ::= 'a' R T
R ::= 'r' | #
T ::= 't'
!generate 10 sententialforms

!print "Right recursion"
!clear cfgRules
S ::= 'a' R T
R ::= 'r' | 'r' R
T ::= 't'
!generate 10 sententialforms
!generate 10 sentences

!print "Left recursion"
!clear cfgRules
S ::= 'a' R T
R ::= 'r' | R 'r'
T ::= 't'
!generate 10 sententialforms
!generate 10 sentences

!print "Right recursion with empty rule"
!clear cfgRules
S ::= 'a' R T
R ::= # | 'r' R
T ::= 't'
!generate 10 sentences

!print "Ambiguous CFG"
!clear cfgRules
S ::= 'a' R | A 't'
A ::= 'a' 'r'
R ::= 'r' 't'
!generate 10 sententialforms
!try "art"
!print tryTerm

!print "Cyclic CFG"
!clear cfgRules
S ::= 'a' R T
R ::= 'r'| R
T ::= 't'
!generate 10 sententialforms

!print "Thank you letter generator"
!clear cfgRules
letter ::= salutation person ',' 'thank' 'you' 'for' 'my' gift '.' 'It' 'is' reaction '.' 'I' 'will' action 'it' '.'
gift ::= occasion 'present'
occasion ::= 'birthday' | 'house' 'warming'
salutation ::= 'Dearest' | 'Hey'
person ::= 'you' | 'Madam' | 'Sir'
reaction ::= 'incredible' | 'in' 'the' 'bin'
action ::= 'love' | 'hide' | 'try' 'to' 'forget' 

!generate 1000 sententialforms
!generate 1000 sentences
