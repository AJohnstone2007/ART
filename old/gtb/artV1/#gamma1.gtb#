(* Example GTB script *)

(* NEW RNGLR IS NOT DOING THE EXTRA BIT, IT IS DOING Tomita_1e *)

S ::=  S S S | S S | 'a' .



(*
S ::=  A B | B 'a' .
B ::= 'c' .
A ::= # .
*)

(
STRING10 :=  "
a a a a a a a a a a 
"

STRING50 :=  "
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a "

STRING100 :=  "
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a 
a a a a a a a a a a "


nfa_file := open["nfa.vcg"]
dfa_file := open["dfa.vcg"]
table_file := open["lr1.tbl"]
table_export_file := open["lr1.tbx"]
table_export_file_new := open["lr1.tb2"]
(* table_import_file := open["lr1.tbi" old_text_file] *)
ssg_file := open["ssg.vcg"]

write["\n" gtb_version " processing '" gtb_main_file_name "' on " date_time "\n\n"]

this_grammar := grammar[S]
write[this_grammar]


nfa := fsa[this_grammar slr_1]
add_nullable_accepting_states[nfa]
write[nfa_file nfa]

dfa := subset_construction[nfa]
write[dfa_file dfa]

table := parse_table[dfa]

write[table_file table]

(*
ssg := tomita_1_nullable_accepts_parse[table STRING10]
write[open["ssg_old.vcg"] ssg]
*)

ssg := rnglr_parse[table STRING100]
write[ssg_file ssg]

write["\n" CPU_time " CPU seconds elapsed\n\n"]
)


