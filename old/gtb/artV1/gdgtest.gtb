S ::= 'a' A B 'a' .
A ::= 'a' C D 'a' .
B ::= 'a' A 'a' .
C ::= 'a' E F 'a' .
D ::= 'a' C 'a' .
E ::= 'a' S 'a' .
F ::= 'a' E 'a' .


(
write["\n" gtb_version " processing '" gtb_main_file_name "' on " date_time "\n\n"]

gdg_file := open["gdg.vcg"]
gdgunc_file := open["gdgunc.vcg"]

this_grammar := grammar[S] 

uncompressed_gdg := gdg[this_grammar]



write["\n\nGDG analyse with retained break sets\n"]
cycle_break_sets[uncompressed_gdg retain_break_sets delete_break_sets 0-2]
write["\n\nGDG analyse with break sets pruned by element\n"]
(*
gdg_analyse_fast[uncompressed_gdg prune_break_sets_by_element]
write["\n\nGDG analyse with break sets pruned by set\n"]
gdg_analyse_fast[uncompressed_gdg prune_break_sets_by_set]
write["\n\nGDG analyse with break sets pruned by table\n"]
gdg_analyse_fast[uncompressed_gdg prune_break_sets_by_table]
*)

render[gdgunc_file uncompressed_gdg]

(*
this_gdg := gdg_compress[uncompressed_gdg]

gdg_analyse_bu[this_gdg]
render[gdg_file this_gdg]
close[gdg_file]
*)
write["\n" CPU_time " CPU seconds elapsed\n\n"]
)
