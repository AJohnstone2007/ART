(* Generated by ebnf2bnf V1.00 from 'cobol.bnf'Nov 20 2003 14:08:10 *)

(****
THIS HAS BEEN MODIFIED SO ALL RULES HAVE LENGTH AT MOST TWO
***)

(* AS SMALL NUMBER OF SUBSTITUTIONS TO MAKE A SMALL ENOUGH LR(1) NFA
ONLY EBNF2BNF INTRODUCED NON-TERMINALS ARE REMOVED
has 1461374 headers

NOW HAS 865922 headers.
22745 headers 


gtb v2 nterm sing 16640 headers
gtb v2  term full 21420 headers
gtb v2 nterm full 28586 headers

This has had the self embedding removed (tilded) to try to do 
the ah trie building
*)

Abbreviated_combined_relation_conditions_2 ::= T4  ')' |
                                               T8 ')' .

T1 ::= Expression Relational_operator .
T2 ::= T1 '(' .
T3 ::= T2 Expression .
T4 ::= T3 Abbreviation_rest .

(*** 2 of these should be reuses ***)
T5 ::= Expression Relational_operator .
T6 ::= T5 '(' .
T7 ::= T6 'NOT' .
T8 ::= T7 Expression .
T9 ::= T8 Abbreviation_rest .


Abbreviated_combined_relation_conditions_3_sub_list ::= Abbreviated_combined_relation_conditions_3_sub_list Alt_and_or Abbreviated_combined_relation_conditions_3_sub |
                                                        Abbreviated_combined_relation_conditions_3_sub .


Abbreviated_combined_relation_conditions_3_sub ::= T12 ')' |
                                                   T16 ')' .

T10 ::= '(' Relational_operator .
T11 ::= T10 Expression .
T12 ::= T11 Abbreviation_rest .

T13 ::= 'NOT' '(' .
T14 ::= T13 Relational_operator .
T15 ::= T14 Expression .
T16 ::= T15 Abbreviation_rest .


Abbreviated_combined_relation_conditions_3 ::= Expression Abbreviated_combined_relation_conditions_3_sub_list .

Abbreviation_leaf ::= T18 ')' |
                      Expression .

T17 ::= '(' Expression .
T18 ::= T17 ~Abbreviation_rest .

Abbreviation_rest ::= # |
                      Abbreviation_rest And_or_abbreviation_leaf .


Accept_statement_1 ::= 'ACCEPT' Identifier |
                       T19 From_environment_name .

T19 ::= 'ACCEPT' Identifier .


Accept_statement_2 ::= T21 Date .

T20 ::= 'ACCEPT' Identifier .
T21 ::= T20 'FROM' .

Accept_statement ::= Accept_statement_1 |
                     Accept_statement_2 .

Add_statement_non_closed ::= Add_statement_simple On_size_error_phrases .


Add_statement_simple_1 ::=  T23 Cobword_rounded |
                            Add_statement_simple_1 Cobword_rounded .

T22 ::= 'ADD' Add_statement_simple_1_5 .
T23 ::= T22 'TO' .

Add_statement_simple_1_5 ::= Cobword_lit |
                             Add_statement_simple_1_5 Cobword_lit .

Add_statement_simple_2 ::=  T26 Cobword_rounded |
                            T30 Cobword_rounded |
                            Add_statement_simple_2 Cobword_rounded .

Add_statement_simple_2_7 ::= Cobword_lit |
                             Add_statement_simple_2_7 Cobword_lit .

T24 ::= 'ADD' Add_statement_simple_2_7 .
T25 ::= T24 Cobword_lit .
T26 ::= T25 'GIVING' .

(**** 1 of these are extra ************)
T27 ::= 'ADD' Add_statement_simple_2_7 .
T28 ::= T27 'TO' .
T29 ::= T28 Cobword_lit . 
T30 ::= T29 'GIVING' .

Add_statement_simple_3 ::= T33 Identifier |
                           T37 'ROUNDED' .

T31 ::= 'ADD' Corresponding .
T32 ::= T31 Identifier .
T33 ::= T32 'TO' .

(********** 3 of these are extra  ************)
T34 ::= 'ADD' Corresponding .
T35 ::= T34 Identifier .
T36 ::= T35 'TO' .
T37 ::= T36 Identifier .


Add_statement_simple ::= Add_statement_simple_1 |
                         Add_statement_simple_2 |
                         Add_statement_simple_3 .

Add_statement ::= Add_statement_non_closed 'END_ADD' |
                  Add_statement_simple 'END_ADD' |
                  Add_statement_simple .

Advancing_phrase ::= Alt_before_after  Page_phrase |
                     Alt_before_after 'ADVANCING' Page_phrase .


All_procedures ::= 'ALL' 'PROCEDURES' .

Alphabet_clause ::= T38 Alphabet_type |
                    T40 Alphabet_type .

T38 ::= 'ALPHABET' Alphabet_name .

(********** 1 of these is extra **)
T39 ::= 'ALPHABET' Alphabet_name .
T40 ::= T39 'IS' .

Alphabet_name ::= Alphabetic_user_defined_word .

Alphabet_type_also_through ::= Alphabet_type_alsos |
                               Through_literal .

Alphabet_type_also ::= 'ALSO' Literal .

Alphabet_type_alsos ::= Alphabet_type_also |
                        Alphabet_type_alsos Alphabet_type_also .

Alphabet_type_other ::= Literal |
                        Literal Alphabet_type_also_through .
                           
Alphabet_type_others ::= Alphabet_type_other |
                         Alphabet_type_others Alphabet_type_other .

Alphabet_type ::= 'EBCDIC' |
                  'NATIVE' |
                  'STANDARD_1' |
                  'STANDARD_2' |
                  Alphabet_type_others .

Alphabetic_user_defined_word ::= Cobword .

Also_phrase ::= 'ALSO' Evaluate_condition .

Alt_all_leading_first ::= 'ALL' |
                          'FIRST' |
                          'LEADING' .

Alt_all_leading ::= 'ALL' |
                    'LEADING' .

Alt_and_or ::= 'AND' |
               'OR' .

Alt_ascending_descending ::= 'ASCENDING' |
                             'DESCENDING' .

Alt_assignment_name_file_name ::= Assignment_name |
                                  File_name .

Alt_assignment_name_literal ::= Assignment_name |
                                Literal .

Alt_before_after ::= 'AFTER' |
                     'BEFORE' .

Alt_beginning_ending ::= 'BEGINNING' |
                         'ENDING' .

Alt_characters_records ::= 'CHARACTERS' |
                           'RECORD' |
                           'RECORDS' .

Alt_data_name_filler ::= 'FILLER' |
                         Data_name .

Alt_data_name_integer ::= Data_name |
                          'Integer' .

Alt_exception_error ::= 'ERROR' |
                        'EXCEPTION' .

Alt_fd_sd ::= 'FD' |
              'SD' .

Alt_file_names_i_o ::= 'EXTEND' |
                       'I_O' |
                       'INPUT' |
                       'OUTPUT' |
                       File_names .

Alt_file_reel_unit ::= 'FILE' |
                       'REEL' |
                       'UNIT' .

Alt_indexed_relative_sequential ::= 'INDEXED' |
                                    'RELATIVE' |
                                    'SEQUENTIAL' .

Alt_leading_trailing ::= 'LEADING' |
                         'TRAILING' .

Alt_left_right ::= 'LEFT' |
                   'RIGHT' .

Alt_library_name_literal ::= Library_name |
                             Literal .

Alt_no_rewind_lock ::= 'LOCK' |
                       No_rewind .

Alt_plus_minus ::= '-' |
                   '+' .

Alt_procedures_all_procedures ::= All_procedures |
                                  Procedure_names .

Alt_qualified_data_name_literal ::= Literal |
                                    Qualified_data_name .

Alt_reel_unit ::= 'REEL' |
                  'UNIT' .

Alt_removal_no_rewind ::= For_removal |
                          With_no_rewind .

Alt_reversed_with_no_rewind ::= 'REVERSED' |
                                With_no_rewind .

Alt_run_literal ::= 'RUN' |
                    Literal .

Alt_sequential_random_dynamic ::= 'DYNAMIC' |
                                  'RANDOM' |
                                  'SEQUENTIAL' .

Alt_text_name_literal ::= Literal |
                          Text_name .

Alt_times_div ::= '*' |
                  '/' .

Alt_up_down_by ::= Alt_up_down 'BY' .

Alt_up_down ::= 'DOWN' |
                'UP' .

Alter_statement ::= 'ALTER' Procedure_to_procedure |
                     Alter_statement Procedure_to_procedure .

Altered_goto ::= Label_name '.' 'GO' '.' |
                 Label_name '.' 'GO' 'TO' '.' .


Alternate_record_key_clause ::= T42 Alternate_record_key_clause_22 |
                                T45 Alternate_record_key_clause_22 |
                                T48 Alternate_record_key_clause_22 |
                                T52 Alternate_record_key_clause_22 |
                                T55 Alternate_record_key_clause_22 |
                                T59 Alternate_record_key_clause_22 |
                                T63 Alternate_record_key_clause_22 |
                                T68 Alternate_record_key_clause_22 .

T41 ::= 'ALTERNATE' Qualified_data_name .
T42 ::= T41 Alternate_record_key_clause_21 .

T43 ::= 'ALTERNATE' 'RECORD' .
T44 ::= T43 Qualified_data_name .
T45 ::= T44 Alternate_record_key_clause_21 .

T46 ::= 'ALTERNATE' 'KEY' .
T47 ::= T46 Qualified_data_name .
T48 ::= T47 Alternate_record_key_clause_21 .

(********  5 of these are extra *********)
T49 ::= 'ALTERNATE' 'RECORD' .
T50 ::= T49 'KEY' .
T51 ::= T50 Qualified_data_name .
T52 ::= T51 Alternate_record_key_clause_21 .

T53 ::= 'ALTERNATE' 'IS' .
T54 ::= T53 Qualified_data_name .
T55 ::= T54 Alternate_record_key_clause_21 .

T56 ::= 'ALTERNATE' 'RECORD' .
T57 ::= T56 'IS' .
T58 ::= T57 Qualified_data_name .
T59 ::= T58 Alternate_record_key_clause_21 .

T60 ::= 'ALTERNATE' 'KEY' .
T61 ::= T60 'IS' .
T62 ::= T61 Qualified_data_name .
T63 ::= T62 Alternate_record_key_clause_21 .

T64 ::= 'ALTERNATE' 'RECORD' .
T65 ::= T64 'KEY' .
T66 ::= T65 'IS' .
T67 ::= T66 Qualified_data_name .
T68 ::= T67 Alternate_record_key_clause_21 .

Alternate_record_key_clause_21 ::= # |
                                   Password_clause .

Alternate_record_key_clause_22 ::= # |
                                   With_duplicates .


And_or_abbreviation_leaf ::= Alt_and_or Abbreviation_leaf |
                             Alt_and_or Relational_operator Abbreviation_leaf .


And_or_combinable_condition_1 ::= Alt_and_or ~Combinable_condition_1 .

Are ::= 'ARE' |
        'IS' .

Areas ::= 'AREA' |
          'AREAS' .

Arithmetic_expression_tail ::= Alt_plus_minus Times_div .


Arithmetic_expression ::= Times_div |
                          Arithmetic_expression Arithmetic_expression_tail .


Assign_clause ::= 'ASSIGN' Alt_assignment_name_literal |
                   T70 Alt_assignment_name_literal |
                   Assign_clause Alt_assignment_name_literal .

T70 ::= 'ASSIGN' 'TO' .

Assignment_name ::= System_name .

At_end_of_page_statement_list ::= End_of_page Statement_list |
                                  'AT' End_of_page Statement_list .



At_end_phrases ::= At_end_statement_list |
                   At_end_statement_list Not_at_end_statement_list |
                   Not_at_end_statement_list .

At_end_statement_list ::= 'END' Statement_list |
                          T71 Statement_list .

T71 ::= 'AT' 'END' .

Author ::= 'AUTHOR' |
           'AUTHOR' '.' |
            Author Comment_entry .

Basis_1 ::= T72 ')' .

T72 ::= '(' Arithmetic_expression .

Basis ::= Basis_1 |
          Figurative_constant |
          Identifier |
          Unsigned_numeric .

Before_after_phrase ::= Alt_before_after Cobword_lit |
                        T73 Cobword_lit .

T73 ::= Alt_before_after 'INITIAL' .

Blank_when_zero_clause ::= 'BLANK' Zeroes |
                           T74 Zeroes .

T74 ::= 'BLANK' 'WHEN' .

Block_contains_clause ::= 'BLOCK' 'Integer' |
                          T75 'Integer' |
                          T76 'Integer' |
                          T77 'Integer' |
                          T79 Alt_characters_records |
                          T81 Alt_characters_records |
                          T83 Alt_characters_records |
                          T86 Alt_characters_records .

(**********  5 of these are extra *******)
T75 ::= 'BLOCK' 'CONTAINS' .
T76 ::= 'BLOCK' Integer_to .
T77 ::= 'BLOCK' 'CONTAINS' .
T78 ::= T77 Integer_to .
T79 ::= 'BLOCK' 'Integer' .
T80 ::= 'BLOCK' 'CONTAINS' .
T81 ::= T80 'Integer' .
T82 ::= 'BLOCK' Integer_to .
T83 ::= 'Integer' .
T84 ::= 'BLOCK' 'CONTAINS' .
T85 ::= T84 Integer_to .
T86 ::= T85 'Integer' .
                             
By_reference ::= 'REFERENCE' |
                 'BY' 'REFERENCE' .

Call_error_phrases ::= Not_on_exception_statement_list |
                       Not_on_exception_statement_list On_overflow_statement_list |
                       On_exception_statement_list |
                       On_exception_statement_list Not_on_exception_statement_list |
                       On_exception_statement_list On_overflow_statement_list |
                       On_exception_statement_list Not_on_exception_statement_list On_overflow_statement_list |
                       On_overflow_statement_list .


Call_statement_non_closed ::= Call_statement_simple Call_error_phrases .

Call_statement_simple ::= 'CALL' Cobword_lit |
                          T87 Using_parameters .

T87 ::= 'CALL' Cobword_lit .

Call_statement ::= Call_statement_non_closed 'END_CALL' |
                   Call_statement_simple 'END_CALL' |
                   Call_statement_simple .

Cancel_statement ::= 'CANCEL' Cobword_lit |
                      Cancel_statement Cobword_lit .

Cics_statement ::= T89 'END_EXEC' .

T88 ::= 'EXEC' 'CICS' .
T89 ::= T88 Cics_statement_43 .

Cics_statement_43 ::= # |
                      Cics_statement_43 Emb_token .

Class_clause ::= T90 Literal_through_literal |
                 T92 Literal_through_literal |
                 Class_clause Literal_through_literal .

(******** 1 of these is extra ********)
T90 ::= 'CLASS' Class_name .
T91 ::= 'CLASS' Class_name .
T92 ::= 'IS' .

Class_condition ::= T93 Class_type .

T93 ::= Identifier Is_or_is_not .

Class_name ::= Alphabetic_user_defined_word .

Class_type ::= 'ALPHABETIC_LOWER' |
               'ALPHABETIC_UPPER' |
               'ALPHABETIC' |
               'DBCS' |
               'KANJI' |
               'NUMERIC' |
               Class_name .

Close_statement_file_name ::= File_name |
                              File_name Close_statement_options .


Close_statement_options_1 ::= Alt_reel_unit |
                              Alt_reel_unit Alt_removal_no_rewind .

Close_statement_options_2 ::= Alt_no_rewind_lock |
                              'WITH' Alt_no_rewind_lock .


Close_statement_options ::= Close_statement_options_1 |
                            Close_statement_options_2 .

Close_statement ::= 'CLOSE' Close_statement_file_name |
                     Close_statement Close_statement_file_name .


Cobol_source_program ::= T100 Cobol_source_program_53 .

T94 ::= Identification 'DIVISION' .
T95 ::= T94 '.' .
T96 ::= T95 Program_id_cobol_source_program .
T97 ::= T96 Identification_division_content .
T98 ::= T97 Cobol_source_program_50 .
T99 ::= T98 Cobol_source_program_51 .
T100 ::= T99 Cobol_source_program_52 .

Cobol_source_program_50 ::= # |
                            Environment_division .

Cobol_source_program_51 ::= # |
                            Data_division .

Cobol_source_program_52 ::= # |
                            Procedure_division .

Cobol_source_program_53 ::= # |
                            End_program .


Cobol_source_programs ::= # |
                          Cobol_source_programs Cobol_source_program .

Cobword_int ::= Identifier |
                'Integer' .

Cobword_lit_size ::= 'SIZE' |
                     Identifier |
                     Literal .

Cobword_lit ::= Identifier |
                Literal .

Cobword_rounded ::= Identifier |
                    Identifier 'ROUNDED' .


Cobword ::= 'ACCEPT' |
            'ACCESS' |
            'ADD' |
            'ADDRESS' |
            'ADVANCING' |
            'AFTER' |
            'ALL' |
            'ALPHABET' |
            'ALPHABETIC_LOWER' |
            'ALPHABETIC_UPPER' |
            'ALPHABETIC' |
            'ALPHANUMERIC_EDITED' |
            'ALPHANUMERIC' |
            'ALSO' |
            'ALTER' |
            'ALTERNATE' |
            'AND' |
            'ANY' |
            'APPLY' |
            'ARE' |
            'AREA' |
            'AREAS' |
            'ASCENDING' |
            'ASSIGN' |
            'AT' |
            'AUTHOR' |
            'BEFORE' |
            'BEGINNING' |
            'BINARY' |
            'BLANK' |
            'BLOCK' |
            'BOTTOM' |
            'BY' |
            'CALL' |
            'CANCEL' |
            'CHARACTER' |
            'CHARACTERS' |
            'CICS' |
            'CLASS' |
            'CLOSE' |
            'CODE_SET' |
            'COLLATING' |
            'COMMA' |
            'COMP_1' |
            'COMP_2' |
            'COMP_3' |
            'COMP_4' |
            'COMP' |
            'COMPUTATIONAL_1' |
            'COMPUTATIONAL_2' |
            'COMPUTATIONAL_3' |
            'COMPUTATIONAL_4' |
            'COMPUTATIONAL' |
            'COMPUTE' |
            'CONFIGURATION' |
            'CONTAINS' |
            'CONTENT' |
            'CONTINUE' |
            'CONVERTING' |
            'COPY' |
            'CORR' |
            'CORRESPONDING' |
            'COUNT' |
            'CURRENCY' |
            'DATA' |
            'DATE_COMPILED' |
            'DATE_WRITTEN' |
            'DATE' |
            'DAY_OF_WEEK' |
            'DAY' |
            'DBCS' |
            'DEBUG_ITEM' |
            'DEBUGGING' |
            'DECIMAL_POINT' |
            'DECLARATIVES' |
            'DEGUGGING' |
            'DELETE' |
            'DELIMITED' |
            'DELIMITER' |
            'DEPENDING' |
            'DESCENDING' |
            'DISPLAY_1' |
            'DISPLAY' |
            'DIVIDE' |
            'DIVISION' |
            'DOWN' |
            'DUPLICATES' |
            'DYNAMIC' |
            'EBCDIC' |
            'EGCS' |
            'EJECT' |
            'ELSE' |
            'END_ADD' |
            'END_CALL' |
            'END_COMPUTE' |
            'END_DELETE' |
            'END_DIVIDE' |
            'END_EVALUATE' |
            'END_EXEC' |
            'END_IF' |
            'END_MULTIPLY' |
            'END_OF_PAGE' |
            'END_PERFORM' |
            'END_READ' |
            'END_RETURN' |
            'END_REWRITE' |
            'END_SEARCH' |
            'END_START' |
            'END_STRING' |
            'END_SUBTRACT' |
            'END_UNSTRING' |
            'END_WRITE' |
            'END' |
            'ENDING' |
            'ENTRY' |
            'ENVIRONMENT' |
            'EOP' |
            'EQUAL' |
            'ERROR' |
            'EVALUATE' |
            'EVERY' |
            'EXCEPTION' |
            'EXEC' |
            'EXIT' |
            'EXTEND' |
            'EXTERNAL' |
            'FALSE' |
            'FD' |
            'FILE_CONTROL' |
            'FILE' |
            'FILLER' |
            'FIRST' |
            'FOOTING' |
            'FOR' |
            'FROM' |
            'GIVING' |
            'GLOBAL' |
            'GO' |
            'GOBACK' |
            'GREATER' |
            'HIGH_VALUE' |
            'HIGH_VALUES' |
            'I_O_CONTROL' |
            'I_O' |
            'ID' |
            'IDENTIFICATION' |
            'IF' |
            'IN' |
            'INDEX' |
            'INDEXED' |
            'INITIAL' |
            'INITIALIZE' |
            'INPUT_OUTPUT' |
            'INPUT' |
            'INSPECT' |
            'INSTALLATION' |
            'INTO' |
            'INVALID' |
            'IS' |
            'JUST' |
            'JUSTIFIED' |
            'KANJI' |
            'KEY' |
            'LABEL' |
            'LEADING' |
            'LEFT' |
            'LENGTH' |
            'LESS' |
            'LINAGE_COUNTER' |
            'LINAGE' |
            'LINE' |
            'LINES' |
            'LINKAGE' |
            'LOCK' |
            'LOW_VALUE' |
            'LOW_VALUES' |
            'MEMORY' |
            'MERGE' |
            'MODE' |
            'MODULES' |
            'MORE_LABELS' |
            'MOVE' |
            'MULTIPLE' |
            'MULTIPLY' |
            'NATIVE' |
            'NEGATIVE' |
            'NEXT' |
            'NO' |
            'NOT' |
            'NULL' |
            'NULLS' |
            'NUMERIC_EDITED' |
            'NUMERIC' |
            'OBJECT_COMPUTER' |
            'OCCURS' |
            'OF' |
            'OFF' |
            'OMITTED' |
            'ON' |
            'OPEN' |
            'OPTIONAL' |
            'OR' |
            'ORDER' |
            'ORGANIZATION' |
            'OTHER' |
            'OUTPUT' |
            'OVERFLOW' |
            'PACKED_DECIMAL' |
            'PADDING' |
            'PAGE' |
            'PASSWORD' |
            'PERFORM' |
            'PIC' |
            'PICTURE' |
            'POINTER' |
            'POSITION' |
            'POSITIVE' |
            'PROCEDURE' |
            'PROCEDURES' |
            'PROCEED' |
            'PROGRAM_ID' |
            'PROGRAM' |
            'QUOTE' |
            'QUOTES' |
            'RANDOM' |
            'READ' |
            'RECORD' |
            'RECORDING' |
            'RECORDS' |
            'REDEFINES' |
            'REEL' |
            'REFERENCE' |
            'RELATIVE' |
            'RELEASE' |
            'REMAINDER' |
            'REMARKS' |
            'REMOVAL' |
            'RENAMES' |
            'REPLACING' |
            'RERUN' |
            'RESERVE' |
            'RETURN_CODE' |
            'RETURN' |
            'REVERSED' |
            'REWIND' |
            'REWRITE' |
            'RIGHT' |
            'ROUNDED' |
            'RUN' |
            'SAME' |
            'SD' |
            'SEARCH' |
            'SECTION' |
            'SECURITY' |
            'SEGMENT_LIMIT' |
            'SELECT' |
            'SENTENCE' |
            'SEPARATE' |
            'SEQUENCE' |
            'SEQUENTIAL' |
            'SET' |
            'SHIFT_IN' |
            'SHIFT_OUT' |
            'SIGN' |
            'SIZE' |
            'SKIP' |
            'SKIP1' |
            'SKIP2' |
            'SKIP3' |
            'SORT_CONTROL' |
            'SORT_CORE_SIZE' |
            'SORT_FILE_SIZE' |
            'SORT_MERGE' |
            'SORT_MESSAGE' |
            'SORT_MODE_SIZE' |
            'SORT_RETURN' |
            'SORT' |
            'SOURCE_COMPUTER' |
            'SPACE' |
            'SPACES' |
            'SPECIAL_NAMES' |
            'SQL' |
            'STANDARD_1' |
            'STANDARD_2' |
            'STANDARD' |
            'START' |
            'STATUS' |
            'STOP' |
            'STRING' |
            'SUBTRACT' |
            'SUPPRESS' |
            'SYMBOLIC' |
            'SYNC' |
            'SYNCHRONIZED' |
            'TALLY' |
            'TALLYING' |
            'TAPE' |
            'TEST' |
            'THAN' |
            'THEN' |
            'THROUGH' |
            'THRU' |
            'TIME' |
            'TIMES' |
            'TO' |
            'TOP' |
            'TRAILING' |
            'TRUE' |
            'UNIT' |
            'UNSTRING' |
            'UNTIL' |
            'UP' |
            'UPON' |
            'USAGE' |
            'USE' |
            'USING' |
            'VALUE' |
            'VALUES' |
            'VARYING' |
            'WHEN_COMPILED' |
            'WHEN' |
            'WITH' |
            'WORDS' |
            'WORKING_STORAGE' |
            'WRITE_ONLY' |
            'WRITE' |
            'ZERO' |
            'ZEROES' |
            'ZEROS' |
            'Lex_cobword' EAS2 . 
            (*
            Lex_cobword Cobword_56 |
            Lex_cobword .
            *)

(***********  WHAT DO THE LAST TWO ALTERNATES DO?  **************)
(*
Cobword_56 ::= Continuation 'Digits_cobword' |
               Cobword_56 Continuation 'Digits_cobword' .
*)

EAS2 ::= # |
         T101 ~EAS2 .

T101 ::= 'Continuation' 'Digits_cobword' .

(*
Code_set_clause ::= 'CODE_SET' Code_set_clause_57 Alphabet_name .

Code_set_clause_57 ::= # |
                       'IS' .
*)

Code_set_clause ::= 'CODE_SET' Alphabet_name |
                    T102 Alphabet_name .

T102 ::= 'CODE_SET' 'IS' .

(*
Collating_sequence ::= Collating_sequence_58 'SEQUENCE' Collating_sequence_59 Alphabet_name .

Collating_sequence_58 ::= # |
                          'COLLATING' .

Collating_sequence_59 ::= # |
                          'IS' .
*)

(*
Collating_sequence ::= 'SEQUENCE' Collating_sequence_59 Alphabet_name |
                       'COLLATING' 'SEQUENCE' Collating_sequence_59 Alphabet_name .

Collating_sequence_59 ::= # |
                          'IS' .
*)

Collating_sequence ::= 'SEQUENCE' Alphabet_name |
                       T103 Alphabet_name |
                       T104 Alphabet_name |
                       T106 Alphabet_name .

(********** 1 of these are extra ******)
T103 ::= 'COLLATING' 'SEQUENCE' .
T104 ::= 'SEQUENCE' 'IS' .
T105 ::= 'COLLATING' 'SEQUENCE' .
T106 ::= T105 'IS' .


Combinable_condition_0 ::= T108 Abbreviation_rest |
                           Condition_name_reference Abbreviation_rest .

T107 ::= '(' Expression .
T108 ::= T107 ')' .

Combinable_condition_1 ::= Abbreviated_combined_relation_conditions_2 |
                           Abbreviated_combined_relation_conditions_3 |
                           Class_condition |
                           Condition_name_reference |
                           Negated_simple_conditions |
                           Relation_condition Abbreviation_rest |
                           Sign_condition |
                           Simple_condition_1 .

Combinable_condition ::= Combinable_condition_0 |
                         ~Combinable_condition_1 .

(*
Comment_entries ::= Comment_entries_60 .

Comment_entries_60 ::= # |
                       Comment_entries_60 Comment_entry .
*)

(******* NOT CALLED FROM ANYWHERE !!! **************)
Comment_entries ::=  # |
                     Comment_entries Comment_entry .

Compute_statement_non_closed ::= Compute_statement_simple On_size_error_phrases .

Compute_statement_simple ::= T109 Arithmetic_expression .

T109 ::= 'COMPUTE' Compute_statement_simple_61 .
T110 ::= T109 Equal .

Compute_statement_simple_61 ::= Cobword_rounded |
                                Compute_statement_simple_61 Cobword_rounded .

Compute_statement ::= Compute_statement_non_closed 'END_COMPUTE' |
                      Compute_statement_simple 'END_COMPUTE' |
                      Compute_statement_simple .

Computer_name ::= System_name .

(*
Condition_name_reference ::= Condition_name Condition_name_reference_62 Condition_name_reference_63 .

Condition_name_reference_62 ::= # |
                                Condition_name_reference_62 In_data_or_file_or_mnemonic_name .

Condition_name_reference_63 ::= # |
                                Condition_name_reference_63 Subscript_parentheses .
*)

Condition_name_reference ::= Condition_name Condition_name_reference_62 |
                             Condition_name_reference Subscript_parentheses .

Condition_name_reference_62 ::= # |
                                Condition_name_reference_62 In_data_or_file_or_mnemonic_name .


Condition_name ::= Alphabetic_user_defined_word .

(*
Condition_value_clause ::= Values_are Condition_value_clause_64 .

Condition_value_clause_64 ::= Literal_through_literal |
                              Condition_value_clause_64 Literal_through_literal .
*)

Condition_value_clause ::= Values_are Literal_through_literal |
                           Condition_value_clause Literal_through_literal .

Condition_without_condition_reference ::= Combinable_condition_1 |
                                          Combinable_condition Condition_without_condition_reference_65 |
                                          Condition_name_reference Condition_without_condition_reference_66 .

Condition_without_condition_reference_65 ::= And_or_combinable_condition_1 |
                                             Condition_without_condition_reference_65 And_or_combinable_condition_1 .

Condition_without_condition_reference_66 ::= And_or_abbreviation_leaf |
                                             Condition_without_condition_reference_66 And_or_abbreviation_leaf .

(*
Condition ::= Combinable_condition Condition_67 .

Condition_67 ::= # |
                 Condition_67 And_or_combinable_condition_1 .
*)

Condition ::= Combinable_condition |
              Condition And_or_combinable_condition_1 .

(*
Configuration_section_paragraph ::= Dummy_statement Configuration_section_paragraph_68 |
                                    Object_computer_paragraph |
                                    Source_computer_paragraph |
                                    Special_names_paragraph .

Configuration_section_paragraph_68 ::= # |
                                       '.' .
*)

Configuration_section_paragraph ::= Dummy_statement |
                                    Dummy_statement '.' |
                                    Object_computer_paragraph |
                                    Source_computer_paragraph |
                                    Special_names_paragraph .


(*
Configuration_section_paragraphs ::= Configuration_section_paragraphs_69 .

Configuration_section_paragraphs_69 ::= # |
                                        Configuration_section_paragraphs_69 Configuration_section_paragraph .
*)

Configuration_section_paragraphs ::= # |
                                     Configuration_section_paragraphs Configuration_section_paragraph .

(*
Configuration_section ::= 'CONFIGURATION' 'SECTION' '.' Configuration_section_70 Configuration_section_paragraphs .

Configuration_section_70 ::= # |
                             Skip_statement_dot .
*)

Configuration_section ::= T111 Configuration_section_paragraphs |
                          T114 Configuration_section_paragraphs .

(********** 2 of these are extra ********)
T110 ::= 'CONFIGURATION' 'SECTION' .
T111 ::= T110 '.' .
T112 ::= 'CONFIGURATION' 'SECTION' .
T113 ::= T112 '.' .
T114 ::= T113 Skip_statement_dot .


Content_parameter_value ::= Identifier |
                            Literal .

(*
Content_parameter ::= Content_parameter_71 'CONTENT' Content_parameter_72 .

Content_parameter_71 ::= # |
                         'BY' .

Content_parameter_72 ::= Content_parameter_value |
                         Content_parameter_72 Content_parameter_value .
*)

Content_parameter ::= 'CONTENT' Content_parameter_value |
                      T115 Content_parameter_value |
                      Content_parameter Content_parameter_value .

T115 ::= 'BY' 'CONTENT' .

Continue_statement ::= 'CONTINUE' .

Copy_operand ::= Cobword |
                 Literal |
                 Quoted_pseudo_text .

Copy_statement_by_phrase ::= T116 Copy_operand .

T116 ::= Copy_operand 'BY' .

Copy_statement_closed_by_period ::= Copy_statement '.' .

(*
Copy_statement_replacing_phrase ::= 'REPLACING' Copy_statement_replacing_phrase_73 .

Copy_statement_replacing_phrase_73 ::= Copy_statement_by_phrase |
                                       Copy_statement_replacing_phrase_73 Copy_statement_by_phrase .
*)

Copy_statement_replacing_phrase ::= 'REPLACING' Copy_statement_by_phrase |
                                    Copy_statement_replacing_phrase Copy_statement_by_phrase .


Copy_statement ::= 'COPY' Alt_text_name_literal |
                   T117 In_library |
                   T117 'SUPPRESS' |
                   T118 'SUPPRESS' |
                   T117 Copy_statement_replacing_phrase |
                   T118 Copy_statement_replacing_phrase |
                   T119 Copy_statement_replacing_phrase |
                   T120 Copy_statement_replacing_phrase .

T117 ::= 'COPY' Alt_text_name_literal .
T118 ::= T117 In_library .
T119 ::= T117 'SUPPRESS' .
T120 ::= T118 'SUPPRESS' .
                      

Corresponding ::= 'CORR' |
                  'CORRESPONDING' .
(*
Count_in_identifier ::= 'COUNT' Count_in_identifier_77 Identifier .

Count_in_identifier_77 ::= # |
                           'IN' .
*)

Count_in_identifier ::= 'COUNT' Identifier |
                        T121 Identifier .

T121 ::= 'COUNT' 'IN' .


Currency_sign_clause ::= 'CURRENCY' Literal |
                         T122 Literal |
                         T123 Literal |
                         T124 Literal .

T122 ::= 'CURRENCY' 'SIGN' .
T123 ::= 'CURRENCY' 'IS' .
T124 ::= T122 'IS' .


Data_description_entry_clause ::= Blank_when_zero_clause |
                                  Condition_value_clause |
                                  External_clause |
                                  Global_clause |
                                  Justified_clause |
                                  Occurs_clause |
                                  Picture_clause |
                                  Redefines_clause |
                                  Renames_clause |
                                  Sign_clause |
                                  Synchronized_clause |
                                  Usage_clause .


Data_description_entry_clauses ::= # |
                                   Data_description_entry_clauses Data_description_entry_clause .


Data_description_entry ::= Cics_statement '.' |
                           Cics_statement |
                           Copy_statement '.' |
                           T125 Periods |
                           T127 Periods |
                           Skip_statement '.' |
                           Skip_statement |
                           Sql_statement '.' |
                           Sql_statement .

T125 ::= Level_number Data_description_entry_clauses .
T126 ::= Level_number Alt_data_name_filler .
T127 ::= T126 Data_description_entry_clauses .


Data_division_content ::= Data_division_content_83 Data_division_content_84 |
                          T128 Data_division_content_84 .

T128 ::= File_section Data_division_content_83 .

Data_division_content_83 ::= # |
                             Working_storage_section .

Data_division_content_84 ::= # |
                             Linkage_section .

Data_division ::= T130 Data_division_content .

T129 ::= 'DATA' 'DIVISION' .
T130 ::= T129 '.' .

Data_name_or_copy_book ::= Copy_statement_closed_by_period |
                           Data_name .

Data_name ::= 'EJECT' |
              'SKIP' |
              'SKIP1' |
              'SKIP2' |
              'SKIP3' |
              Alphabetic_user_defined_word .

Data_names ::= Data_name |
               Data_names Data_name .

Data_or_file_name ::= Alphabetic_user_defined_word .

Data_or_file_or_mnemonic_name ::= Alphabetic_user_defined_word .

Data_records_clause ::= 'DATA' Records_are Data_name |
                         Data_records_clause Data_name .


Date_compiled ::= 'DATE_COMPILED' |
                  'DATE_COMPILED' '.' |
                   Date_compiled Comment_entry .


Date_written ::= 'DATE_WRITTEN' |
                 'DATE_WRITTEN' '.' |
                  Date_written Comment_entry .

Date ::= 'DATE' |
         'DAY_OF_WEEK' |
         'DAY' |
         'TIME' .


Decimal_point_clause ::= 'DECIMAL_POINT' 'COMMA' |
                         T131 'COMMA' .

T131 ::= 'DECIMAL_POINT' 'IS' .


Declaratives_content ::= T134 Paragraphs .

T132 ::= Section_header '.' .
T133 ::= T132 Use_statement .
T134 ::= T133 '.' .

Declaratives ::= T138 '.' .

T135 ::= 'DECLARATIVES' '.' .
T136 ::= T135 Declaratives_92 .
T137 ::= T136 'END' .
T138 ::= T137 'DECLARATIVES' .

Declaratives_92 ::= Declaratives_content |
                    Declaratives_92 Declaratives_content .

Delete_statement_non_closed ::= Delete_statement_simple Invalid_key_phrases .


Delete_statement_simple ::= 'DELETE' File_name |
                            T139 'RECORD' .

T139 ::= 'DELETE' File_name .


Delete_statement ::= Delete_statement_non_closed 'END_DELETE' |
                     Delete_statement_simple 'END_DELETE' |
                     Delete_statement_simple .


Delimited_by_all_phrase ::= 'DELIMITED' Cobword_lit |
                            T140 Cobword_lit |
                            T141 Cobword_lit |
                            T142 Cobword_lit |
                             Delimited_by_all_phrase Or_all_cobword_lit .

T140 ::= 'DELIMITED' 'BY' .
T141 ::= 'DELIMITED' 'ALL' .
T142 ::= T140 'ALL' .


Delimited_by_phrase ::= T143 Cobword_lit_size |
                        T144 Cobword_lit_size |
                        Cobword_lit ~Delimited_by_phrase .

T143 ::= Cobword_lit  'DELIMITED' .
T144 ::= T143 'BY' .

Delimiter_in_identifier ::= 'DELIMITER' Identifier |
                            T145 Identifier .

T145 ::= 'DELIMITER' 'IN' .

Depending_on ::= 'DEPENDING' Data_name |
                 T146 Data_name .

T146 ::= 'DEPENDING' 'ON' .


Display_statement ::= T147 |
                      T147 Upon_environment_name |
                      T147 With_no_advancing |
                      T148 With_no_advancing .

T147 ::= 'DISPLAY' Display_statement_101 .
T148 ::= T147 Upon_environment_name .

Display_statement_101 ::= Cobword_lit |
                          Display_statement_101 Cobword_lit .


Divide_statement_non_closed ::= Divide_statement_simple On_size_error_phrases .


Divide_statement_simple ::= T152 Divide_statement_simple_104 |
                            T159 Identifier |
                            T160 Identifier |
                            T156 Divide_statement_simple_104 |
                            T162 Identifier |
                            T164 Identifier |
                            T153 Divide_statement_simple_104 .

T149 ::= 'DIVIDE' Cobword_lit .
T150 ::= T149 'BY' .
T151 ::= T150 Cobword_lit .
T152 ::= T151 'GIVING' .

T153 ::= T149 'INTO' .
T154 ::= T153 Cobword_lit .
T156 ::= T154 'GIVING' .

T157 ::= T152 Identifier .
T158 ::= T157 'REMAINDER' .
T159 ::= T157 'ROUNDED' .
T160 ::= T159 'REMAINDER' .

T161 ::= T156 Identifier .
T162 ::= T161 'REMAINDER' .
T163 ::= T161 'ROUNDED' .
T164 ::= T163 'REMAINDER' .


Divide_statement_simple_104 ::= Cobword_rounded |
                                Divide_statement_simple_104 Cobword_rounded .


Divide_statement ::= Divide_statement_non_closed 'END_DIVIDE' |
                     Divide_statement_simple 'END_DIVIDE' |
                     Divide_statement_simple .

Dummy_statement ::= Exit_statement |
                    Skip_statement .

Else_phrase ::= 'ELSE' Statement_list .

Emb_token ::= 'END_EXEC' .


Empty_when_clause ::= When_phrase |
                      Empty_when_clause When_phrase .

End_of_page ::= 'END_OF_PAGE' |
                'EOP' .

End_program ::= T166 '.' .

T165 ::= 'END' 'PROGRAM' .
T166 ::= T165  Program_name .


Entry_statement ::= 'ENTRY' Literal |
                    T167 Using_data_names .

T167 ::= 'ENTRY' Literal .
                        

Environment_division_content ::= Environment_division_content_112 |
                                 Configuration_section Environment_division_content_112 .

Environment_division_content_112 ::= # |
                                     Input_output_section .

Environment_division ::= T169 Environment_division_content |
                         T170 Environment_division_content .

T168 ::= 'ENVIRONMENT' 'DIVISION' .
T169 ::= T168 '.' .
T170 ::= T169 Skip_statement_dot .


Environment_name ::= System_name .


Equal_to ::= '=' |
             'EQUAL' |
             'EQUAL' 'TO' .

Equal ::= '=' |
          'EQUAL' .

Evaluate_condition ::= 'FALSE' |
                       'TRUE' |
                       Arithmetic_expression |
                       Condition_without_condition_reference .


Evaluate_phrase_1 ::= # |
                      'NOT' |
                      Through_expression |
                      'NOT' Through_expression .                          

Evaluate_phrase ::= 'ANY' |
                    'FALSE' |
                    'TRUE' |
                    Condition_without_condition_reference |
                    Evaluate_phrase_1 .

(******** HERE *********)

Evaluate_statement_non_closed ::= T172 When_clauses |
                                  T173 When_other_phrase .

T171 ::= 'EVALUATE' Evaluate_condition .
T172 ::= T171 Evaluate_statement_non_closed_117 .
T173 ::= T172 When_clauses .

Evaluate_statement_non_closed_117 ::= # |
                                      Evaluate_statement_non_closed_117 Also_phrase .

Evaluate_statement ::= Evaluate_statement_non_closed 'END_EVALUATE' .

Every_phrase_1 ::= 'Integer' 'RECORDS' .

Every_phrase_2 ::= 'END' Alt_reel_unit |
                   T174 Alt_reel_unit .

T174 ::= 'END' 'OF' .

Every_phrase ::= Every_phrase_1 |
                 Every_phrase_2 .

Exit_program_statement ::= 'EXIT' 'PROGRAM' .

Exit_statement ::= 'EXIT' .

Expression ::= Arithmetic_expression |
               Nonnumeric .

External_clause ::= 'EXTERNAL' |
                    'IS' 'EXTERNAL' .


Fce_access_mode ::= 'ACCESS' Alt_sequential_random_dynamic |
                    T175 Alt_sequential_random_dynamic |
                    T176 Alt_sequential_random_dynamic |
                    T177 Alt_sequential_random_dynamic |
                    T178 Relative_key_clause |
                    T179 Relative_key_clause |
                    T180 Relative_key_clause |
                    T181 Relative_key_clause .

T175 ::= 'ACCESS' 'MODE' .
T176 ::= 'ACCESS' 'IS'.
T177 ::= T175 'IS' .
T178 ::= 'ACCESS' Alt_sequential_random_dynamic .
T179 ::= T175 Alt_sequential_random_dynamic .
T180 ::= T176 Alt_sequential_random_dynamic .
T181 ::= T177 Alt_sequential_random_dynamic .

Fce_organization ::= Alt_indexed_relative_sequential |
                     Organization_is Alt_indexed_relative_sequential .


Fce_phrase ::= Alternate_record_key_clause |
               Fce_access_mode |
               Fce_organization |
               File_status_clause |
               Padding_character_clause |
               Password_clause |
               Record_delimiter_clause |
               Record_key_clause |
               Reserve_clause .

Figurative_constant_all ::= 'ALL' Literal .

Figurative_constant_simple ::= 'HIGH_VALUE' |
                               'HIGH_VALUES' |
                               'LOW_VALUE' |
                               'LOW_VALUES' |
                               'NULL' |
                               'NULLS' |
                               'QUOTE' |
                               'QUOTES' |
                               'SPACE' |
                               'SPACES' |
                               'ZERO' |
                               'ZEROES' |
                               'ZEROS' .

Figurative_constant ::= Figurative_constant_all |
                        Figurative_constant_simple .

File_and_sort_description_entry_clause ::= Block_contains_clause |
                                           Code_set_clause |
                                           Data_records_clause |
                                           External_clause |
                                           Global_clause |
                                           Label_records_clause |
                                           Linage_clause |
                                           Record_clause |
                                           Recording_mode_clause |
                                           Value_of_clause .


File_and_sort_description_entry_clauses ::= # |
                                            File_and_sort_description_entry_clauses File_and_sort_description_entry_clause .

File_and_sort_description_entry ::= T183 '.' .

T182 ::= Alt_fd_sd File_name .
T183 ::= T182 File_and_sort_description_entry_clauses .

File_control_entry ::= T185 '.' |
                       Skip_statement_dot .

T184 ::= Select_clause Assign_clause .
T185 ::= T184 File_control_entry_126 .

File_control_entry_126 ::= # |
                           File_control_entry_126 Fce_phrase .

File_control_paragraph ::= T186 File_control_paragraph_127 |
                           T186 Skip_statement_dot .

T186 ::= 'FILE_CONTROL' '.' .

File_control_paragraph_127 ::= # |
                               File_control_paragraph_127 File_control_entry .


File_name_position ::= File_name |
                       File_name Position .


File_name ::= Alphabetic_user_defined_word .


File_names ::= File_name |
               File_names File_name .

File_section_entry ::= File_and_sort_description_entry Data_description_entry |
                       File_section_entry Data_description_entry .

File_section ::= T187 File_section_131 |
                 T188 Skip_statement_dot .

T187 ::= 'FILE' 'SECTION' .
T188 ::= '.' .

File_section_131 ::= # |
                     File_section_131 File_section_entry .

File_status_clause ::= 'STATUS' Qualified_data_name |
                       T189 Qualified_data_name |
                       T190 Qualified_data_name |
                       T191 Qualified_data_name |
                       T192 Qualified_data_name |
                       T193 Qualified_data_name |
                       T194 Qualified_data_name |
                       T195 Qualified_data_name .

T189 ::= 'FILE' 'STATUS' .
T190 ::= 'STATUS' 'IS' .
T191 ::= T189 'IS' .
T192 ::= 'STATUS' Qualified_data_name .
T193 ::= T189 Qualified_data_name .
T194 ::= T190 Qualified_data_name .
T195 ::= T191 Qualified_data_name .


Footing ::= 'FOOTING' Alt_data_name_integer |
            T196 Alt_data_name_integer |
            T197 Alt_data_name_integer |
            T198 Alt_data_name_integer .

T196 ::= 'WITH' 'FOOTING' .
T197 ::= 'FOOTING' 'AT' .
T198 ::= T196 'AT' .


For_removal ::= 'REMOVAL' |
                'FOR' 'REMOVAL' .

From_environment_name ::= 'FROM' Cobword .

From_identifier ::= 'FROM' Identifier .

From_integer ::= 'Integer' |
                 'FROM' 'Integer' .

Giving_file_names ::= 'GIVING' File_name |
                       Giving_file_names File_name .

Global_clause ::= 'GLOBAL' |
                  'IS' 'GLOBAL' .

Go_to_statement_1 ::= 'GO' Procedure_name |
                      T199 Procedure_name .

T199 ::= 'GO' 'TO' .


Go_to_statement_2 ::= T201 Identifier |
                      T202 Identifier |
                      T205 Identifier |
                      T206 Identifier .

T200 ::= 'GO' Go_to_statement_2_143 .
T201 ::= T200 'DEPENDING' .
T202 ::= T201 'ON' .
T203 ::= 'GO' 'TO' .
T204 ::= T203 Go_to_statement_2_143 .
T205 ::= T204 'DEPENDING' .
T206 ::= T205 'ON' .

Go_to_statement_2_143 ::= Procedure_name |
                          Go_to_statement_2_143 Procedure_name .


Go_to_statement_3 ::= 'GO' 'MORE_LABELS' |
                      T207 'MORE_LABELS' .

T207 ::= 'GO' 'TO' .


Go_to_statement ::= Go_to_statement_1 |
                    Go_to_statement_2 |
                    Go_to_statement_3 .

Goback_statement ::= 'GOBACK' .


Greater_than_1 ::= 'GREATER' |
                   'GREATER' 'THAN' .

Greater_than_or_equal_to ::= '>=' |
                             T208 'EQUAL' |
                             T209 'TO' |
                             T211 'EQUAL' |
                             T212 'TO' |
                             'NOT' '<' |
                             'NOT' 'LESS' |
                             T213 'THAN' .

T208 ::= 'GREATER' 'OR' .
T209 ::= T208 'EQUAL' .
T210 ::= 'GREATER' 'THAN' .
T211 ::= T120 'OR' .
T212 ::= T211 'EQUAL' .
T213 ::= 'NOT' 'LESS' .

Greater_than ::= '>' |
                 Greater_than_1 .

I_o_control_paragraph ::=  'I_O_CONTROL' '.' |
                           T214 I_o_sam |
                           T214 I_o_sort_merge |
                           T215 I_o_sort_merge |
                           T214 Skip_statement_dot |
                           T215 Skip_statement_dot |
                           T216 Skip_statement_dot |
                           T217 Skip_statement_dot .

T214 ::= 'I_O_CONTROL' '.' .
T215 ::= T214 I_o_sam .
T216 ::= T214 I_o_sort_merge .
T217 ::= T215 I_o_sort_merge .


I_o_sam ::= Qsam_or_sam_or_vsam_i_o_control_entries '.' |
            Qsam_or_sam_or_vsam_i_o_control_entries ~I_o_sam .


I_o_sort_merge ::= Sort_merge_i_o_control_entries '.' .


Identification_division_content ::= # |
                                    Identification_division_content Identification_division_phrase .

Identification_division_phrase ::= Author |
                                   Date_compiled |
                                   Date_written |
                                   Installation |
                                   Remarks |
                                   Security .

Identification ::= 'ID' |
                   'IDENTIFICATION' .

Identifier_1 ::= Qualified_data_name EAS1 .

EAS1 ::= # |
         Reference_modification |
         Subscript_parentheses ~EAS1 .


Identifier_2 ::= 'LINAGE_COUNTER' |
                 'LINAGE_COUNTER' In_file_name .

Identifier ::= Identifier_1 |
               Identifier_2 .

If_statement_non_closed ::= T218 ~Statement_list |
                            T219 ~Statement_list |
                            T220 Else_phrase |
                            T221 Else_phrase .

T218 ::= 'IF' Condition .
T219 ::= T218 'THEN' .
T220 ::= T218 ~Statement_list .
T221 ::= T219 ~Statement_list .

If_statement ::= If_statement_non_closed 'END_IF' .

In_alphabet_name ::= 'IN' Alphabet_name .

In_data_or_file_name ::= In Data_or_file_name .

In_data_or_file_or_mnemonic_name ::= In Data_or_file_or_mnemonic_name .

In_file_name ::= In File_name .

In_label_name ::= In Label_name .

In_library ::= In Alt_library_name_literal .

In ::= 'IN' |
       'OF' .

Index_name ::= Alphabetic_user_defined_word .

Indexed_by ::= 'INDEXED' Index_name |
               T222 Index_name |
                Indexed_by Index_name .

T222 ::= 'INDEXED' 'BY' .

Initial_program ::= 'INITIAL'  |
                    'INITIAL' 'PROGRAM' |
                    'IS' 'INITIAL'  |
                    'IS' 'INITIAL' 'PROGRAM' .

T223 ::= 'IS' 'INITIAL' .

Initialize_replacing_argument ::= T224 Cobword_lit |
                                  T226 Cobword_lit .

T224 ::= Initialize_replacing_type 'BY' .
T225 ::= Initialize_replacing_type 'DATA' .
T226 ::= T225 'BY' .

Initialize_replacing_phrase ::= 'REPLACING' Initialize_replacing_argument |
                                 Initialize_replacing_phrase Initialize_replacing_argument .

Initialize_replacing_type ::= 'ALPHABETIC' |
                              'ALPHANUMERIC_EDITED' |
                              'ALPHANUMERIC' |
                              'DBCS' |
                              'EGCS' |
                              'NUMERIC_EDITED' |
                              'NUMERIC' .


Initialize_statement ::= 'INITIALIZE' EAS3.
                             
EAS3 ::= Identifier | 
         Initialize_replacing_phrase |
         Identifier ~EAS3 .

(** TRIED ***)
Input_output_section ::= T229 Input_output_section_169 .

T227 ::= 'INPUT_OUTPUT' 'SECTION' .
T228 ::= T227 '.' .
T229 ::= T228 Input_output_section_168 .

Input_output_section_168 ::= # |
                             File_control_paragraph .

Input_output_section_169 ::= # |
                             I_o_control_paragraph .

Input_procedure ::= T230 Procedures_thru |
                    T231 Procedures_thru .

T230 ::= 'INPUT' 'PROCEDURE' .
T231 ::= T230 'IS' .

Inspect_replacing_argument ::= T232 Cobword_lit |
                               Inspect_replacing_argument Before_after_phrase .

T232 ::= Cobword_lit 'BY' .

Inspect_replacing_phrase_1 ::= T233 Cobword_lit |
                               Inspect_replacing_phrase_1 Before_after_phrase .

T233 ::= 'CHARACTERS' 'BY' .

Inspect_replacing_phrase_2 ::= Alt_all_leading_first Inspect_replacing_argument |
                               Inspect_replacing_phrase_2 Inspect_replacing_argument .

Inspect_replacing_phrase ::= Inspect_replacing_phrase_1 |
                             Inspect_replacing_phrase_2 .


Inspect_statement_1 ::=  T235  Tallying_argument |
                         Inspect_statement_1 Tallying_argument .

T234 ::= 'INSPECT' Identifier .
T235 ::= T234 'TALLYING' .

Inspect_statement_2 ::=  T239 Cobword_lit |
                         Inspect_statement_2 Before_after_phrase .

T236 ::= 'INSPECT' Identifier .
T237 ::= T236 'CONVERTING' .
T238 ::= T237 Cobword_lit .
T239 ::= 'TO' .


Inspect_statement_3 ::=  T243 Inspect_replacing_phrase |
                         Inspect_statement_3 Inspect_replacing_phrase .

T240 ::= 'INSPECT' Identifier .
T241 ::= T240 'TALLYING' .
T242 ::= T241 Inspect_statement_3_176 .
T243 ::= T242 'REPLACING' .

Inspect_statement_3_176 ::= Tallying_argument |
                            Inspect_statement_3_176 Tallying_argument .


Inspect_statement_4 ::=  T245 Inspect_replacing_phrase |
                         Inspect_statement_4 Inspect_replacing_phrase .

T244 ::= 'INSPECT' Identifier .
T245 ::= T244 'REPLACING' .

Inspect_statement ::= Inspect_statement_1 |
                      Inspect_statement_2 |
                      Inspect_statement_3 |
                      Inspect_statement_4 .


Installation ::= 'INSTALLATION' |
                 'INSTALLATION' '.' |
                  Installation Comment_entry .

Integer_to ::= 'Integer' 'TO' .

Into_identifier ::= 'INTO' Identifier .


Invalid_key_phrases ::= Invalid_key_statement_list |
                        Invalid_key_statement_list Not_invalid_key_statement_list |
                        Not_invalid_key_statement_list .


Invalid_key_statement_list ::= 'INVALID' Statement_list |
                               'INVALID' 'KEY' Statement_list .

T246 ::= 'INVALID' 'KEY' .


Is_mnemonic_name ::= Mnemonic_name |
                     Mnemonic_name Special_names_paragraph_status_phrase |
                     'IS' Mnemonic_name |
                     T247 Special_names_paragraph_status_phrase .

T247 ::= 'IS' Mnemonic_name .


(******* THESE LOOK WRONG TO ME ********)
Is_not ::=  # |
            'IS' |
            'NOT' |
            'IS' 'NOT' .               

Is_or_is_not ::= Is_not |
                 Not_is .


Justified_clause ::= Justified |
                     Justified 'RIGHT' .

Justified ::= 'JUST' |
              'JUSTIFIED' .


Key_is_qualified_data_name ::= 'KEY' Qualified_data_name |
                               T248 Qualified_data_name .

T248 ::= 'KEY' 'IS' .

(*
Key_is_rel_op_qualified_data_name ::= 'KEY' Key_is_rel_op_qualified_data_name_189 Rel_op Qualified_data_name .

Key_is_rel_op_qualified_data_name_189 ::= # |
                                          'IS' .
*)

Key_is_rel_op_qualified_data_name ::= 'KEY' Rel_op Qualified_data_name |
                                      'KEY' 'IS' Rel_op Qualified_data_name .

(*
Key_is ::= 'KEY' Key_is_190 .

Key_is_190 ::= # |
               'IS' .
*)

Key_is ::= 'KEY' |
           'KEY' 'IS' .


Label_name ::= 'Integer' |
               User_defined_word .

Label_records_clause_tail ::= 'OMITTED' |
                              'STANDARD' |
                              Data_names .

Label_records_clause ::= 'LABEL' Records_are Label_records_clause_tail .

Leftmost_character_position ::= Arithmetic_expression .

Length ::= Arithmetic_expression .

Library_name ::= User_defined_word .

(*
Linage_clause ::= 'LINAGE' Linage_clause_191 Alt_data_name_integer Linage_clause_192 Linage_footing_phrase .

Linage_clause_191 ::= # |
                      'IS' .

Linage_clause_192 ::= # |
                      'LINES' .
*)

Linage_clause ::= 'LINAGE' Alt_data_name_integer Linage_clause_192 Linage_footing_phrase |
                  'LINAGE' 'IS' Alt_data_name_integer Linage_clause_192 Linage_footing_phrase .

Linage_clause_192 ::= # |
                      'LINES' .

(*
Linage_footing_phrase ::= Linage_footing_phrase_193 Linage_footing_phrase_194 Linage_footing_phrase_195 .

Linage_footing_phrase_193 ::= # |
                              Footing .

Linage_footing_phrase_194 ::= # |
                              Lines_top .

Linage_footing_phrase_195 ::= # |
                              Lines_bottom .
*)

Linage_footing_phrase ::= # |
                          Footing |
                          Lines_top |
                          Footing Lines_top |
                          Lines_bottom |
                          Footing Lines_bottom |
                          Lines_top Lines_bottom |
                          Footing Lines_top Lines_bottom .

(*
Lines_bottom ::= Lines_bottom_196 Lines_bottom_197 'BOTTOM' Alt_data_name_integer .

Lines_bottom_196 ::= # |
                     'LINES' .

Lines_bottom_197 ::= # |
                     'AT' .
*)

Lines_bottom ::= 'BOTTOM' Alt_data_name_integer |
                 'LINES' 'BOTTOM' Alt_data_name_integer |
                 'AT' 'BOTTOM' Alt_data_name_integer |
                 'LINES' 'AT' 'BOTTOM' Alt_data_name_integer .


(*
Lines_top ::= Lines_top_198 Lines_top_199 'TOP' Alt_data_name_integer .

Lines_top_198 ::= # |
                  'LINES' .

Lines_top_199 ::= # |
                  'AT' .
*)

Lines_top ::= 'TOP' Alt_data_name_integer |
              'LINES' 'TOP' Alt_data_name_integer |
              'AT' 'TOP' Alt_data_name_integer |
              'LINES' 'AT' 'TOP' Alt_data_name_integer .


Lines ::= 'LINE' |
          'LINES' .

(*
Linkage_section ::= 'LINKAGE' 'SECTION' '.' Linkage_section_200 .

Linkage_section_200 ::= # |
                        Linkage_section_200 Data_description_entry .
*)

Linkage_section ::= 'LINKAGE' 'SECTION' '.' |
                     Linkage_section Data_description_entry .

(*
Literal_through_literal ::= Literal Literal_through_literal_201 .

Literal_through_literal_201 ::= # |
                                Through_literal .
*)

Literal_through_literal ::= Literal |
                            Literal  Through_literal .

Literal ::= Dbcs |
            ~Figurative_constant |
            Nonnumeric |
            Numeric .

Memory_size_type ::= 'CHARACTERS' |
                     'MODULES' |
                     'WORDS' .

(*
Memory_size ::= 'MEMORY' Memory_size_202 'Integer' Memory_size_type .

Memory_size_202 ::= # |
                    'SIZE' .
*)

Memory_size ::= 'MEMORY' 'Integer' Memory_size_type |
                'MEMORY' 'SIZE' 'Integer' Memory_size_type .

Merge_statement_tail ::= Giving_file_names |
                         Output_procedure .

Merge_statement ::= 'MERGE' File_name Merge_statement_203 Merge_statement_204 'USING' File_name Merge_statement_205 Merge_statement_tail .

Merge_statement_203 ::= On_key_phrase |
                        Merge_statement_203 On_key_phrase .

Merge_statement_204 ::= # |
                        Collating_sequence .

Merge_statement_205 ::= File_name |
                        Merge_statement_205 File_name .

Mnemonic_name ::= Alphabetic_user_defined_word .

(*
Move_statement_1 ::= 'MOVE' Cobword_lit 'TO' Move_statement_1_206 .

Move_statement_1_206 ::= Identifier |
                         Move_statement_1_206 Identifier .
*)

Move_statement_1 ::= 'MOVE' Cobword_lit 'TO' Identifier |
                      Move_statement_1 Identifier .

(*
Move_statement_2 ::= 'MOVE' Corresponding Identifier 'TO' Move_statement_2_207 .

Move_statement_2_207 ::= Identifier |
                         Move_statement_2_207 Identifier .
*)

Move_statement_2 ::= 'MOVE' Corresponding Identifier 'TO' Identifier |
                      Move_statement_2 Identifier .


Move_statement ::= 'MOVE' Cobword_lit To_identifier Move_statement_208 |
                   Move_statement_1 |
                   Move_statement_2 .

Move_statement_208 ::= To_identifier |
                       Move_statement_208 To_identifier .

Multiply_statement_non_closed ::= Multiply_statement_simple On_size_error_phrases .

(*
Multiply_statement_simple ::= 'MULTIPLY' Cobword_lit 'BY' Cobword_lit 'GIVING' Multiply_statement_simple_209 |
                              'MULTIPLY' Cobword_lit 'BY' Multiply_statement_simple_210 .

Multiply_statement_simple_209 ::= Cobword_rounded |
                                  Multiply_statement_simple_209 Cobword_rounded .

Multiply_statement_simple_210 ::= Cobword_rounded |
                                  Multiply_statement_simple_210 Cobword_rounded .
*)


Multiply_statement_simple ::= 'MULTIPLY' Cobword_lit 'BY' Cobword_lit 'GIVING' Cobword_rounded |
                              'MULTIPLY' Cobword_lit 'BY' Cobword_rounded |
                               Multiply_statement_simple Cobword_rounded .


Multiply_statement ::= Multiply_statement_non_closed 'END_MULTIPLY' |
                       Multiply_statement_simple 'END_MULTIPLY' |
                       Multiply_statement_simple .

Negated_simple_conditions ::= 'NOT' Combinable_condition .

Next_sentence_statement ::= 'NEXT' 'SENTENCE' .

No_rewind ::= 'NO' 'REWIND' .

(*
Non_empty_statement_list ::= Non_empty_statement_list_211 Statement_non_closed_inj |
                             Non_empty_statement_list_212 .

Non_empty_statement_list_211 ::= # |
                                 Non_empty_statement_list_211 Statement_inj .

Non_empty_statement_list_212 ::= Statement_inj |
                                 Non_empty_statement_list_212 Statement_inj .
*)

Non_empty_statement_list ::= Statement_non_closed_inj |
                             Non_empty_statement_list_212 Statement_non_closed_inj |
                             Non_empty_statement_list_212 .

Non_empty_statement_list_212 ::= Statement_inj |
                                 Non_empty_statement_list_212 ~Statement_inj .

Nonnumeric_dq_continuation ::= 'Continuation' |
                               'Continuation' Nonnumeric_dq .

Nonnumeric_dq_opt_closed_continuation ::= 'Continuation' |
                                          'Continuation' Nonnumeric_dq_opt_non_closed .

Nonnumeric_dq_opt_non_closed ::= Nonnumeric_dq_non_closed |
                                 Nonnumeric_dq .

Nonnumeric_sq_continuation ::= 'Continuation' |
                               'Continuation' Nonnumeric_sq .

Nonnumeric_sq_opt_closed_continuation ::= 'Continuation' |
                                          'Continuation' Nonnumeric_sq_opt_non_closed .

Nonnumeric_sq_opt_non_closed ::= Nonnumeric_sq_non_closed |
                                 Nonnumeric_sq .

Nonnumeric ::= Nonnumeric_dq_opt_non_closed Nonnumeric_213 Nonnumeric_dq_continuation |
               Nonnumeric_dq |
               Nonnumeric_sq_opt_non_closed Nonnumeric_214 Nonnumeric_sq_continuation |
               Nonnumeric_sq .

Nonnumeric_213 ::= # |
                   Nonnumeric_213 Nonnumeric_dq_opt_closed_continuation .

Nonnumeric_214 ::= # |
                   Nonnumeric_214 Nonnumeric_sq_opt_closed_continuation .

(*
Not_at_end_of_page_statement_list ::= 'NOT' Not_at_end_of_page_statement_list_215 End_of_page Statement_list .

Not_at_end_of_page_statement_list_215 ::= # |
                                          'AT' .
*)

Not_at_end_of_page_statement_list ::= 'NOT' End_of_page Statement_list |
                                      'NOT' 'AT' End_of_page Statement_list .

(*
Not_at_end_statement_list ::= 'NOT' Not_at_end_statement_list_216 'END' Statement_list .

Not_at_end_statement_list_216 ::= # |
                                  'AT' .
*)

Not_at_end_statement_list ::= 'NOT' 'END' Statement_list |
                              'NOT' 'AT' 'END' Statement_list .

(*
Not_invalid_key_statement_list ::= 'NOT' 'INVALID' Not_invalid_key_statement_list_217 Statement_list .

Not_invalid_key_statement_list_217 ::= # |
                                       'KEY' .
*)

Not_invalid_key_statement_list ::= 'NOT' 'INVALID' Statement_list |
                                   'NOT' 'INVALID' 'KEY' Statement_list .

Not_is ::= 'NOT' 'IS' .

(*
Not_on_exception_statement_list ::= 'NOT' Not_on_exception_statement_list_218 'EXCEPTION' Statement_list .

Not_on_exception_statement_list_218 ::= # |
                                        'ON' .
*)

Not_on_exception_statement_list ::= 'NOT' 'EXCEPTION' Statement_list |
                                    'NOT' 'ON' 'EXCEPTION' Statement_list .

(*
Not_on_overflow_statement_list ::= 'NOT' Not_on_overflow_statement_list_219 'OVERFLOW' Statement_list .

Not_on_overflow_statement_list_219 ::= # |
                                       'ON' .
*)

Not_on_overflow_statement_list ::= 'NOT' 'OVERFLOW' Statement_list |
                                   'NOT' 'ON' 'OVERFLOW' Statement_list .

(*
Not_on_size_error_statement_list ::= 'NOT' Not_on_size_error_statement_list_220 'SIZE' 'ERROR' Statement_list .

Not_on_size_error_statement_list_220 ::= # |
                                         'ON' .
*)

Not_on_size_error_statement_list ::= 'NOT' 'SIZE' 'ERROR' Statement_list |
                                     'NOT' 'ON' 'SIZE' 'ERROR' Statement_list .

(*
Nr_lines_phrase ::= Cobword_int Nr_lines_phrase_221 .

Nr_lines_phrase_221 ::= # |
                        Lines .
*)

Nr_lines_phrase ::= Cobword_int |
                    Cobword_int Lines .                        


Numeric ::= '-' Unsigned_numeric |
            Numeric_222 Unsigned_numeric .

Numeric_222 ::= # |
                '+' .

(*** TRIED ***)
Object_computer_name ::= Computer_name Object_computer_name_223 Object_computer_paragraph_sequence_phrase '.' .

Object_computer_name_223 ::= # |
                             Memory_size .


Object_computer_paragraph_sequence_phrase ::= Object_computer_paragraph_sequence_phrase_224 Object_computer_paragraph_sequence_phrase_225 .

Object_computer_paragraph_sequence_phrase_224 ::= # |
                                                  Program_collating_sequence .

Object_computer_paragraph_sequence_phrase_225 ::= # |
                                                  Segment_limit .

(*
Object_computer_paragraph ::= 'OBJECT_COMPUTER' '.' Object_computer_paragraph_226 .

Object_computer_paragraph_226 ::= # |
                                  Object_computer_name .
*)

Object_computer_paragraph ::= 'OBJECT_COMPUTER' '.' |
                              'OBJECT_COMPUTER' '.' Object_computer_name .
                                  
(*
Occurs_clause_1 ::= 'OCCURS' 'Integer' Occurs_clause_1_227 Occurs_clause_1_228 Occurs_clause_1_229 .

Occurs_clause_1_227 ::= # |
                        'TIMES' .

Occurs_clause_1_228 ::= # |
                        Occurs_clause_1_228 Occurs_clause_key .

Occurs_clause_1_229 ::= # |
                        Indexed_by .
*)

Occurs_clause_1 ::= 'OCCURS' 'Integer' Occurs_clause_1_228 Occurs_clause_1_229 |
                    'OCCURS' 'Integer' 'TIMES' Occurs_clause_1_228 Occurs_clause_1_229 .

Occurs_clause_1_227 ::= # |
                        'TIMES' .

Occurs_clause_1_228 ::= # |
                        Occurs_clause_1_228 Occurs_clause_key .

Occurs_clause_1_229 ::= # |
                        Indexed_by .

(*
Occurs_clause_2 ::= 'OCCURS' Occurs_clause_2_230 'Integer' Occurs_clause_2_231 'DEPENDING' Occurs_clause_2_232 Qualified_data_name Occurs_clause_2_233 Occurs_clause_2_234 .

Occurs_clause_2_230 ::= # |
                        Integer_to .

Occurs_clause_2_232 ::= # |
                        'ON' .
*)

Occurs_clause_2 ::= 'OCCURS' 'Integer' Occurs_clause_2_231 'DEPENDING' Qualified_data_name Occurs_clause_2_233 Occurs_clause_2_234 |
                    'OCCURS' Integer_to 'Integer' Occurs_clause_2_231 'DEPENDING' Qualified_data_name Occurs_clause_2_233 Occurs_clause_2_234 |
                    'OCCURS' 'Integer' Occurs_clause_2_231 'DEPENDING' 'ON' Qualified_data_name Occurs_clause_2_233 Occurs_clause_2_234 |
                    'OCCURS' Integer_to 'Integer' Occurs_clause_2_231 'DEPENDING' 'ON' Qualified_data_name Occurs_clause_2_233 Occurs_clause_2_234 .



Occurs_clause_2_231 ::= # |
                        'TIMES' .

Occurs_clause_2_233 ::= # |
                        Occurs_clause_2_233 Occurs_clause_key .

Occurs_clause_2_234 ::= # |
                        Indexed_by .

(*
Occurs_clause_key ::= Alt_ascending_descending Occurs_clause_key_235 Occurs_clause_key_236 Occurs_clause_key_237 .

Occurs_clause_key_235 ::= # |
                          'KEY' .

Occurs_clause_key_236 ::= # |
                          'IS' .

Occurs_clause_key_237 ::= Qualified_data_name |
                          Occurs_clause_key_237 Qualified_data_name .
*)

Occurs_clause_key ::= Alt_ascending_descending Qualified_data_name |
                      Alt_ascending_descending 'KEY' Qualified_data_name |
                      Alt_ascending_descending 'IS' Qualified_data_name |
                      Alt_ascending_descending 'KEY' 'IS' Qualified_data_name |
                      Occurs_clause_key Qualified_data_name .


Occurs_clause ::= Occurs_clause_1 |
                  Occurs_clause_2 .

(*
Off_status ::= 'OFF' Off_status_238 Off_status_239 Condition .


Off_status_238 ::= # |
                   'STATUS' .

Off_status_239 ::= # |
                   'IS' .
*)

Off_status ::= 'OFF' Condition |
               'OFF' 'STATUS' Condition |
               'OFF' 'IS' Condition |
               'OFF' 'STATUS' 'IS' Condition .

(*
On_exception_statement_list ::= On_exception_statement_list_240 'EXCEPTION' Statement_list .

On_exception_statement_list_240 ::= # |
                                    'ON' .
*)

On_exception_statement_list ::= 'EXCEPTION' Statement_list |
                                'ON' 'EXCEPTION' Statement_list .


(*
On_key_is_phrase ::= On_key_is_phrase_241 Alt_ascending_descending On_key_is_phrase_242 On_key_is_phrase_243 .

On_key_is_phrase_241 ::= # |
                         'ON' .

On_key_is_phrase_242 ::= # |
                         Key_is .

On_key_is_phrase_243 ::= Qualified_data_name |
                         On_key_is_phrase_243 Qualified_data_name .
*)

On_key_is_phrase ::= Alt_ascending_descending Qualified_data_name |
                     'ON' Alt_ascending_descending Qualified_data_name |
                     Alt_ascending_descending Key_is Qualified_data_name |
                     'ON' Alt_ascending_descending Key_is Qualified_data_name |
                     On_key_is_phrase Qualified_data_name .

(*
On_key_phrase ::= On_key_phrase_244 Alt_ascending_descending On_key_phrase_245 On_key_phrase_246 .

On_key_phrase_244 ::= # |
                      'ON' .

On_key_phrase_245 ::= # |
                      'KEY' .

On_key_phrase_246 ::= Qualified_data_name |
                      On_key_phrase_246 Qualified_data_name .
*)

On_key_phrase ::= Alt_ascending_descending  Qualified_data_name |
                  'ON' Alt_ascending_descending Qualified_data_name |
                  Alt_ascending_descending 'KEY' Qualified_data_name |
                  'ON' Alt_ascending_descending 'KEY' Qualified_data_name |
                  On_key_phrase Qualified_data_name .


(*
On_overflow_phrases ::= Not_on_overflow_statement_list |
                        On_overflow_statement_list On_overflow_phrases_247 .

On_overflow_phrases_247 ::= # |
                            Not_on_overflow_statement_list .
*)

On_overflow_phrases ::= Not_on_overflow_statement_list |
                        On_overflow_statement_list |
                        On_overflow_statement_list Not_on_overflow_statement_list .
                            

(*
On_overflow_statement_list ::= On_overflow_statement_list_248 'OVERFLOW' Statement_list .

On_overflow_statement_list_248 ::= # |
                                   'ON' .
*)

On_overflow_statement_list ::= 'OVERFLOW' Statement_list |
                               'ON' 'OVERFLOW' Statement_list .

(*
On_size_error_phrases ::= Not_on_size_error_statement_list |
                          On_size_error_statement_list On_size_error_phrases_249 .

On_size_error_phrases_249 ::= # |
                              
*)

On_size_error_phrases ::= Not_on_size_error_statement_list |
                          On_size_error_statement_list |
                          On_size_error_statement_list Not_on_size_error_statement_list .

(*
On_size_error_statement_list ::= On_size_error_statement_list_250 'SIZE' 'ERROR' Statement_list .

On_size_error_statement_list_250 ::= # |
                                     'ON' .
*)

On_size_error_statement_list ::= 'SIZE' 'ERROR' Statement_list |
                                 'ON' 'SIZE' 'ERROR' Statement_list .

On_statement ::= 'ON' Cobword_lit Statement_list .

(*
On_status ::= 'ON' On_status_251 On_status_252 Condition .

On_status_251 ::= # |
                  'STATUS' .

On_status_252 ::= # |
                  'IS' .
*)

On_status ::= 'ON' Condition |
              'ON' 'STATUS' Condition |
              'ON' 'IS' Condition |
              'ON' 'STATUS' 'IS' Condition .

(*
Open_statement_extend ::= 'EXTEND' Open_statement_extend_253 .

Open_statement_extend_253 ::= File_name |
                              Open_statement_extend_253 File_name .
*)

Open_statement_extend ::= 'EXTEND' File_name |
                           Open_statement_extend File_name .



(*
Open_statement_i_o ::= 'I_O' Open_statement_i_o_254 .

Open_statement_i_o_254 ::= File_name |
                           Open_statement_i_o_254 File_name .
*)

Open_statement_i_o ::= 'I_O' File_name |
                        Open_statement_i_o File_name .


(*
Open_statement_input_file_name ::= File_name Open_statement_input_file_name_255 .

Open_statement_input_file_name_255 ::= # |
                                       Alt_reversed_with_no_rewind .
*)

Open_statement_input_file_name ::= File_name |
                                   File_name Alt_reversed_with_no_rewind .


(*
Open_statement_input ::= 'INPUT' Open_statement_input_256 .

Open_statement_input_256 ::= Open_statement_input_file_name |
                             Open_statement_input_256 Open_statement_input_file_name .
*)

Open_statement_input ::= 'INPUT' Open_statement_input_file_name |
                          Open_statement_input Open_statement_input_file_name .

(*
Open_statement_output_file_name ::= File_name Open_statement_output_file_name_257 .

Open_statement_output_file_name_257 ::= # |
                                        With_no_rewind .
*)

Open_statement_output_file_name ::= File_name |
                                    File_name With_no_rewind .

(*
Open_statement_output ::= 'OUTPUT' Open_statement_output_258 .

Open_statement_output_258 ::= Open_statement_output_file_name |
                              Open_statement_output_258 Open_statement_output_file_name .
*)

Open_statement_output ::= 'OUTPUT' Open_statement_output_file_name |
                          Open_statement_output Open_statement_output_file_name .

Open_statement_phrase ::= Open_statement_extend |
                          Open_statement_i_o |
                          Open_statement_input |
                          Open_statement_output .

(*
Open_statement ::= 'OPEN' Open_statement_259 .

Open_statement_259 ::= Open_statement_phrase |
                       Open_statement_259 Open_statement_phrase .
*)

Open_statement ::= 'OPEN' Open_statement_phrase |
                    Open_statement Open_statement_phrase .

(*
Or_all_cobword_lit ::= 'OR' Or_all_cobword_lit_260 Cobword_lit .

Or_all_cobword_lit_260 ::= # |
                           'ALL' .
*)

Or_all_cobword_lit ::= 'OR' Cobword_lit |
                       'OR' 'ALL' Cobword_lit .

(*
Organization_is ::= 'ORGANIZATION' Organization_is_261 .

Organization_is_261 ::= # |
                        'IS' .
*)

Organization_is ::= 'ORGANIZATION' |
                    'ORGANIZATION' 'IS' .

(*
Output_procedure ::= 'OUTPUT' 'PROCEDURE' Output_procedure_262 Procedures_thru .

Output_procedure_262 ::= # |
                         'IS' .
*)

Output_procedure ::= 'OUTPUT' 'PROCEDURE' Procedures_thru |
                     'OUTPUT' 'PROCEDURE' 'IS' Procedures_thru .

(*
Padding_character_clause ::= 'PADDING' Padding_character_clause_263 Padding_character_clause_264 Alt_qualified_data_name_literal .

Padding_character_clause_263 ::= # |
                                 'CHARACTER' .

Padding_character_clause_264 ::= # |
                                 'IS' .
*)

Padding_character_clause ::= 'PADDING' Alt_qualified_data_name_literal |
                             'PADDING' 'CHARACTER' Alt_qualified_data_name_literal |
                             'PADDING' 'IS' Alt_qualified_data_name_literal |
                             'PADDING' 'CHARACTER' 'IS' Alt_qualified_data_name_literal .


Page_phrase ::= 'PAGE' |
                Nr_lines_phrase .

(*
Paragraph_without_header ::= Paragraph_without_header_265 |
                             Paragraph_without_header_266 Paragraph_without_header_267 .

Paragraph_without_header_265 ::= Dummy_statement |
                                 Paragraph_without_header_265 Dummy_statement .

Paragraph_without_header_266 ::= Sentence |
                                 Paragraph_without_header_266 Sentence .

Paragraph_without_header_267 ::= # |
                                 Paragraph_without_header_267 Dummy_statement .
*)

Paragraph_without_header ::= Dummy_statement  |
                             Paragraph_without_header_266 |
                             Dummy_statement ~Paragraph_without_header .

Paragraph_without_header_266 ::= Sentence |
                                 Paragraph_without_header_266 Sentence .

Paragraph ::= Altered_goto |
              Label_name '.' Paragraph_268 Paragraph_269 .

Paragraph_268 ::= # |
                  Paragraph_268 Sentence .

Paragraph_269 ::= # |
                  Paragraph_269 Dummy_statement .

(*
Paragraphs ::= Paragraphs_270 Paragraphs_271 .

Paragraphs_270 ::= # |
                   Paragraph_without_header .

Paragraphs_271 ::= # |
                   Paragraphs_271 Paragraph .
*)

Paragraphs ::= # |
               Paragraph_without_header |
               Paragraph ~Paragraphs .


Parameter_or_copy_book ::= Copy_statement_closed_by_period |
                           Parameter .

Parameter ::= Content_parameter |
              Reference_parameter .

(*
Password_clause ::= 'PASSWORD' Password_clause_272 Data_name .

Password_clause_272 ::= # |
                        'IS' .
*)

Password_clause ::= 'PASSWORD' Data_name |
                    'PASSWORD' 'IS' Data_name .


Perform_after_phrase ::= 'AFTER' Identifier 'FROM' Cobword_lit 'BY' Cobword_lit 'UNTIL' Condition .

Perform_inline ::= 'PERFORM' Perform_inline_273 Statement_list .

Perform_inline_273 ::= # |
                       Perform_inline_273 Perform_phrase .

Perform_phrase ::= Perform_times_phrase |
                   Perform_until_phrase |
                   Perform_varying_after_phrase .

(*
Perform_procedures ::= 'PERFORM' Procedures_thru Perform_procedures_274 .

Perform_procedures_274 ::= # |
                           Perform_procedures_274 Perform_phrase .
*)

Perform_procedures ::= 'PERFORM' Procedures_thru |
                       Perform_procedures Perform_phrase .

Perform_statement_non_closed ::= Perform_inline .

Perform_statement_simple ::= Perform_procedures .

Perform_statement ::= Perform_statement_non_closed 'END_PERFORM' |
                      Perform_statement_simple .

Perform_times_phrase ::= Cobword_int 'TIMES' .

(*
Perform_until_phrase ::= Perform_until_phrase_275 'UNTIL' Condition .

Perform_until_phrase_275 ::= # |
                             With_test .
*)

Perform_until_phrase ::= 'UNTIL' Condition |
                         With_test 'UNTIL' Condition .


(*
Perform_varying_after_phrase ::= Perform_varying_phrase Perform_varying_after_phrase_276 .

Perform_varying_after_phrase_276 ::= # |
                                     Perform_varying_after_phrase_276 Perform_after_phrase .
*)

Perform_varying_after_phrase ::= Perform_varying_phrase |
                                 Perform_varying_after_phrase Perform_after_phrase .

(*
Perform_varying_phrase ::= Perform_varying_phrase_277 'VARYING' Identifier 'FROM' Cobword_lit 'BY' Cobword_lit 'UNTIL' Condition .

Perform_varying_phrase_277 ::= # |
                               With_test .
*)

Perform_varying_phrase ::= 'VARYING' Identifier 'FROM' Cobword_lit 'BY' Cobword_lit 'UNTIL' Condition |
                           With_test 'VARYING' Identifier 'FROM' Cobword_lit 'BY' Cobword_lit 'UNTIL' Condition .


(*
Periods ::= Periods_278 .

Periods_278 ::= '.' |
                Periods_278 '.' .
*)

Periods ::= '.' |
            Periods '.' .

(*
Picture_clause ::= Picture Picture_clause_279 Picture_string .

Picture_clause_279 ::= # |
                       'IS' .
*)

Picture_clause ::= Picture Picture_string |
                   Picture 'IS' Picture_string .


Picture ::= 'PIC' |
            'PICTURE' .

Position ::= 'POSITION' 'Integer' .

Power_tail ::= '**' ~Basis .

(*
Power ::= Power_280 Basis Power_281 .

Power_280 ::= # |
              Alt_plus_minus .

Power_281 ::= # |
              Power_281 Power_tail .
*)

Power ::= ~Basis |
          Alt_plus_minus ~Basis |
          Power Power_tail .

(*
Procedure_division_header ::= 'PROCEDURE' 'DIVISION' Using_phrase '.' Procedure_division_header_282 .

Procedure_division_header_282 ::= # |
                                  Declaratives .
*)

Procedure_division_header ::= 'PROCEDURE' 'DIVISION' Using_phrase '.' |
                              'PROCEDURE' 'DIVISION' Using_phrase '.' Declaratives .


Procedure_division ::= Procedure_division_header Sections .

(*
Procedure_name ::= Label_name Procedure_name_283 .

Procedure_name_283 ::= # |
                       In_label_name .
*)

Procedure_name ::= Label_name |
                   Label_name In_label_name .                       

(*
Procedure_names ::= Procedure_names_284 .

Procedure_names_284 ::= Procedure_name |
                        Procedure_names_284 Procedure_name .
*)

Procedure_names ::= Procedure_name |
                    Procedure_names Procedure_name .


(*
Procedure_to_procedure ::= Procedure_name 'TO' Procedure_to_procedure_285 Procedure_name .

Procedure_to_procedure_285 ::= # |
                               Proceed_to .
*)

Procedure_to_procedure ::= Procedure_name 'TO' Procedure_name |
                           Procedure_name 'TO' Proceed_to Procedure_name .

(*
Procedures_thru ::= Procedure_name Procedures_thru_286 .

Procedures_thru_286 ::= # |
                        Through_procedure_name .
*)

Procedures_thru ::= Procedure_name |
                    Procedure_name Through_procedure_name .
                        

Proceed_to ::= 'PROCEED' 'TO' .

(*
Program_collating_sequence ::= Program_collating_sequence_287 Program_collating_sequence_288 'SEQUENCE' Program_collating_sequence_289 Alphabet_name .

Program_collating_sequence_287 ::= # |
                                   'PROGRAM' .

Program_collating_sequence_288 ::= # |
                                   'COLLATING' .

Program_collating_sequence_289 ::= # |
                                   'IS' .
*)

Program_collating_sequence ::= 'SEQUENCE' Alphabet_name |
                               'PROGRAM' 'SEQUENCE' Alphabet_name |
                               'COLLATING' 'SEQUENCE' Alphabet_name |
                               'PROGRAM' 'COLLATING' 'SEQUENCE' Alphabet_name |
                               'SEQUENCE' 'IS' Alphabet_name |
                               'PROGRAM' 'SEQUENCE' 'IS' Alphabet_name |
                               'COLLATING' 'SEQUENCE' 'IS' Alphabet_name |
                               'PROGRAM' 'COLLATING' 'SEQUENCE' 'IS' Alphabet_name .


Program_id_cobol_source_program ::= 'PROGRAM_ID' Program_name Program_id_cobol_source_program_291 Program_id_cobol_source_program_292 |
                                    'PROGRAM_ID' '.' Program_name Program_id_cobol_source_program_291 Program_id_cobol_source_program_292 .


Program_id_cobol_source_program_291 ::= # |
                                        Initial_program .

Program_id_cobol_source_program_292 ::= # |
                                        '.' .

Program_name ::= Nonnumeric |
                 User_defined_word .


(*** TRIED ***)
Qsam_or_sam_or_vsam_i_o_control_entries_1 ::= 'RERUN' 'ON' Alt_assignment_name_file_name Qsam_or_sam_or_vsam_i_o_control_entries_1_293 Every_phrase Qsam_or_sam_or_vsam_i_o_control_entries_1_294 File_name .

Qsam_or_sam_or_vsam_i_o_control_entries_1_293 ::= # |
                                                  'EVERY' .

Qsam_or_sam_or_vsam_i_o_control_entries_1_294 ::= # |
                                                  'OF' .

(*
Qsam_or_sam_or_vsam_i_o_control_entries_2 ::= 'SAME' Qsam_or_sam_or_vsam_i_o_control_entries_2_295 Qsam_or_sam_or_vsam_i_o_control_entries_2_296 Qsam_or_sam_or_vsam_i_o_control_entries_2_297 File_name Qsam_or_sam_or_vsam_i_o_control_entries_2_298 .

Qsam_or_sam_or_vsam_i_o_control_entries_2_295 ::= # |
                                                  'RECORD' .

Qsam_or_sam_or_vsam_i_o_control_entries_2_296 ::= # |
                                                  'AREA' .

Qsam_or_sam_or_vsam_i_o_control_entries_2_297 ::= # |
                                                  'FOR' .

Qsam_or_sam_or_vsam_i_o_control_entries_2_298 ::= File_name |
                                                  Qsam_or_sam_or_vsam_i_o_control_entries_2_298 File_name .
*)

Qsam_or_sam_or_vsam_i_o_control_entries_2 ::= 'SAME' Qsam_or_sam_or_vsam_i_o_control_entries_2_295 Qsam_or_sam_or_vsam_i_o_control_entries_2_296 Qsam_or_sam_or_vsam_i_o_control_entries_2_297 File_name File_name |
                                               Qsam_or_sam_or_vsam_i_o_control_entries_2 File_name .

Qsam_or_sam_or_vsam_i_o_control_entries_2_295 ::= # |
                                                  'RECORD' .

Qsam_or_sam_or_vsam_i_o_control_entries_2_296 ::= # |
                                                  'AREA' .

Qsam_or_sam_or_vsam_i_o_control_entries_2_297 ::= # |
                                                  'FOR' .


(*
Qsam_or_sam_or_vsam_i_o_control_entries_3 ::= 'MULTIPLE' 'FILE' Qsam_or_sam_or_vsam_i_o_control_entries_3_299 Qsam_or_sam_or_vsam_i_o_control_entries_3_300 Qsam_or_sam_or_vsam_i_o_control_entries_3_301 .

Qsam_or_sam_or_vsam_i_o_control_entries_3_299 ::= # |
                                                  'TAPE' .

Qsam_or_sam_or_vsam_i_o_control_entries_3_300 ::= # |
                                                  'CONTAINS' .

Qsam_or_sam_or_vsam_i_o_control_entries_3_301 ::= File_name_position |
                                                  Qsam_or_sam_or_vsam_i_o_control_entries_3_301 File_name_position .
*)

Qsam_or_sam_or_vsam_i_o_control_entries_3 ::= 'MULTIPLE' 'FILE' File_name_position |
                                              'MULTIPLE' 'FILE' 'CONTAINS' File_name_position |
                                              'MULTIPLE' 'FILE' 'TAPE' File_name_position |
                                              'MULTIPLE' 'FILE' 'TAPE' 'CONTAINS' File_name_position |
                                               Qsam_or_sam_or_vsam_i_o_control_entries_3 File_name_position .

(*
Qsam_or_sam_or_vsam_i_o_control_entries_4 ::= 'APPLY' 'WRITE_ONLY' Qsam_or_sam_or_vsam_i_o_control_entries_4_302 Qsam_or_sam_or_vsam_i_o_control_entries_4_303 .

Qsam_or_sam_or_vsam_i_o_control_entries_4_302 ::= # |
                                                  'ON' .

Qsam_or_sam_or_vsam_i_o_control_entries_4_303 ::= File_name |
                                                  Qsam_or_sam_or_vsam_i_o_control_entries_4_303 File_name .
*)

Qsam_or_sam_or_vsam_i_o_control_entries_4 ::= 
           'APPLY' 'WRITE_ONLY' File_name |
           'APPLY' 'WRITE_ONLY' 'ON' File_name |
            Qsam_or_sam_or_vsam_i_o_control_entries_4 File_name .


Qsam_or_sam_or_vsam_i_o_control_entries ::= Qsam_or_sam_or_vsam_i_o_control_entries_1 |
                                            Qsam_or_sam_or_vsam_i_o_control_entries_2 |
                                            Qsam_or_sam_or_vsam_i_o_control_entries_3 |
                                            Qsam_or_sam_or_vsam_i_o_control_entries_4 .



(*
Qualified_data_name_1 ::= Data_name Qualified_data_name_1_304 .

Qualified_data_name_1_304 ::= # |
                              Qualified_data_name_1_304 In_data_or_file_name .
*)

Qualified_data_name_1 ::= Data_name |
                          Qualified_data_name_1 In_data_or_file_name .

Qualified_data_name ::= Qualified_data_name_1 |
                        ~Special_register .

(*
Read_error_phrases ::= At_end_phrases |
                       Invalid_key_phrases Read_error_phrases_305 .

Read_error_phrases_305 ::= # |
                           At_end_phrases .
*)

Read_error_phrases ::= At_end_phrases |
                       Invalid_key_phrases |
                       Invalid_key_phrases At_end_phrases .
                           

Read_statement_non_closed ::= Read_statement_simple Read_error_phrases .

(*
Read_statement_simple ::= 'READ' File_name Read_statement_simple_306 Read_statement_simple_307 Read_statement_simple_308 Read_statement_simple_309 .

Read_statement_simple_306 ::= # |
                              'NEXT' .

Read_statement_simple_307 ::= # |
                              'RECORD' .

Read_statement_simple_308 ::= # |
                              Into_identifier .

Read_statement_simple_309 ::= # |
                              Key_is_qualified_data_name .
*)

Read_statement_simple ::= 'READ' File_name |
                          'READ' File_name 'NEXT' |
                          'READ' File_name 'RECORD' |
                          'READ' File_name 'NEXT' |
                          'READ' File_name Into_identifier |
                          'READ' File_name 'NEXT' Into_identifier |
                          'READ' File_name 'RECORD' Into_identifier |
                          'READ' File_name 'NEXT' 'RECORD' Into_identifier |
                          'READ' File_name Key_is_qualified_data_name |
                          'READ' File_name 'NEXT' Key_is_qualified_data_name |
                          'READ' File_name 'RECORD' Key_is_qualified_data_name |
                          'READ' File_name 'NEXT' Key_is_qualified_data_name |
                          'READ' File_name Into_identifier Key_is_qualified_data_name |
                          'READ' File_name 'NEXT' Into_identifier Key_is_qualified_data_name |
                          'READ' File_name 'RECORD' Into_identifier Key_is_qualified_data_name |
                          'READ' File_name 'NEXT' 'RECORD' Into_identifier Key_is_qualified_data_name .


Read_statement ::= Read_statement_non_closed 'END_READ' |
                   Read_statement_simple 'END_READ' |
                   Read_statement_simple .

(*
Record_clause_tail_1 ::= Record_clause_tail_1_310 'Integer' Record_clause_tail_1_311 .

Record_clause_tail_1_310 ::= # |
                             'CONTAINS' .

Record_clause_tail_1_311 ::= # |
                             'CHARACTERS' .
*)

Record_clause_tail_1 ::= 'Integer' |
                         'Integer' 'CHARACTERS' |
                         'CONTAINS' 'Integer' |
                         'CONTAINS' 'Integer' 'CHARACTERS' .

(*
Record_clause_tail_2 ::= Record_clause_tail_2_312 'Integer' 'TO' 'Integer' Record_clause_tail_2_313 .

Record_clause_tail_2_312 ::= # |
                             'CONTAINS' .

Record_clause_tail_2_313 ::= # |
                             'CHARACTERS' .
*)

Record_clause_tail_2 ::= 'Integer' 'TO' 'Integer' |
                         'Integer' 'TO' 'Integer' 'CHARACTERS' |
                         'CONTAINS' 'Integer' 'TO' 'Integer' |
                         'CONTAINS' 'Integer' 'TO' 'Integer' 'CHARACTERS' .

(** TRIED **)
Record_clause_tail_3 ::= Record_varying_phrase Record_clause_tail_3_314 .

Record_clause_tail_3_314 ::= # |
                             Depending_on .

Record_clause_tail ::= Record_clause_tail_1 |
                       Record_clause_tail_2 |
                       Record_clause_tail_3 .

Record_clause ::= 'RECORD' Record_clause_tail .

(*
Record_delimiter_clause ::= 'RECORD' 'DELIMITER' Record_delimiter_clause_315 Record_delimiter_name .

Record_delimiter_clause_315 ::= # |
                                'IS' .
*)

Record_delimiter_clause ::= 'RECORD' 'DELIMITER' Record_delimiter_name |
                            'RECORD' 'DELIMITER' 'IS' Record_delimiter_name .


Record_delimiter_name ::= 'STANDARD_1' |
                          Assignment_name .

(*
Record_key_clause ::= 'RECORD' Record_key_clause_316 Record_key_clause_317 Qualified_data_name .

Record_key_clause_316 ::= # |
                          'KEY' .

Record_key_clause_317 ::= # |
                          'IS' .
*)

Record_key_clause ::= 'RECORD' Qualified_data_name |
                      'RECORD' 'KEY' Qualified_data_name |
                      'RECORD' 'IS' Qualified_data_name |
                      'RECORD' 'KEY' 'IS' Qualified_data_name .

Record_name ::= Qualified_data_name .

Record_sort ::= 'RECORD' |
                'SORT_MERGE' |
                'SORT' .

(*
Record_varying_phrase ::= Record_varying_phrase_318 'VARYING' Record_varying_phrase_319 Record_varying_phrase_320 Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 .

Record_varying_phrase_318 ::= # |
                              'IS' .

Record_varying_phrase_319 ::= # |
                              'IN' .

Record_varying_phrase_320 ::= # |
                              'SIZE' .

Record_varying_phrase_321 ::= # |
                              From_integer .

Record_varying_phrase_322 ::= # |
                              To_integer .

Record_varying_phrase_323 ::= # |
                              'CHARACTERS' .
*)

Record_varying_phrase ::= 'VARYING' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'IS' 'VARYING' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'VARYING' 'IN' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'IS' 'VARYING' 'IN' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'VARYING' 'SIZE' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'IS' 'VARYING' 'SIZE' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'VARYING' 'IN' 'SIZE' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 |
                          'IS' 'VARYING' 'IN' 'SIZE' Record_varying_phrase_321 Record_varying_phrase_322 Record_varying_phrase_323 .

Record_varying_phrase_321 ::= # |
                              From_integer .

Record_varying_phrase_322 ::= # |
                              To_integer .

Record_varying_phrase_323 ::= # |
                              'CHARACTERS' .

(*
Recording_mode_clause ::= 'RECORDING' Recording_mode_clause_324 Recording_mode_clause_325 Cobword .

Recording_mode_clause_324 ::= # |
                              'MODE' .

Recording_mode_clause_325 ::= # |
                              'IS' .
*)

Recording_mode_clause ::= 'RECORDING' Cobword |
                          'RECORDING' 'MODE' Cobword |
                          'RECORDING' 'IS' Cobword |
                          'RECORDING' 'MODE' 'IS' Cobword .

(*
Records_are ::= Records Records_are_326 .

Records_are_326 ::= # |
                    Are .
*)

Records_are ::= Records |
                Records Are.

Records ::= 'RECORD' |
            'RECORDS' .

Redefines_clause ::= 'REDEFINES' Data_name .

Reference_modification ::= '(' Leftmost_character_position ':' Reference_modification_327 ')' .

Reference_modification_327 ::= # |
                               Length .

Reference_parameter ::= Reference_parameter_328 Identifier .

Reference_parameter_328 ::= # |
                            By_reference .

Rel_op ::= Equal_to |
           Greater_than_or_equal_to |
           Greater_than .

Relation_condition ::= Expression Relational_operator Expression .

Relational_operator_rest ::= '<' |
                             '>' |
                             'GREATER' Than |
                             'LESS' Than |
                             Equal_to .

(*
Relational_operator_tail ::= '<' '=' |
                             '>' '=' |
                             'GREATER' Than 'OR' 'EQUAL' Relational_operator_tail_329 |
                             'LESS' Than 'OR' 'EQUAL' Relational_operator_tail_330 |
                             'NOT' Relational_operator_tail_331 Relational_operator_rest |
                             Relational_operator_rest .

Relational_operator_tail_329 ::= # |
                                 'TO' .

Relational_operator_tail_330 ::= # |
                                 'TO' .

Relational_operator_tail_331 ::= # |
                                 'IS' .
*)

Relational_operator_tail ::= '<' '=' |
                             '>' '=' |
                             'GREATER' Than 'OR' 'EQUAL' |
                             'LESS' Than 'OR' 'EQUAL' |
                             'GREATER' Than 'OR' 'EQUAL' 'TO' |
                             'LESS' Than 'OR' 'EQUAL' 'TO' |
                             'NOT' Relational_operator_rest |
                             'NOT' 'IS' Relational_operator_rest |
                             Relational_operator_rest .

(*
Relational_operator ::= Relational_operator_332 Relational_operator_tail .

Relational_operator_332 ::= # |
                            'IS' .
*)

Relational_operator ::= Relational_operator_tail |
                        'IS' Relational_operator_tail .

(*
Relative_key_clause ::= 'RELATIVE' Relative_key_clause_333 Relative_key_clause_334 Qualified_data_name .

Relative_key_clause_333 ::= # |
                            'KEY' .

Relative_key_clause_334 ::= # |
                            'IS' .
*)

Relative_key_clause ::= 'RELATIVE' Qualified_data_name |
                        'RELATIVE' 'KEY' Qualified_data_name |
                        'RELATIVE' 'IS' Qualified_data_name |
                        'RELATIVE' 'KEY' 'IS' Qualified_data_name .

(*
Release_statement ::= 'RELEASE' Record_name Release_statement_335 .

Release_statement_335 ::= # |
                          From_identifier .
*)

Release_statement ::= 'RELEASE' Record_name |
                      'RELEASE' Record_name From_identifier .

(*
Remarks ::= 'REMARKS' Remarks_336 Remarks_337 .

Remarks_336 ::= # |
                '.' .

Remarks_337 ::= # |
                Remarks_337 Comment_entry .
*)

Remarks ::= 'REMARKS' |
            'REMARKS' '.' |
             Remarks Comment_entry .

(*
Renames_clause ::= 'RENAMES' Qualified_data_name Renames_clause_338 .

Renames_clause_338 ::= # |
                       Through_qualified_data_name .
*)

Renames_clause ::= 'RENAMES' Qualified_data_name |
                   'RENAMES' Qualified_data_name Through_qualified_data_name .

Rerun_on ::= 'RERUN' 'ON' Assignment_name .

(*
Reserve_clause ::= 'RESERVE' 'Integer' Reserve_clause_339 .

Reserve_clause_339 ::= # |
                       Areas .
*)

Reserve_clause ::= 'RESERVE' 'Integer' |
                   'RESERVE' 'Integer' Areas .

Return_statement_non_closed ::= Return_statement_simple At_end_phrases .

(*
Return_statement_simple ::= 'RETURN' File_name Return_statement_simple_340 Return_statement_simple_341 .

Return_statement_simple_340 ::= # |
                                'RECORD' .

Return_statement_simple_341 ::= # |
                                Into_identifier .
*)

Return_statement_simple ::= 'RETURN' File_name |
                            'RETURN' File_name 'RECORD' |
                            'RETURN' File_name Into_identifier |
                            'RETURN' File_name 'RECORD' Into_identifier .

Return_statement ::= Return_statement_non_closed 'END_RETURN' .

Rewrite_statement_non_closed ::= Rewrite_statement_simple Invalid_key_phrases .

(*
Rewrite_statement_simple ::= 'REWRITE' Record_name Rewrite_statement_simple_342 .

Rewrite_statement_simple_342 ::= # |
                                 From_identifier .
*)

Rewrite_statement_simple ::= 'REWRITE' Record_name |
                             'REWRITE' Record_name From_identifier .

Rewrite_statement ::= Rewrite_statement_non_closed 'END_REWRITE' |
                      Rewrite_statement_simple 'END_REWRITE' |
                      Rewrite_statement_simple .

(*
Same_area ::= 'SAME' Record_sort Same_area_343 Same_area_344 File_name Same_area_345 .

Same_area_343 ::= # |
                  'AREA' .

Same_area_344 ::= # |
                  'FOR' .

Same_area_345 ::= File_name |
                  Same_area_345 File_name .
*)

Same_area ::= 'SAME' Record_sort File_name File_name |
              'SAME' Record_sort 'AREA' File_name File_name |
              'SAME' Record_sort 'FOR' File_name File_name |
              'SAME' Record_sort 'AREA' 'FOR' File_name File_name |
               Same_area File_name .


Search_statement_condition_tail ::= 'AND' Search_statement_condition .

Search_statement_condition ::= Condition_name_reference |
                               Search_statement_equal_expression .

Search_statement_equal_expression ::= Identifier Equal_to Expression .


(*** NOT DONE ***)
Search_statement_non_closed ::= 'SEARCH' 'ALL' Identifier Search_statement_non_closed_346 'WHEN' Search_statement_condition Search_statement_non_closed_347 Statement_list |
                                'SEARCH' Identifier Search_statement_non_closed_348 Search_statement_non_closed_349 When_in_search_clauses_plus .

Search_statement_non_closed_346 ::= # |
                                    At_end_statement_list .

Search_statement_non_closed_347 ::= # |
                                    Search_statement_non_closed_347 Search_statement_condition_tail .

Search_statement_non_closed_348 ::= # |
                                    Varying_identifier .

Search_statement_non_closed_349 ::= # |
                                    At_end_statement_list .

Search_statement ::= Search_statement_non_closed 'END_SEARCH' .

(*
Section_header ::= Label_name 'SECTION' Section_header_350 .

Section_header_350 ::= # |
                       Priority_number .
*)

Section_header ::= Label_name 'SECTION' |
                   Label_name 'SECTION'  Priority_number .

Section_without_header ::= Paragraphs .

Section ::= Section_header '.' Paragraphs .

(*
Sections ::= Section_without_header Sections_351 .

Sections_351 ::= # |
                 Sections_351 Section .
*)

Sections ::= Section_without_header |
             Sections Section .

(*
Security ::= 'SECURITY' Security_352 Security_353 .

Security_352 ::= # |
                 '.' .

Security_353 ::= # |
                 Security_353 Comment_entry .
*)

Security ::= 'SECURITY' |
             'SECURITY' '.' |
              Security Comment_entry .

(*
Segment_limit ::= 'SEGMENT_LIMIT' Segment_limit_354 Priority_number .

Segment_limit_354 ::= # |
                      'IS' .
*)

Segment_limit ::= 'SEGMENT_LIMIT' Priority_number |
                  'SEGMENT_LIMIT' 'IS' Priority_number .

(*
Select_clause ::= 'SELECT' Select_clause_355 File_name .

Select_clause_355 ::= # |
                      'OPTIONAL' .
*)

Select_clause ::= 'SELECT' File_name |
                  'SELECT' 'OPTIONAL' File_name .

Sentence ::= Statement_list '.' .

(*
Separate_character ::= 'SEPARATE' Separate_character_356 .

Separate_character_356 ::= # |
                           'CHARACTER' .
*)

Separate_character ::= 'SEPARATE' |
                       'SEPARATE' 'CHARACTER' .

Set_oper ::= 'TO' |
             Alt_up_down_by .

Set_src ::= 'OFF' |
            'ON' |
            'TRUE' |
            Identifier |
            Literal .

(*
Set_statement_phrase ::= Set_statement_phrase_357 Set_oper Set_src .

Set_statement_phrase_357 ::= Identifier |
                             Set_statement_phrase_357 Identifier .
*)

Set_statement_phrase ::=  Identifier Set_oper Set_src |
                          Identifier ~Set_statement_phrase .

(*
Set_statement ::= 'SET' Set_statement_358 .

Set_statement_358 ::= Set_statement_phrase |
                      Set_statement_358 Set_statement_phrase .
*)

Set_statement ::= 'SET' Set_statement_phrase |
                   Set_statement Set_statement_phrase .


(* NOT DONE *)
Sign_clause ::= Sign_clause_359 Alt_leading_trailing Sign_clause_360 .

Sign_clause_359 ::= # |
                    Sign_is .

Sign_clause_360 ::= # |
                    Separate_character .

Sign_condition ::= Arithmetic_expression Is_or_is_not Sign_type .

(*
Sign_is ::= 'SIGN' Sign_is_361 .

Sign_is_361 ::= # |
                'IS' .
*)

Sign_is ::= 'SIGN' |
            'SIGN'  'IS' .

Sign_type ::= 'NEGATIVE' |
              'POSITIVE' |
              'ZERO' |
              'ZEROES' |
              'ZEROS' .

Simple_condition_1 ::= '(' Condition ')' .

(*
Skip_statement_dot ::= Skip_statement Skip_statement_dot_362 .

Skip_statement_dot_362 ::= # |
                           '.' .
*)

Skip_statement_dot ::= Skip_statement |
                       Skip_statement  '.' .

Skip_statement ::= 'EJECT' |
                   'SKIP' |
                   'SKIP1' |
                   'SKIP2' |
                   'SKIP3' .

(*
Sort_merge_i_o_control_entries ::= Sort_merge_i_o_control_entries_363 Sort_merge_i_o_control_entries_364 .

Sort_merge_i_o_control_entries_363 ::= # |
                                       Rerun_on .

Sort_merge_i_o_control_entries_364 ::= Same_area |
                                       Sort_merge_i_o_control_entries_364 Same_area .
*)

Sort_merge_i_o_control_entries ::= Same_area |
                                   Rerun_on Same_area |
                                   Sort_merge_i_o_control_entries Same_area .


Sort_statement_in ::= Input_procedure |
                      Using_file_names .

Sort_statement_out ::= Giving_file_names |
                       Output_procedure .

Sort_statement ::= 'SORT' File_name Sort_statement_365 Sort_statement_366 Sort_statement_367 Sort_statement_in Sort_statement_out .

Sort_statement_365 ::= On_key_is_phrase |
                       Sort_statement_365 On_key_is_phrase .

Sort_statement_366 ::= # |
                       With_duplicates_in_order .

Sort_statement_367 ::= # |
                       Collating_sequence .

(*
Source_computer_name ::= Computer_name Source_computer_name_368 '.' .

Source_computer_name_368 ::= # |
                             With_debugging_mode .
*)

Source_computer_name ::= Computer_name '.' |
                         Computer_name With_debugging_mode '.' .

(*
Source_computer_paragraph ::= 'SOURCE_COMPUTER' '.' Source_computer_paragraph_369 .

Source_computer_paragraph_369 ::= # |
                                  Source_computer_name .
*)

Source_computer_paragraph ::= 'SOURCE_COMPUTER' '.' |
                              'SOURCE_COMPUTER' '.' Source_computer_name .


Special_names_paragraph_clause ::= Alphabet_clause |
                                   Class_clause |
                                   Currency_sign_clause |
                                   Decimal_point_clause |
                                   Symbolic_characters_clause .

(*
Special_names_paragraph_clauses ::= Special_names_paragraph_clauses_370 .

Special_names_paragraph_clauses_370 ::= # |
                                        Special_names_paragraph_clauses_370 Special_names_paragraph_clause .
*)

Special_names_paragraph_clauses ::= # |
                                    Special_names_paragraph_clauses Special_names_paragraph_clause .

Special_names_paragraph_phrase_tail ::= Is_mnemonic_name |
                                        Special_names_paragraph_status_phrase .

Special_names_paragraph_phrase ::= Environment_name Special_names_paragraph_phrase_tail .

Special_names_paragraph_status_phrase_1 ::= 'ON' Special_names_paragraph_status_phrase_1_371 Special_names_paragraph_status_phrase_1_372 Condition Special_names_paragraph_status_phrase_1_373 .

Special_names_paragraph_status_phrase_1_371 ::= # |
                                                'STATUS' .

Special_names_paragraph_status_phrase_1_372 ::= # |
                                                'IS' .

Special_names_paragraph_status_phrase_1_373 ::= # |
                                                Off_status .

Special_names_paragraph_status_phrase_2 ::= 'OFF' Special_names_paragraph_status_phrase_2_374 Special_names_paragraph_status_phrase_2_375 Condition Special_names_paragraph_status_phrase_2_376 .

Special_names_paragraph_status_phrase_2_374 ::= # |
                                                'STATUS' .

Special_names_paragraph_status_phrase_2_375 ::= # |
                                                'IS' .

Special_names_paragraph_status_phrase_2_376 ::= # |
                                                On_status .

Special_names_paragraph_status_phrase ::= Special_names_paragraph_status_phrase_1 |
                                          Special_names_paragraph_status_phrase_2 .

Special_names_paragraph ::= 'SPECIAL_NAMES' '.' Special_names_paragraph_377 Special_names_paragraph_clauses Special_names_paragraph_378 .

Special_names_paragraph_377 ::= # |
                                Special_names_paragraph_377 Special_names_paragraph_phrase .

Special_names_paragraph_378 ::= # |
                                '.' .
Special_register_1 ::= 'ADDRESS' 'OF' Data_name .

Special_register_2 ::= 'LENGTH' 'OF' Identifier .

Special_register ::= 'DEBUG_ITEM' |
                     'RETURN_CODE' |
                     'SHIFT_IN' |
                     'SHIFT_OUT' |
                     'SORT_CONTROL' |
                     'SORT_CORE_SIZE' |
                     'SORT_FILE_SIZE' |
                     'SORT_MESSAGE' |
                     'SORT_MODE_SIZE' |
                     'SORT_RETURN' |
                     'TALLY' |
                     'WHEN_COMPILED' |
                     Special_register_1 |
                     Special_register_2 .

Sql_statement ::= 'EXEC' 'SQL' Sql_statement_379 'END_EXEC' .

Sql_statement_379 ::= # |
                      Sql_statement_379 Emb_token .

Start_statement_non_closed ::= Start_statement_simple Invalid_key_phrases .

(*
Start_statement_simple ::= 'START' File_name Start_statement_simple_380 .

Start_statement_simple_380 ::= # |
                               Key_is_rel_op_qualified_data_name .
*)

Start_statement_simple ::= 'START' File_name |
                           'START' File_name Key_is_rel_op_qualified_data_name .

Start_statement ::= Start_statement_non_closed 'END_START' |
                    Start_statement_simple 'END_START' |
                    Start_statement_simple .

Statement_inj ::= Statement .


Statement_list ::= Statement_list_381 |
                   Statement_list_382 ~Statement_non_closed_inj .

Statement_list_381 ::= # |
                       Statement_list_381 ~Statement_inj .

Statement_list_382 ::= # |
                       Statement_list_382 ~Statement_inj .

(*
I DON'T UNDERSTAND WHY THIS INCREASES THE NUMBER OF HEADERS!!!!!!

Statement_list ::= # |
                   Statement_non_closed_inj |
                   Statement_inj Statement_list .
*)


Statement_non_closed_inj ::= Statement_non_closed .

Statement_non_closed ::= Add_statement_non_closed |
                         Call_statement_non_closed |
                         Compute_statement_non_closed |
                         Copy_statement |
                         Delete_statement_non_closed |
                         Divide_statement_non_closed |
                         Evaluate_statement_non_closed |
                         If_statement_non_closed |
                         Multiply_statement_non_closed |
                         On_statement |
                         Perform_statement_non_closed |
                         Read_statement_non_closed |
                         Return_statement_non_closed |
                         Rewrite_statement_non_closed |
                         Search_statement_non_closed |
                         Start_statement_non_closed |
                         String_statement_non_closed |
                         Subtract_statement_non_closed |
                         Unstring_statement_non_closed |
                         Write_statement_non_closed .

Statement ::= Accept_statement |
              Add_statement |
              Alter_statement |
              Call_statement |
              Cancel_statement |
              Cics_statement |
              Close_statement |
              Compute_statement |
              Continue_statement |
              Delete_statement |
              Display_statement |
              Divide_statement |
              Entry_statement |
              Evaluate_statement |
              Exit_program_statement |
              Exit_statement |
              Go_to_statement |
              Goback_statement |
              If_statement |
              Initialize_statement |
              Inspect_statement |
              Merge_statement |
              Move_statement |
              Multiply_statement |
              Next_sentence_statement |
              Open_statement |
              Perform_statement |
              Read_statement |
              Release_statement |
              Return_statement |
              Rewrite_statement |
              Search_statement |
              Set_statement |
              Skip_statement |
              Sort_statement |
              Sql_statement |
              Start_statement |
              Stop_statement |
              String_statement |
              Subtract_statement |
              Unstring_statement |
              Write_statement .

Stop_statement ::= 'STOP' Alt_run_literal .

String_statement_non_closed ::= String_statement_simple On_overflow_phrases .

(*
String_statement_simple ::= 'STRING' String_statement_simple_383 'INTO' Identifier String_statement_simple_384 .

String_statement_simple_383 ::= Delimited_by_phrase |
                                String_statement_simple_383 Delimited_by_phrase .

String_statement_simple_384 ::= # |
                                With_pointer_identifier .
*)

String_statement_simple ::= 'STRING' String_statement_simple_383 'INTO' Identifier |
                            'STRING' String_statement_simple_383 'INTO' With_pointer_identifier .

String_statement_simple_383 ::= Delimited_by_phrase |
                                String_statement_simple_383 Delimited_by_phrase .

String_statement ::= String_statement_non_closed 'END_STRING' |
                     String_statement_simple 'END_STRING' |
                     String_statement_simple .

Subscript_expression ::= Literal |
                         Qualified_data_name .

Subscript_parentheses ::= '(' Subscript ')' .

(*
Subscript ::= Subscript_385 .

Subscript_385 ::= Subscript_expression |
                  Subscript_385 Subscript_expression .
*)


Subscript ::= Subscript_expression |
              Subscript Subscript_expression .


Subtract_statement_non_closed ::= Subtract_statement_simple On_size_error_phrases .

(*
Subtract_statement_simple ::= 'SUBTRACT' Subtract_statement_simple_386 'FROM' Cobword_lit 'GIVING' Subtract_statement_simple_387 |
                              'SUBTRACT' Subtract_statement_simple_388 'FROM' Subtract_statement_simple_389 |
                              'SUBTRACT' Corresponding Identifier 'FROM' Identifier Subtract_statement_simple_390 .

Subtract_statement_simple_386 ::= Cobword_lit |
                                  Subtract_statement_simple_386 Cobword_lit .

Subtract_statement_simple_387 ::= Cobword_rounded |
                                  Subtract_statement_simple_387 Cobword_rounded .

Subtract_statement_simple_388 ::= Cobword_lit |
                                  Subtract_statement_simple_388 Cobword_lit .

Subtract_statement_simple_389 ::= Cobword_rounded |
                                  Subtract_statement_simple_389 Cobword_rounded .

Subtract_statement_simple_390 ::= # |
                                  'ROUNDED' .

*)

Subtract_statement_simple ::= 'SUBTRACT' Subtract_statement_simple_386 'FROM' Cobword_lit 'GIVING' Subtract_statement_simple_387 |
                              'SUBTRACT' Subtract_statement_simple_386 'FROM' Subtract_statement_simple_387 |
                              'SUBTRACT' Corresponding Identifier 'FROM' Identifier |
                              'SUBTRACT' Corresponding Identifier 'FROM'  'ROUNDED' .

Subtract_statement_simple_386 ::= Cobword_lit |
                                  Subtract_statement_simple_386 Cobword_lit .

Subtract_statement_simple_387 ::= Cobword_rounded |
                                  Subtract_statement_simple_387 Cobword_rounded .



Subtract_statement ::= Subtract_statement_non_closed 'END_SUBTRACT' |
                       Subtract_statement_simple 'END_SUBTRACT' |
                       Subtract_statement_simple .


(*
Symbolic_character_mapping ::= Symbolic_character_mapping_391 Symbolic_character_mapping_392 Symbolic_character_mapping_393 .

Symbolic_character_mapping_391 ::= Symbolic_character |
                                   Symbolic_character_mapping_391 Symbolic_character .

Symbolic_character_mapping_392 ::= # |
                                   Are .

Symbolic_character_mapping_393 ::= 'Integer' |
                                   Symbolic_character_mapping_393 'Integer' .
*)


Symbolic_character_mapping ::= Symbolic_character_mapping_391 Symbolic_character_mapping_392 'Integer' |
                               Symbolic_character_mapping 'Integer' .

Symbolic_character_mapping_391 ::= Symbolic_character |
                                   Symbolic_character_mapping_391 Symbolic_character .

Symbolic_character_mapping_392 ::= # |
                                   Are .


Symbolic_character ::= Alphabetic_user_defined_word .

(*
Symbolic_characters_clause ::= 'SYMBOLIC' Symbolic_characters_clause_394 Symbolic_characters_clause_395 Symbolic_characters_clause_396 .

Symbolic_characters_clause_394 ::= # |
                                   'CHARACTERS' .

Symbolic_characters_clause_395 ::= Symbolic_character_mapping |
                                   Symbolic_characters_clause_395 Symbolic_character_mapping .

Symbolic_characters_clause_396 ::= # |
                                   In_alphabet_name .
*)

Symbolic_characters_clause ::= 'SYMBOLIC' Symbolic_characters_clause_395 |
                               'SYMBOLIC' Symbolic_characters_clause_395 In_alphabet_name |
                               'SYMBOLIC' 'CHARACTERS' Symbolic_characters_clause_395 |
                               'SYMBOLIC' 'CHARACTERS' Symbolic_characters_clause_395 In_alphabet_name .


Symbolic_characters_clause_395 ::= Symbolic_character_mapping |
                                   Symbolic_characters_clause_395 Symbolic_character_mapping .



(*
Synchronized_clause ::= Synchronized Synchronized_clause_397 .

Synchronized_clause_397 ::= # |
                            Alt_left_right .
*)

Synchronized_clause ::= Synchronized |
                        Synchronized Alt_left_right .

Synchronized ::= 'SYNC' |
                 'SYNCHRONIZED' .

System_name ::= Cobword .

(*
Tallying_argument ::= Identifier 'FOR' Tallying_argument_398 .

Tallying_argument_398 ::= Tallying_for_argument |
                          Tallying_argument_398 Tallying_for_argument .
*)

Tallying_argument ::= Identifier 'FOR' Tallying_for_argument |
                      Tallying_argument Tallying_for_argument .

(*
Tallying_for_argument_1 ::= 'CHARACTERS' Tallying_for_argument_1_399 .

Tallying_for_argument_1_399 ::= # |
                                Tallying_for_argument_1_399 Before_after_phrase .
*)

Tallying_for_argument_1 ::= 'CHARACTERS' |
                             Tallying_for_argument_1 Before_after_phrase .

(*
Tallying_for_argument_2 ::= Alt_all_leading Tallying_for_argument_2_400 .

Tallying_for_argument_2_400 ::= Tallying_for_cobword_lit |
                                Tallying_for_argument_2_400 Tallying_for_cobword_lit .
*)

Tallying_for_argument_2 ::= Alt_all_leading Tallying_for_cobword_lit |
                            Tallying_for_argument_2 Tallying_for_cobword_lit .

Tallying_for_argument ::= Tallying_for_argument_1 |
                          Tallying_for_argument_2 .

(*
Tallying_for_cobword_lit ::= Cobword_lit Tallying_for_cobword_lit_401 .

Tallying_for_cobword_lit_401 ::= # |
                                 Tallying_for_cobword_lit_401 Before_after_phrase .
*)

Tallying_for_cobword_lit ::= Cobword_lit |
                             Tallying_for_cobword_lit Before_after_phrase .

(*
Tallying_in_identifier ::= 'TALLYING' Tallying_in_identifier_402 Identifier .

Tallying_in_identifier_402 ::= # |
                               'IN' .
*)

Tallying_in_identifier ::= 'TALLYING' Identifier |
                           'TALLYING' 'IN' Identifier .

Text_name ::= User_defined_word .

(*
Than ::= 'THAN' |
         Than_403 .

Than_403 ::= # |
             'THEN' .
*)

Than ::= 'THAN' |
          # |
          'THEN' .

Through_expression ::= Through Expression .

Through_literal ::= Through Literal .

Through_procedure_name ::= Through Procedure_name .

Through_qualified_data_name ::= Through Qualified_data_name .

Through ::= 'THROUGH' |
            'THRU' .

Times_div_tail ::= Alt_times_div Power .

(*
Times_div ::= Power Times_div_404 .

Times_div_404 ::= # |
                  Times_div_404 Times_div_tail .
*)

Times_div ::= Power |
              Times_div Times_div_tail .

To_identifier ::= 'TO' Identifier .

To_integer ::= 'TO' 'Integer' .

Unsigned_numeric ::= 'Integer' |
                     'Unsigned_decimal' .

(*
Unstring_statement_dst ::= Identifier Unstring_statement_dst_405 Unstring_statement_dst_406 .

Unstring_statement_dst_405 ::= # |
                               Delimiter_in_identifier .

Unstring_statement_dst_406 ::= # |
                               Count_in_identifier .
*)

Unstring_statement_dst ::= Identifier |
                           Identifier Count_in_identifier |
                           Identifier Delimiter_in_identifier |
                           Identifier Delimiter_in_identifier Count_in_identifier .


Unstring_statement_non_closed ::= Unstring_statement_simple On_overflow_phrases .

(*
Unstring_statement_simple ::= 'UNSTRING' Identifier Unstring_statement_simple_407 'INTO' Unstring_statement_simple_408 Unstring_statement_simple_409 Unstring_statement_simple_410 .

Unstring_statement_simple_407 ::= # |
                                  Delimited_by_all_phrase .

Unstring_statement_simple_408 ::= Unstring_statement_dst |
                                  Unstring_statement_simple_408 Unstring_statement_dst .

Unstring_statement_simple_409 ::= # |
                                  With_pointer_identifier .

Unstring_statement_simple_410 ::= # |
                                  Tallying_in_identifier .
*)

Unstring_statement_simple ::= 'UNSTRING' Identifier Unstring_statement_simple_407 'INTO' Unstring_statement_simple_408 |
                              'UNSTRING' Identifier Unstring_statement_simple_407 'INTO' Unstring_statement_simple_408 With_pointer_identifier |
                              'UNSTRING' Identifier Unstring_statement_simple_407 'INTO' Unstring_statement_simple_408 Tallying_in_identifier |
                              'UNSTRING' Identifier Unstring_statement_simple_407 'INTO' Unstring_statement_simple_408 With_pointer_identifier Tallying_in_identifier .

Unstring_statement_simple_407 ::= # |
                                  Delimited_by_all_phrase .

Unstring_statement_simple_408 ::= Unstring_statement_dst |
                                  Unstring_statement_simple_408 Unstring_statement_dst .


Unstring_statement ::= Unstring_statement_non_closed 'END_UNSTRING' |
                       Unstring_statement_simple 'END_UNSTRING' |
                       Unstring_statement_simple .

Upon_environment_name ::= 'UPON' Cobword .

(*
Usage_clause ::= Usage_clause_411 Usage .

Usage_clause_411 ::= # |
                     Usage_is .
*)

Usage_clause ::= Usage |
                 Usage_is Usage .

(*
Usage_is ::= 'USAGE' Usage_is_412 .

Usage_is_412 ::= # |
                 'IS' .
*)

Usage_is ::= 'USAGE' |
             'USAGE' 'IS' .

Usage ::= 'BINARY' |
          'COMP_1' |
          'COMP_2' |
          'COMP_3' |
          'COMP_4' |
          'COMP' |
          'COMPUTATIONAL_1' |
          'COMPUTATIONAL_2' |
          'COMPUTATIONAL_3' |
          'COMPUTATIONAL_4' |
          'COMPUTATIONAL' |
          'DISPLAY_1' |
          'DISPLAY' |
          'INDEX' |
          'PACKED_DECIMAL' |
          'POINTER' .

Use_statement_1 ::= 'USE' Use_statement_1_413 'AFTER' Use_statement_1_414 Alt_exception_error 'PROCEDURE' Use_statement_1_415 Alt_file_names_i_o .

Use_statement_1_413 ::= # |
                        'GLOBAL' .

Use_statement_1_414 ::= # |
                        'STANDARD' .

Use_statement_1_415 ::= # |
                        'ON' .

Use_statement_2 ::= 'USE' Use_statement_2_416 'AFTER' Use_statement_2_417 Use_statement_2_418 Use_statement_2_419 'LABEL' 'PROCEDURE' Use_statement_2_420 Alt_file_names_i_o .

Use_statement_2_416 ::= # |
                        'GLOBAL' .

Use_statement_2_417 ::= # |
                        'STANDARD' .

Use_statement_2_418 ::= # |
                        Alt_beginning_ending .

Use_statement_2_419 ::= # |
                        Alt_file_reel_unit .

Use_statement_2_420 ::= # |
                        'ON' .

Use_statement_3 ::= 'USE' Use_statement_3_421 'DEGUGGING' Use_statement_3_422 Alt_procedures_all_procedures .

Use_statement_3_421 ::= # |
                        'FOR' .

Use_statement_3_422 ::= # |
                        'ON' .

Use_statement ::= Use_statement_1 |
                  Use_statement_2 |
                  Use_statement_3 .

User_defined_word ::= Cobword .


(*
Using_file_names ::= 'USING' Using_file_names_424 .

Using_file_names_424 ::= File_name |
                         Using_file_names_424 File_name .
*)
Using_data_names ::= 'USING' |
                      Using_data_names Data_name_or_copy_book .


Using_file_names ::= 'USING' File_name |
                      Using_file_names File_name .

(*
Using_parameters ::= 'USING' Using_parameters_425 .

Using_parameters_425 ::= Parameter_or_copy_book |
                         Using_parameters_425 Parameter_or_copy_book .
*)

Using_parameters ::= 'USING' Parameter_or_copy_book |
                      Using_parameters Parameter_or_copy_book .

(*
Using_phrase ::= Using_phrase_426 Using_phrase_427 Using_phrase_428 .

Using_phrase_426 ::= # |
                     Copy_statement_closed_by_period .

Using_phrase_427 ::= # |
                     Using_data_names .

Using_phrase_428 ::= # |
                     Copy_statement .
*)

Using_phrase ::= Using_phrase_427 Using_phrase_428 |
                 Copy_statement_closed_by_period Using_phrase_427 Using_phrase_428 .

Using_phrase_426 ::= # |
                     Copy_statement_closed_by_period .

Using_phrase_427 ::= # |
                     Using_data_names .

Using_phrase_428 ::= # |
                     Copy_statement .

Value_of_clause_tail ::= System_name Value_of_clause_tail_429 Alt_qualified_data_name_literal .

Value_of_clause_tail_429 ::= # |
                             'IS' .

(*
Value_of_clause ::= 'VALUE' 'OF' Value_of_clause_430 .

Value_of_clause_430 ::= Value_of_clause_tail |
                        Value_of_clause_430 Value_of_clause_tail .
*)

Value_of_clause ::= 'VALUE' 'OF' Value_of_clause_tail |
                     Value_of_clause Value_of_clause_tail .


(*
Values_are ::= Values Values_are_431 .


Values_are_431 ::= # |
                   Are .
*)

Values_are ::= Values |
               Values Are .


Values ::= 'VALUE' |
           'VALUES' .

Varying_identifier ::= 'VARYING' Identifier .

(*
When_clause ::= When_clause_432 Non_empty_statement_list .

When_clause_432 ::= When_phrase |
                    When_clause_432 When_phrase .
*)

When_clause ::= When_phrase Non_empty_statement_list |
                When_phrase ~When_clause .
                    

When_clauses_plus ::= When_clause |
                      When_clause ~When_clauses_plus .

When_clauses ::= Empty_when_clause |
                 ~When_clauses_plus .

When_in_search_clause ::= 'WHEN' Condition Statement_list .

When_in_search_clauses_plus ::= When_in_search_clause |
                                When_in_search_clause ~When_in_search_clauses_plus .

When_other_phrase ::= 'WHEN' 'OTHER' Statement_list .

When_phrase_also_phrase ::= 'ALSO' Evaluate_phrase .

(*
When_phrase ::= 'WHEN' Evaluate_phrase When_phrase_433 .

When_phrase_433 ::= # |
                    When_phrase_433 When_phrase_also_phrase .
*)

When_phrase ::= 'WHEN' Evaluate_phrase |
                 When_phrase When_phrase_also_phrase .

(*
With_debugging_mode ::= With_debugging_mode_434 'DEBUGGING' 'MODE' .

With_debugging_mode_434 ::= # |
                            'WITH' .
*)

With_debugging_mode ::= 'DEBUGGING' 'MODE' |
                        'WITH' 'DEBUGGING' 'MODE' .


With_duplicates_in_order ::= With_duplicates_in_order_435 'DUPLICATES' With_duplicates_in_order_436 With_duplicates_in_order_437 .

With_duplicates_in_order_435 ::= # |
                                 'WITH' .

With_duplicates_in_order_436 ::= # |
                                 'IN' .

With_duplicates_in_order_437 ::= # |
                                 'ORDER' .

(*
With_duplicates ::= With_duplicates_438 'DUPLICATES' .

With_duplicates_438 ::= # |
                        'WITH' .
*)

With_duplicates ::= 'DUPLICATES' |
                    'WITH' 'DUPLICATES' .

(*
With_no_advancing ::= With_no_advancing_439 'NO' 'ADVANCING' .

With_no_advancing_439 ::= # |
                          'WITH' .
*)

With_no_advancing ::= 'NO' 'ADVANCING' |
                      'WITH' 'NO' 'ADVANCING' .

(*
With_no_rewind ::= With_no_rewind_440 'NO' 'REWIND' .

With_no_rewind_440 ::= # |
                       'WITH' .
*)

With_no_rewind ::= 'NO' 'REWIND' |
                   'WITH' 'NO' 'REWIND' .


(*
With_pointer_identifier ::= With_pointer_identifier_441 'POINTER' Identifier .

With_pointer_identifier_441 ::= # |
                                'WITH' .
*)

With_pointer_identifier ::= 'POINTER' Identifier |
                            'WITH' 'POINTER' Identifier .


(*
With_test ::= With_test_442 'TEST' Alt_before_after .

With_test_442 ::= # |
                  'WITH' .
*)

With_test ::= 'TEST' Alt_before_after |
              'WITH' 'TEST' Alt_before_after .


(*
Working_storage_section ::= 'WORKING_STORAGE' 'SECTION' '.' Working_storage_section_443 .

Working_storage_section_443 ::= # |
                                Working_storage_section_443 Data_description_entry .
*)

Working_storage_section ::= 'WORKING_STORAGE' 'SECTION' '.' |
                             Working_storage_section Data_description_entry .


(*
Write_error_phrases ::= At_end_of_page_statement_list Write_error_phrases_444 Write_error_phrases_445 |
                        Invalid_key_phrases |
                        Not_at_end_of_page_statement_list Write_error_phrases_446 .

Write_error_phrases_444 ::= # |
                            Not_at_end_of_page_statement_list .

Write_error_phrases_445 ::= # |
                            Invalid_key_phrases .

Write_error_phrases_446 ::= # |
                            Invalid_key_phrases .
*)



Write_error_phrases ::= At_end_of_page_statement_list |
                        At_end_of_page_statement_list Not_at_end_of_page_statement_list |
                        At_end_of_page_statement_list Invalid_key_phrases |
                        At_end_of_page_statement_list Not_at_end_of_page_statement_list Invalid_key_phrases |
                        Invalid_key_phrases |
                        Not_at_end_of_page_statement_list |
                        Not_at_end_of_page_statement_list Invalid_key_phrases .

                            
(******* HERE ******)

Write_statement_non_closed ::= Write_statement_simple Write_error_phrases .

(*
Write_statement_simple ::= 'WRITE' Record_name Write_statement_simple_447 Write_statement_simple_448 .

Write_statement_simple_447 ::= # |
                               From_identifier .

Write_statement_simple_448 ::= # |
                               Advancing_phrase .
*)

Write_statement_simple ::= 'WRITE' Record_name  |
                           'WRITE' Record_name Advancing_phrase |
                           'WRITE' Record_name From_identifier  |
                           'WRITE' Record_name From_identifier Advancing_phrase .


Write_statement ::= Write_statement_non_closed 'END_WRITE' |
                    Write_statement_simple 'END_WRITE' |
                    Write_statement_simple .

Zeroes ::= 'ZERO' |
           'ZEROES' |
           'ZEROS' .

Comment_entry ::= 'Comment_entry' .

Continuation ::= 'Continuation' .

Dbcs ::= 'Dbcs' .

Digits_cobword ::= 'Digits_cobword' .

Integer ::= 'Integer' .

(*
Level_number ::= 'Level_number' .
*)

Level_number ::= 'Integer' .

Lex_cobword ::= 'Lex_cobword' .

Nonnumeric_dq ::= 'Nonnumeric_dq' .

Nonnumeric_dq_non_closed ::= 'Nonnumeric_dq_non_closed' .

Nonnumeric_sq ::= 'Nonnumeric_sq' .

Nonnumeric_sq_non_closed ::= 'Nonnumeric_sq_non_closed' .

(*
Picture_string ::=  'Picture_string' .
*)

Picture_string ::=  'Integer' '(' 'Integer' ')' |
                    'Lex_cobword' '(' 'Integer' ')' |
                    'Lex_cobword' .

Priority_number ::= 'Integer' .

Quoted_pseudo_text ::= 'Quoted_pseudo_text' .

Unsigned_decimal ::= 'Unsigned_decimal' .



(
(*
this_grammar := grammar[Cobol_source_programs] (* 191427  169107 *) (**)
(* 1141166 1127484 *)
this_grammar := grammar[EAS1] (* 260 227 *)(* 1562 1534 *)
this_grammar := grammar[EAS2] (* 4 2 *)(* 4 2 *)
this_grammar := grammar[EAS3] (* 1739 1521 *)(* 13138 13036 *)
this_grammar := grammar[Combinable_condition_1] (* 7250 6516 *)
(* 15397 14741 *)
this_grammar := grammar[Abbreviation_rest] (* 451 406 *)(* 451 406 *)
this_grammar := grammar[Figurative_constant] (* 60 61 *)(* 60 61 *)
this_grammar := grammar[Statement_list] (* 6 6 *)(* 6 6 *) (**)
this_grammar := grammar[Basis] (* 425 369 *)(* 2691 2672 *)
this_grammar := grammar[Delimited_by_phrase] (* 1059 932 *)(* 7896 7841 *)
this_grammar := grammar[I_o_sam] (* 182 120 *)(* 4442 4397 *)
this_grammar := grammar[Paragraphs] (* 66 59 *)(* 388 388 *) (**)
this_grammar := grammar[Paragraph_without_header] (* 28 27 *)(* 28 27 *) (**)
this_grammar := grammar[Set_statement_phrase] (* 670 581 *)(* 5227 5187 *)
this_grammar := grammar[Special_register] (* 340 288 *)(* 2943 2920 *)
this_grammar := grammar[Statement_non_closed_inj] (* 104934 93241 *)
(* 452238 443955 *)
this_grammar := grammar[Statement_inj] (* 159946 141284 *)
(* 869570 857846 *)
this_grammar := grammar[When_clause] (* 284886 252609 *) (**)
(* 1366278 1344560 *)
this_grammar := grammar[When_clauses_plus] (* 284888 252611 *) (**)
(* 1366280 1344562 *)
this_grammar := grammar[When_in_search_clauses_plus] (* 1180 1061 *) (**)
(* 3138 3035 *)

(* gtb.10 on When_clauses_plus give 848100 edges,
this is the full trie 

gtb.10 on When_clause with no restrictions gives 4,106,891

gtb.10 When_clauses  4,176,762   4,108,839
but won't finish on gtb.12
*)

(* this_grammar := grammar[Cobol_source_programs] (* 5,252,903  *) *)
*)

STRING := "
IDENTIFICATION DIVISION . 
PROGRAM_ID . Lex_cobword . 
AUTHOR . 
DATE_WRITTEN . 
DATE_COMPILED . 
ENVIRONMENT DIVISION . 
CONFIGURATION SECTION . 
DATA DIVISION . 
WORKING_STORAGE SECTION . 


Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP VALUE + Integer . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP VALUE + Integer . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 



Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 



Integer Lex_cobword . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 

Integer Lex_cobword . 

Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE 
Nonnumeric_sq . 
Integer FILLER REDEFINES Lex_cobword . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 




Integer Lex_cobword . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 



Integer Lex_cobword . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 



Integer FILLER PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP VALUE + Integer . 
Integer Lex_cobword PIC Integer ( Integer ) COMP VALUE Integer . 
Integer Lex_cobword PIC Integer ( Integer ) COMP VALUE Integer . 
Integer Lex_cobword PIC Integer ( Integer ) COMP VALUE Integer . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE Nonnumeric_sq . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 
Integer Lex_cobword . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer Lex_cobword REDEFINES 
Lex_cobword PIC Lex_cobword ( Integer ) . 


Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer Lex_cobword REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE LOW_VALUE . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE SPACES . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq . 
Integer Lex_cobword VALUE Nonnumeric_sq Nonnumeric_sq 
Nonnumeric_sq Nonnumeric_sq 
Nonnumeric_sq Nonnumeric_sq 
Nonnumeric_sq . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE LOW_VALUE . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP_4 . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) VALUE LOW_VALUES . 



Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
COPY Lex_cobword . 



Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
COPY Lex_cobword . 



Integer Lex_cobword . 
Integer FILLER PIC Integer ( Integer ) COMP VALUE Integer . 
Integer FILLER PIC Integer ( Integer ) COMP VALUE Integer . 
Integer FILLER PIC Lex_cobword VALUE HIGH_VALUES . 



Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER REDEFINES Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 



LINKAGE SECTION . 



Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP_3 . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP_3 . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP_3 . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer FILLER PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) COMP . 
Integer Lex_cobword PIC Lex_cobword ( Integer ) . 



PROCEDURE DIVISION USING Lex_cobword
Lex_cobword
Lex_cobword
Lex_cobword
Lex_cobword
Lex_cobword
Lex_cobword .




Lex_cobword SECTION . 
PERFORM Lex_cobword . 
PERFORM Lex_cobword 
UNTIL Lex_cobword NOT = SPACES 
AND NOT = Nonnumeric_sq . 
CALL Nonnumeric_sq USING Lex_cobword . 
MOVE ZERO TO RETURN_CODE . 
GOBACK . 



Lex_cobword SECTION . 
PERFORM Lex_cobword . 
PERFORM Lex_cobword 
PERFORM Lex_cobword . 
PERFORM Lex_cobword . 
PERFORM Lex_cobword . 


Lex_cobword SECTION . 


IF Lex_cobword EQUAL LOW_VALUE 
MOVE Nonnumeric_sq TO Lex_cobword 
GO TO Lex_cobword . 


MOVE Nonnumeric_sq TO Lex_cobword 
MOVE SPACE TO Lex_cobword 
MOVE ZERO TO Lex_cobword 
Lex_cobword 


IF Lex_cobword NOT EQUAL Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
IF Lex_cobword EQUAL Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
IF Lex_cobword EQUAL Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
IF Lex_cobword EQUAL Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
IF Lex_cobword EQUAL Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword . 



Lex_cobword SECTION . 
PERFORM Lex_cobword . 
IF Lex_cobword = SPACES 
PERFORM Lex_cobword . 


Lex_cobword SECTION . 


IF Lex_cobword = Nonnumeric_sq 
PERFORM Lex_cobword 
ELSE 
IF Lex_cobword = Nonnumeric_sq 
PERFORM Lex_cobword 
ELSE 
IF Lex_cobword = Nonnumeric_sq 
PERFORM Lex_cobword 
ELSE 
IF Lex_cobword = Nonnumeric_sq 
PERFORM Lex_cobword 
ELSE 
MOVE Integer TO Lex_cobword 
MOVE SPACES TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
PERFORM Lex_cobword . 

Lex_cobword SECTION . 



CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword . 

Lex_cobword SECTION . 



CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword . 

Lex_cobword SECTION . 



CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword . 

Lex_cobword SECTION . 



CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword . 







Lex_cobword SECTION . 

CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword . 
IF Lex_cobword NOT = Nonnumeric_sq 
MOVE Integer TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
CALL Nonnumeric_sq 
PERFORM Lex_cobword 
ELSE 
CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
IF Lex_cobword NOT = Nonnumeric_sq 
MOVE Integer TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
CALL Nonnumeric_sq 
PERFORM Lex_cobword 
ELSE 
CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
IF Lex_cobword NOT = Nonnumeric_sq 
MOVE Integer TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
CALL Nonnumeric_sq 
PERFORM Lex_cobword . 




Lex_cobword SECTION . 
CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword . 
IF Lex_cobword NOT = Nonnumeric_sq 
AND NOT = Nonnumeric_sq 
AND NOT = SPACES 
MOVE Integer TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
CALL Nonnumeric_sq 
PERFORM Lex_cobword . 

IF Lex_cobword NOT = Integer 
AND Lex_cobword = SPACES 
MOVE Integer TO Lex_cobword 
MOVE SPACES TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
CALL Nonnumeric_sq 
PERFORM Lex_cobword . 




Lex_cobword SECTION . 
MOVE SPACES TO Lex_cobword . 
CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword . 
IF Lex_cobword NOT = Nonnumeric_sq 
AND NOT = Nonnumeric_sq 
AND NOT = SPACES 
MOVE Integer TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
CALL Nonnumeric_sq 
PERFORM Lex_cobword . 
IF Lex_cobword EQUAL Lex_cobword 
MOVE Lex_cobword TO Lex_cobword . 


IF Lex_cobword = SPACES 
CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 


Lex_cobword SECTION . 
IF Lex_cobword = Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
MOVE Lex_cobword TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE Nonnumeric_sq TO Lex_cobword 
MOVE ZERO TO Lex_cobword 
MOVE SPACE TO Lex_cobword 
MOVE Lex_cobword TO Lex_cobword . 


Lex_cobword SECTION . 

MOVE SPACE TO Lex_cobword . 
MOVE Nonnumeric_sq TO Lex_cobword . 

IF Lex_cobword = Nonnumeric_sq 
MOVE Nonnumeric_sq TO Lex_cobword 
ELSE 
CALL Nonnumeric_sq USING Lex_cobword . 

CALL Nonnumeric_sq USING Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 
Lex_cobword 


CALL Nonnumeric_sq USING Lex_cobword . 

"


(* Main Script *)

write["\n" gtb_version " processing '" 
gtb_main_file_name "' on " date_time "\n\n"]

gtb_verbose := true

this_grammar := grammar[Cobol_source_program tilde_enabled] 
write[this_grammar]

this_nfa := nfa[this_grammar slr 1 nullable_reductions] 

(*
this_dfa := dfa[this_nfa]
*)

this_dfa := la_merge[dfa[this_nfa]]


this_derivation := rnglr_parse[this_dfa STRING]
(*
ri_recognise[this_grammar open["rdp_full.tok" read_text]]
*)
(*
write["\nTotal " CPU_time " CPU seconds elapsed\n\n"]
*)
)

