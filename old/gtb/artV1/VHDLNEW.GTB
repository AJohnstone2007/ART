(* Generated by ebnf2bnf V1.00 from '/home/pgrads/andi/PGrad/HDLs/BNF/vhdl_hdl.bnf'Mar 05 2001 15:15:04 *)

actual_part ::= expression |
                signal_name |
                variable_name |
                file_name |
                'open' |
                function_name '(' actual_part_1 ')' |
                type_mark '(' actual_part_2 ')' .

actual_part_1 ::= expression |
                  signal_name |
                  variable_name |
                  file_name |
                  'open' .

actual_part_2 ::= expression |
                  signal_name |
                  variable_name |
                  file_name |
                  'open' .

aggregate ::= '(' aggregate_3 expression aggregate_4 ')' .

aggregate_3 ::= # |
                choice aggregate_5 '=>' .

aggregate_5 ::= # |
                aggregate_5 '|' choice .

aggregate_4 ::= # |
                aggregate_4 ',' aggregate_6 expression .

aggregate_6 ::= # |
                choice aggregate_7 '=>' .

aggregate_7 ::= # |
                aggregate_7 '|' choice .

alias_declaration ::= 'alias' alias_declaration_8 alias_declaration_9 'is' name alias_declaration_10 ';' .

alias_declaration_8 ::= identifier |
                        '\'' graphic_character '\'' |
                        '\"' alias_declaration_11 '\"' .

alias_declaration_11 ::= # |
                         alias_declaration_11 graphic_character .

alias_declaration_9 ::= # |
                        ':' subtype_indication .

alias_declaration_10 ::= # |
                         signature .

architecture_body ::= 'architecture' identifier 'of' entity_name 'is' architecture_body_12 'begin' architecture_body_13 'end' architecture_body_14 architecture_body_15 ';' .

architecture_body_12 ::= # |
                         architecture_body_12 block_declarative_item .

architecture_body_13 ::= # |
                         architecture_body_13 concurrent_statement .

architecture_body_14 ::= # |
                         'architecture' .

architecture_body_15 ::= # |
                         architecture_identifier .

assertion ::= 'assert' boolean_expression assertion_16 assertion_17 .

assertion_16 ::= # |
                 'report' expression .

assertion_17 ::= # |
                 'severity' expression .

association_list ::= association_list_18 actual_part association_list_19 .

association_list_18 ::= # |
                        formal_part '=>' .

association_list_19 ::= # |
                        association_list_19 ',' association_list_20 actual_part .

association_list_20 ::= # |
                        formal_part '=>' .

attribute_declaration ::= 'attribute' identifier ':' type_mark ';' .

attribute_name ::= prefix attribute_name_21 '\'' attribute_identifier attribute_name_22 .

attribute_name_21 ::= # |
                      signature .

attribute_name_22 ::= # |
                      '(' expression ')' .

attribute_specification ::= 'attribute' attribute_identifier 'of' entity_name_list ':' entity_class 'is' expression ';' .

based_literal ::= integer '#' DIGIT |
                  LETTER based_literal_23 based_literal_24 '#' based_literal_25 .

based_literal_23 ::= # |
                     based_literal_23 based_literal_26 |
                     based_literal_23 DIGIT |
                     based_literal_23 LETTER .

based_literal_26 ::= # |
                     UNDERLINE .

based_literal_24 ::= # |
                     '.' DIGIT |
                     LETTER based_literal_27 .

based_literal_27 ::= # |
                     based_literal_27 based_literal_28 DIGIT |
                     based_literal_27 LETTER .

based_literal_28 ::= # |
                     UNDERLINE .

based_literal_25 ::= # |
                     'E' based_literal_29 integer |
                     'E' '-' integer .

based_literal_29 ::= # |
                     '+' .

basic_graphic_character ::= UPPER_CASE_LETTER |
                            DIGIT |
                            SPECIAL_CHARACTER |
                            SPACE_CHARACTER .

bit_string_literal ::= '(' bit_string_literal_30 ')' '\"' bit_string_literal_31 '\"' .

bit_string_literal_30 ::= 'B' |
                          'O' |
                          'X' .

bit_string_literal_31 ::= # |
                          DIGIT |
                          LETTER bit_string_literal_32 .

bit_string_literal_32 ::= # |
                          bit_string_literal_32 bit_string_literal_33 DIGIT |
                          bit_string_literal_32 LETTER .

bit_string_literal_33 ::= # |
                          UNDERLINE .

block_configuration ::= 'for' block_configuration_34 block_configuration_35 block_configuration_36 'end' 'for' ';' .

block_configuration_34 ::= architecture_name |
                           block_statement_label |
                           generate_statement_label block_configuration_37 .

block_configuration_37 ::= # |
                           '(' block_configuration_38 ')' .

block_configuration_38 ::= discrete_subtype_indication |
                           range |
                           static_expression .

block_configuration_35 ::= # |
                           block_configuration_35 'use' prefix '.' suffix block_configuration_39 ';' .

block_configuration_39 ::= # |
                           block_configuration_39 ',' prefix '.' suffix .

block_configuration_36 ::= # |
                           block_configuration_36 block_configuration |
                           block_configuration_36 component_configuration .

block_declarative_item ::= subprogram_specification ';' |
                           subprogram_body |
                           type_declaration |
                           subtype_declaration |
                           constant_declaration |
                           signal_declaration |
                           shared_variable_declaration |
                           file_declaration |
                           alias_declaration |
                           component_declaration |
                           attribute_declaration |
                           attribute_specification |
                           configuration_specification |
                           disconnection_specification |
                           use_clause |
                           group_template_declaration |
                           group_declaration .

block_statement ::= block_label ':' 'block' block_statement_40 block_statement_41 block_statement_42 block_statement_43 block_statement_44 'begin' block_statement_45 'end' 'block' block_statement_46 ';' .

block_statement_40 ::= # |
                       '(' guard_expression ')' .

block_statement_41 ::= # |
                       'is' .

block_statement_42 ::= # |
                       'generic' '(' generic_interface_list ')' ';' block_statement_47 .

block_statement_47 ::= # |
                       'generic' 'map' '(' generic_association_list ')' ';' .

block_statement_43 ::= # |
                       'port' '(' port_interface_list ')' ';' block_statement_48 .

block_statement_48 ::= # |
                       'port' 'map' '(' port_association_list ')' ';' .

block_statement_44 ::= # |
                       block_statement_44 block_declarative_item .

block_statement_45 ::= # |
                       block_statement_45 concurrent_statement .

block_statement_46 ::= # |
                       block_label .

case_statement ::= case_statement_49 'case' expression 'is' 'when' choice case_statement_50 '=>' case_statement_51 case_statement_52 'end' 'case' case_statement_53 ';' .

case_statement_49 ::= # |
                      case_label ':' .

case_statement_50 ::= # |
                      case_statement_50 '|' choice .

case_statement_51 ::= # |
                      case_statement_51 sequential_statement .

case_statement_52 ::= # |
                      case_statement_52 'when' choice case_statement_54 '=>' case_statement_55 .

case_statement_54 ::= # |
                      case_statement_54 '|' choice .

case_statement_55 ::= # |
                      case_statement_55 sequential_statement .

case_statement_53 ::= # |
                      case_label .

choice ::= simple_expression |
           discrete_range |
           element_identifier |
           'others' .

component_configuration ::= 'for' component_configuration_56 component_configuration_57 component_configuration_58 'end' 'for' ';' .

component_configuration_56 ::= instantiation_label component_configuration_59 ':' component_name |
                               'others' ':' component_name |
                               'all' ':' component_name .

component_configuration_59 ::= # |
                               component_configuration_59 ',' instantiation_label .

component_configuration_57 ::= # |
                               component_configuration_60 component_configuration_61 component_configuration_62 ';' .

component_configuration_60 ::= # |
                               'use' 'entity' entity_name component_configuration_63 |
                               'configuration' configuration_name |
                               'open' .

component_configuration_63 ::= # |
                               '(' architecture_identifier ')' .

component_configuration_61 ::= # |
                               'generic' 'map' '(' generic_association_list ')' .

component_configuration_62 ::= # |
                               'port' 'map' '(' port_association_list ')' .

component_configuration_58 ::= # |
                               block_configuration .

component_declaration ::= 'component' identifier component_declaration_64 component_declaration_65 component_declaration_66 'end' 'component' component_declaration_67 ';' .

component_declaration_64 ::= # |
                             'is' .

component_declaration_65 ::= # |
                             'generic' '(' local_generic_interface_list ')' ';' .

component_declaration_66 ::= # |
                             'port' '(' local_port_interface_list ')' ';' .

component_declaration_67 ::= # |
                             component_identifier .

component_instantiation_statement ::= component_instantiation_statement_68 component_instantiation_statement_69 component_instantiation_statement_70 ';' .

component_instantiation_statement_68 ::= instantiation_label ':' component_instantiation_statement_71 component_name |
                                         'entity' entity_name component_instantiation_statement_72 |
                                         'configuration' configuration_name .

component_instantiation_statement_71 ::= # |
                                         'component' .

component_instantiation_statement_72 ::= # |
                                         '(' architecture_identifier ')' .

component_instantiation_statement_69 ::= # |
                                         'generic' 'map' '(' generic_association_list ')' .

component_instantiation_statement_70 ::= # |
                                         'port' 'map' '(' port_association_list ')' .

concurrent_statement ::= block_statement |
                         process_statement |
                         concurrent_statement_73 concurrent_statement_74 procedure_call ';' |
                         concurrent_statement_75 concurrent_statement_76 assertion ';' |
                         concurrent_statement_77 concurrent_statement_78 conditional_signal_assignment |
                         concurrent_statement_79 concurrent_statement_80 selected_signal_assignment |
                         component_instantiation_statement |
                         generate_statement .

concurrent_statement_73 ::= # |
                            label ':' .

concurrent_statement_74 ::= # |
                            'postponed' .

concurrent_statement_75 ::= # |
                            label ':' .

concurrent_statement_76 ::= # |
                            'postponed' .

concurrent_statement_77 ::= # |
                            label ':' .

concurrent_statement_78 ::= # |
                            'postponed' .

concurrent_statement_79 ::= # |
                            label ':' .

concurrent_statement_80 ::= # |
                            'postponed' .

conditional_signal_assignment ::= conditional_signal_assignment_81 '<=' conditional_signal_assignment_82 conditional_signal_assignment_83 conditional_signal_assignment_84 waveform conditional_signal_assignment_85 ';' .

conditional_signal_assignment_81 ::= name |
                                     aggregate .

conditional_signal_assignment_82 ::= # |
                                     'guarded' .

conditional_signal_assignment_83 ::= # |
                                     'transport' |
                                     conditional_signal_assignment_86 'inertial' .

conditional_signal_assignment_86 ::= # |
                                     'reject' time_expression .

conditional_signal_assignment_84 ::= # |
                                     conditional_signal_assignment_84 waveform 'when' boolean_expression 'else' .

conditional_signal_assignment_85 ::= # |
                                     'when' boolean_expression .

configuration_declaration ::= 'configuration' identifier 'of' entity_name 'is' configuration_declaration_87 block_configuration 'end' configuration_declaration_88 configuration_declaration_89 ';' .

configuration_declaration_87 ::= # |
                                 configuration_declaration_87 'use' prefix '.' suffix configuration_declaration_90 ';' |
                                 configuration_declaration_87 attribute_specification |
                                 configuration_declaration_87 group_declaration .

configuration_declaration_90 ::= # |
                                 configuration_declaration_90 ',' prefix '.' suffix .

configuration_declaration_88 ::= # |
                                 'configuration' .

configuration_declaration_89 ::= # |
                                 configuration_identifier .

configuration_specification ::= 'for' configuration_specification_91 configuration_specification_92 configuration_specification_93 configuration_specification_94 ';' .

configuration_specification_91 ::= instantiation_label configuration_specification_95 ':' component_name |
                                   'others' ':' component_name |
                                   'all' ':' component_name .

configuration_specification_95 ::= # |
                                   configuration_specification_95 ',' instantiation_label .

configuration_specification_92 ::= # |
                                   'use' 'entity' entity_name configuration_specification_96 |
                                   'configuration' configuration_name |
                                   'open' .

configuration_specification_96 ::= # |
                                   '(' architecture_identifier ')' .

configuration_specification_93 ::= # |
                                   'generic' 'map' '(' generic_association_list ')' .

configuration_specification_94 ::= # |
                                   'port' 'map' '(' port_association_list ')' .

constant_declaration ::= 'constant' identifier constant_declaration_97 ':' subtype_indication constant_declaration_98 ';' .

constant_declaration_97 ::= # |
                            constant_declaration_97 ',' identifier .

constant_declaration_98 ::= # |
                            ':=' expression .

constraint ::= range_constraint |
               index_constraint .

decimal_literal ::= integer decimal_literal_99 decimal_literal_100 .

decimal_literal_99 ::= # |
                       '.' integer .

decimal_literal_100 ::= # |
                        'E' decimal_literal_101 integer |
                        'E' '-' integer .

decimal_literal_101 ::= # |
                        '+' .

design_file ::= design_file_102 library_unit design_file_103 .

design_file_102 ::= # |
                    design_file_102 library_clause |
                    design_file_102 use_clause .

design_file_103 ::= # |
                    design_file_103 design_file_104 library_unit .

design_file_104 ::= # |
                    design_file_104 library_clause |
                    design_file_104 use_clause .

disconnection_specification ::= 'disconnect' guarded_signal_list ':' type_mark 'after' time_expression ';' .

discrete_range ::= discrete_subtype_indication |
                   range .

entity_class ::= 'entity' |
                 'architecture' |
                 'configuration' |
                 'procedure' |
                 'function' |
                 'package' |
                 'type' |
                 'subtype' |
                 'constant' |
                 'signal' |
                 'variable' |
                 'component' |
                 'label' |
                 'literal' |
                 'units' |
                 'group' |
                 'file' .

entity_declaration ::= 'entity' identifier 'is' entity_declaration_105 entity_declaration_106 entity_declaration_107 entity_declaration_108 'end' entity_declaration_109 entity_declaration_110 ';' .

entity_declaration_105 ::= # |
                           'generic' '(' formal_generic_interface_list ')' ';' .

entity_declaration_106 ::= # |
                           'port' '(' formal_port_interface_list ')' ';' .

entity_declaration_107 ::= # |
                           entity_declaration_107 subprogram_specification ';' |
                           entity_declaration_107 subprogram_body |
                           entity_declaration_107 subtype_declaration |
                           entity_declaration_107 constant_declaration |
                           entity_declaration_107 signal_declaration |
                           entity_declaration_107 file_declaration |
                           entity_declaration_107 alias_declaration |
                           entity_declaration_107 attribute_declaration |
                           entity_declaration_107 attribute_specification |
                           entity_declaration_107 type_declaration |
                           entity_declaration_107 disconnection_specification |
                           entity_declaration_107 use_clause |
                           entity_declaration_107 shared_variable_declaration |
                           entity_declaration_107 group_template_declaration |
                           entity_declaration_107 group_declaration .

entity_declaration_108 ::= # |
                           'begin' entity_declaration_111 .

entity_declaration_111 ::= # |
                           entity_declaration_111 entity_declaration_112 entity_declaration_113 assertion ';' |
                           entity_declaration_111 entity_declaration_114 entity_declaration_115 passive_procedure_call ';' |
                           entity_declaration_111 passive_process_statement .

entity_declaration_112 ::= # |
                           label ':' .

entity_declaration_113 ::= # |
                           'postponed' .

entity_declaration_114 ::= # |
                           label ':' .

entity_declaration_115 ::= # |
                           'postponed' .

entity_declaration_109 ::= # |
                           'entity' .

entity_declaration_110 ::= # |
                           entity_identifier .

entity_name_list ::= identifier |
                     '\"' entity_name_list_116 '\"' |
                     '\'' graphic_character '\'' entity_name_list_117 entity_name_list_118 |
                     'others' |
                     'all' .

entity_name_list_116 ::= # |
                         entity_name_list_116 graphic_character .

entity_name_list_117 ::= # |
                         signature .

entity_name_list_118 ::= # |
                         entity_name_list_118 ',' identifier |
                         entity_name_list_118 '\"' entity_name_list_119 '\"' |
                         entity_name_list_118 '\'' graphic_character '\'' entity_name_list_120 .

entity_name_list_119 ::= # |
                         entity_name_list_119 graphic_character .

entity_name_list_120 ::= # |
                         signature .

enumeration_literal ::= identifier |
                        enumeration_literal_121 .

enumeration_literal_121 ::= '\'' graphic_character '\'' .

exit_statement ::= exit_statement_122 'exit' exit_statement_123 exit_statement_124 ';' .

exit_statement_122 ::= # |
                       label ':' .

exit_statement_123 ::= # |
                       loop_label .

exit_statement_124 ::= # |
                       'when' boolean_expression .

expression ::= relation expression_125 |
               relation expression_126 |
               relation expression_127 |
               relation expression_128 |
               relation expression_129 |
               relation expression_130 .

expression_125 ::= # |
                   expression_125 'and' relation .

expression_126 ::= # |
                   expression_126 'or' relation .

expression_127 ::= # |
                   expression_127 'xor' relation .

expression_128 ::= # |
                   expression_128 'nand' relation .

expression_129 ::= # |
                   expression_129 'nor' relation .

expression_130 ::= # |
                   expression_130 'xnor' relation .

factor ::= primary factor_131 |
           'abs' primary |
           'not' primary .

factor_131 ::= # |
               '**' primary .

file_declaration ::= 'file' identifier file_declaration_132 ':' subtype_indication file_declaration_133 ';' .

file_declaration_132 ::= # |
                         file_declaration_132 ',' identifier .

file_declaration_133 ::= # |
                         file_declaration_134 'is' file_declaration_135 string_expression .

file_declaration_134 ::= # |
                         'open' file_open_kind_expression .

file_declaration_135 ::= # |
                         'in' |
                         'out' .

formal_part ::= generic_name |
                port_name |
                parameter_name |
                formal_part_136 |
                formal_part_137 .

formal_part_136 ::= function_name '(' generic_name |
                    port_name |
                    parameter_name ')' .

formal_part_137 ::= type_mark '(' generic_name |
                    port_name |
                    parameter_name ')' .

function_call ::= function_name function_call_138 .

function_call_138 ::= # |
                      '(' parameter_association_list ')' .

generate_statement ::= generate_label ':' generate_statement_139 'generate' generate_statement_140 generate_statement_141 'end' 'generate' generate_statement_142 ';' .

generate_statement_139 ::= 'for' identifier 'in' generate_statement_143 |
                           'if' boolean_expression .

generate_statement_143 ::= discrete_subtype_indication |
                           range .

generate_statement_140 ::= # |
                           generate_statement_144 'begin' .

generate_statement_144 ::= # |
                           generate_statement_144 block_declarative_item .

generate_statement_141 ::= # |
                           generate_statement_141 concurrent_statement .

generate_statement_142 ::= # |
                           generate_label .

graphic_character ::= basic_graphic_character |
                      LOWER_CASE_LETTER |
                      OTHER_SPECIAL_CHARACTER .

group_declaration ::= 'group' identifier ':' group_template_name '(' group_declaration_145 group_declaration_146 ')' ';' .

group_declaration_145 ::= name |
                          '\'' graphic_character '\'' .

group_declaration_146 ::= # |
                          group_declaration_146 ',' group_declaration_147 .

group_declaration_147 ::= name |
                          '\'' graphic_character '\'' .

group_template_declaration ::= 'group' identifier 'is' '(' entity_class group_template_declaration_148 group_template_declaration_149 ')' ';' .

group_template_declaration_148 ::= # |
                                   '<>' .

group_template_declaration_149 ::= # |
                                   group_template_declaration_149 ',' entity_class group_template_declaration_150 .

group_template_declaration_150 ::= # |
                                   '<>' .

identifier ::= 'identifier' (*! LETTER identifier_151 |
               '\\' graphic_character identifier_152 '\\' *) .

identifier_151 ::= # |
                   identifier_151 identifier_153 LETTER |
                   identifier_151 DIGIT .

identifier_153 ::= # |
                   UNDERLINE .

identifier_152 ::= # |
                   identifier_152 graphic_character .

if_statement ::= if_statement_154 'if' boolean_expression 'then' if_statement_155 if_statement_156 if_statement_157 'end' 'if' if_statement_158 ';' .

if_statement_154 ::= # |
                     if_label ':' .

if_statement_155 ::= # |
                     if_statement_155 sequential_statement .

if_statement_156 ::= # |
                     if_statement_156 'elsif' boolean_expression 'then' if_statement_159 .

if_statement_159 ::= # |
                     if_statement_159 sequential_statement .

if_statement_157 ::= # |
                     'else' if_statement_160 .

if_statement_160 ::= # |
                     if_statement_160 sequential_statement .

if_statement_158 ::= # |
                     if_label .

index_constraint ::= '(' discrete_range index_constraint_161 ')' .

index_constraint_161 ::= # |
                         index_constraint_161 ',' discrete_range .

integer ::= 'integer' (*! DIGIT integer_162 *) .

integer_162 ::= # |
                integer_162 integer_163 DIGIT .

integer_163 ::= # |
                UNDERLINE .

interface_list ::= interface_declaration interface_list_164 .

interface_list_164 ::= # |
                       interface_list_164 ';' interface_declaration .

interface_declaration ::= interface_declaration_165 identifier interface_declaration_166 ':' interface_declaration_167 subtype_indication interface_declaration_168 |
                          interface_declaration_169 identifier interface_declaration_170 ':' interface_declaration_171 subtype_indication interface_declaration_172 interface_declaration_173 |
                          interface_declaration_174 identifier interface_declaration_175 ':' interface_declaration_176 subtype_indication interface_declaration_177 |
                          'file' identifier interface_declaration_178 ':' subtype_indication .

interface_declaration_165 ::= # |
                              'constant' .

interface_declaration_166 ::= # |
                              interface_declaration_166 ',' identifier .

interface_declaration_167 ::= # |
                              'in' .

interface_declaration_168 ::= # |
                              ':=' static_expression .

interface_declaration_169 ::= # |
                              'signal' .

interface_declaration_170 ::= # |
                              interface_declaration_170 ',' identifier .

interface_declaration_171 ::= # |
                              'in' |
                              'out' |
                              'inout' |
                              'buffer' |
                              'linkage' .

interface_declaration_172 ::= # |
                              'bus' .

interface_declaration_173 ::= # |
                              ':=' static_expression .

interface_declaration_174 ::= # |
                              'variable' .

interface_declaration_175 ::= # |
                              interface_declaration_175 ',' identifier .

interface_declaration_176 ::= # |
                              'in' |
                              'out' |
                              'inout' |
                              'buffer' |
                              'linkage' .

interface_declaration_177 ::= # |
                              ':=' static_expression .

interface_declaration_178 ::= # |
                              interface_declaration_178 ',' identifier .

label ::= 'label' (*! identifier *) .

library_clause ::= 'library' identifier library_clause_179 ';' .

library_clause_179 ::= # |
                       library_clause_179 ',' identifier .

library_unit ::= entity_declaration |
                 configuration_declaration |
                 package_declaration |
                 architecture_body |
                 package_body .

literal ::= 'literal' (*! decimal_literal |
            based_literal |
            physical_literal |
            enumeration_literal |
            string_literal |
            bit_string_literal |
            'null' *) .

loop_statement ::= loop_statement_180 loop_statement_181 'loop' loop_statement_182 'end' 'loop' loop_statement_183 ';' .

loop_statement_180 ::= # |
                       loop_label ':' .

loop_statement_181 ::= # |
                       'while' boolean_expression |
                       'for' identifier 'in' discrete_range .

loop_statement_182 ::= # |
                       loop_statement_182 sequential_statement .

loop_statement_183 ::= # |
                       loop_label .

name ::= identifier |
         '\"' name_184 '\"' |
         prefix '.' suffix |
         prefix '(' expression name_185 ')' |
         prefix '(' discrete_range ')' |
         attribute_name .

name_184 ::= # |
             name_184 graphic_character .

name_185 ::= # |
             name_185 ',' expression .

next_statement ::= next_statement_186 'next' next_statement_187 next_statement_188 ';' .

next_statement_186 ::= # |
                       label ':' .

next_statement_187 ::= # |
                       loop_label .

next_statement_188 ::= # |
                       'when' boolean_expression .

null_statement ::= null_statement_189 'null' ';' .

null_statement_189 ::= # |
                       label ':' .

package_body ::= 'package' 'body' package_identifier 'is' package_body_190 'end' package_body_191 package_body_192 ';' .

package_body_190 ::= # |
                     package_body_190 subprogram_specification ';' |
                     package_body_190 subprogram_body |
                     package_body_190 type_declaration |
                     package_body_190 subtype_declaration |
                     package_body_190 constant_declaration |
                     package_body_190 file_declaration |
                     package_body_190 alias_declaration |
                     package_body_190 use_clause |
                     package_body_190 shared_variable_declaration |
                     package_body_190 group_template_declaration |
                     package_body_190 group_declaration .

package_body_191 ::= # |
                     'package' 'body' .

package_body_192 ::= # |
                     package_identifier .

package_declaration ::= 'package' identifier 'is' package_declaration_193 'end' package_declaration_194 package_declaration_195 ';' .

package_declaration_193 ::= # |
                            package_declaration_193 subprogram_specification ';' |
                            package_declaration_193 type_declaration |
                            package_declaration_193 subtype_declaration |
                            package_declaration_193 constant_declaration |
                            package_declaration_193 signal_declaration |
                            package_declaration_193 file_declaration |
                            package_declaration_193 alias_declaration |
                            package_declaration_193 component_declaration |
                            package_declaration_193 attribute_declaration |
                            package_declaration_193 attribute_specification |
                            package_declaration_193 disconnection_specification |
                            package_declaration_193 use_clause |
                            package_declaration_193 shared_variable_declaration |
                            package_declaration_193 group_template_declaration |
                            package_declaration_193 group_declaration .

package_declaration_194 ::= # |
                            'package' .

package_declaration_195 ::= # |
                            package_identifier .

physical_literal ::= physical_literal_196 unit_name .

physical_literal_196 ::= # |
                         decimal_literal |
                         based_literal .

physical_type_definition ::= range_constraint 'units' identifier ';' physical_type_definition_197 'end' 'units' physical_type_definition_198 .

physical_type_definition_197 ::= # |
                                 physical_type_definition_197 identifier '=' physical_literal ';' .

physical_type_definition_198 ::= # |
                                 physical_type_identifier .

prefix ::= name |
           function_call .

primary ::= name |
            literal |
            aggregate |
            function_call |
            primary_199 |
            primary_200 |
            primary_201 |
            primary_202 |
            primary_203 |
            primary_204 |
            primary_205 .

primary_199 ::= type_mark '\'' '(' expression ')' .

primary_200 ::= type_mark '\'' aggregate .

primary_201 ::= type_mark '(' expression ')' .

primary_202 ::= '(' expression ')' .

primary_203 ::= 'new' subtype_indication .

primary_204 ::= 'new' type_mark '\'' '(' expression ')' .

primary_205 ::= 'new' type_mark '\'' aggregate .

procedure_call ::= procedure_name procedure_call_206 .

procedure_call_206 ::= # |
                       '(' parameter_association_list ')' .

process_statement ::= process_statement_207 process_statement_208 'process' process_statement_209 process_statement_210 process_statement_211 'begin' process_statement_212 'end' process_statement_213 'process' process_statement_214 ';' .

process_statement_207 ::= # |
                          process_label ':' .

process_statement_208 ::= # |
                          'postponed' .

process_statement_209 ::= # |
                          '(' signal_name process_statement_215 ')' .

process_statement_215 ::= # |
                          process_statement_215 ',' signal_name .

process_statement_210 ::= # |
                          'is' .

process_statement_211 ::= # |
                          process_statement_211 subprogram_specification ';' |
                          process_statement_211 subprogram_body |
                          process_statement_211 type_declaration |
                          process_statement_211 subtype_declaration |
                          process_statement_211 constant_declaration |
                          process_statement_211 variable_declaration |
                          process_statement_211 file_declaration |
                          process_statement_211 alias_declaration |
                          process_statement_211 attribute_declaration |
                          process_statement_211 attribute_specification |
                          process_statement_211 use_clause |
                          process_statement_211 group_template_declaration |
                          process_statement_211 group_declaration .

process_statement_212 ::= # |
                          process_statement_212 sequential_statement .

process_statement_213 ::= # |
                          'postponed' .

process_statement_214 ::= # |
                          process_label .

range ::= range_attribute_name |
          simple_expression range_216 simple_expression .

range_216 ::= 'to' |
              'downto' .

range_constraint ::= 'range' range .

record_type_definition ::= 'record' identifier record_type_definition_217 ':' subtype_indication ';' record_type_definition_218 'end' 'record' record_type_definition_219 .

record_type_definition_217 ::= # |
                               record_type_definition_217 ',' identifier .

record_type_definition_218 ::= # |
                               record_type_definition_218 identifier record_type_definition_220 ':' subtype_indication ';' .

record_type_definition_220 ::= # |
                               record_type_definition_220 ',' identifier .

record_type_definition_219 ::= # |
                               record_type_identifier .

relation ::= simple_expression relation_221 relation_222 .

relation_221 ::= # |
                 relation_223 simple_expression .

relation_223 ::= 'sll' |
                 'srl' |
                 'sla' |
                 'sra' |
                 'rol' |
                 'ror' .

relation_222 ::= # |
                 relation_224 simple_expression relation_225 .

relation_224 ::= '=' |
                 '/=' |
                 '<' |
                 '<=' |
                 '>' |
                 '>=' .

relation_225 ::= # |
                 relation_226 simple_expression .

relation_226 ::= 'sll' |
                 'srl' |
                 'sla' |
                 'sra' |
                 'rol' |
                 'ror' .

report_statement ::= report_statement_227 'report' expression report_statement_228 ';' .

report_statement_227 ::= # |
                         label ':' .

report_statement_228 ::= # |
                         'severity' expression .

return_statement ::= return_statement_229 'return' return_statement_230 ';' .

return_statement_229 ::= # |
                         label ':' .

return_statement_230 ::= # |
                         expression .

selected_signal_assignment ::= 'with' expression 'select' selected_signal_assignment_231 '<=' selected_signal_assignment_232 selected_signal_assignment_233 waveform 'when' choice selected_signal_assignment_234 selected_signal_assignment_235 ';' .

selected_signal_assignment_231 ::= name |
                                   aggregate .

selected_signal_assignment_232 ::= # |
                                   'guarded' .

selected_signal_assignment_233 ::= # |
                                   'transport' |
                                   selected_signal_assignment_236 'inertial' .

selected_signal_assignment_236 ::= # |
                                   'reject' time_expression .

selected_signal_assignment_234 ::= # |
                                   selected_signal_assignment_234 '|' choice .

selected_signal_assignment_235 ::= # |
                                   selected_signal_assignment_235 ',' waveform 'when' choice selected_signal_assignment_237 .

selected_signal_assignment_237 ::= # |
                                   selected_signal_assignment_237 '|' choice .

sequential_statement ::= wait_statement |
                         sequential_statement_238 |
                         report_statement |
                         signal_assignment_statement |
                         variable_assignment_statement |
                         sequential_statement_239 |
                         if_statement |
                         case_statement |
                         loop_statement |
                         next_statement |
                         exit_statement |
                         return_statement |
                         null_statement .

sequential_statement_238 ::= sequential_statement_240 assertion ';' .

sequential_statement_240 ::= # |
                             label ':' .

sequential_statement_239 ::= sequential_statement_241 procedure_call ';' .

sequential_statement_241 ::= # |
                             label ':' .

signal_assignment_statement ::= signal_assignment_statement_242 signal_assignment_statement_243 '<=' signal_assignment_statement_244 waveform ';' .

signal_assignment_statement_242 ::= # |
                                    label ':' .

signal_assignment_statement_243 ::= name |
                                    aggregate .

signal_assignment_statement_244 ::= # |
                                    'transport' |
                                    signal_assignment_statement_245 'inertial' .

signal_assignment_statement_245 ::= # |
                                    'reject' time_expression .

signal_declaration ::= 'signal' identifier signal_declaration_246 ':' subtype_indication signal_declaration_247 signal_declaration_248 ';' .

signal_declaration_246 ::= # |
                           signal_declaration_246 ',' identifier .

signal_declaration_247 ::= # |
                           'register' |
                           'bus' .

signal_declaration_248 ::= # |
                           ':=' expression .

signal_list ::= signal_list_249 |
                'others' |
                'all' .

signal_list_249 ::= signal_name signal_list_250 .

signal_list_250 ::= # |
                    signal_list_250 ',' signal_name .

signature ::= signature_251 .

signature_251 ::= # |
                  signature_252 signature_253 .

signature_252 ::= # |
                  type_mark signature_254 .

signature_254 ::= # |
                  signature_254 ',' type_mark .

signature_253 ::= # |
                  'return' type_mark .

simple_expression ::= simple_expression_255 term simple_expression_256 .

simple_expression_255 ::= # |
                          '+' |
                          '-' .

simple_expression_256 ::= # |
                          simple_expression_256 simple_expression_257 term .

simple_expression_257 ::= '+' |
                          '-' |
                          '&' .

string_literal ::= '\"' string_literal_258 '\"' .

string_literal_258 ::= # |
                       string_literal_258 graphic_character .

subprogram_body ::= subprogram_specification 'is' subprogram_body_259 'begin' subprogram_body_260 'end' subprogram_body_261 subprogram_body_262 ';' .

subprogram_body_259 ::= # |
                        subprogram_body_259 subprogram_body_263 |
                        subprogram_body_259 subprogram_body |
                        subprogram_body_259 type_declaration |
                        subprogram_body_259 subtype_declaration |
                        subprogram_body_259 constant_declaration |
                        subprogram_body_259 variable_declaration |
                        subprogram_body_259 file_declaration |
                        subprogram_body_259 alias_declaration |
                        subprogram_body_259 attribute_declaration |
                        subprogram_body_259 attribute_specification |
                        subprogram_body_259 use_clause |
                        subprogram_body_259 group_template_declaration |
                        subprogram_body_259 group_declaration .

subprogram_body_263 ::= subprogram_specification ';' .

subprogram_body_260 ::= # |
                        subprogram_body_260 sequential_statement .

subprogram_body_261 ::= # |
                        'procedure' |
                        'function' .

subprogram_body_262 ::= # |
                        identifier |
                        subprogram_body_264 .

subprogram_body_264 ::= '\"' subprogram_body_265 '\"' .

subprogram_body_265 ::= # |
                        subprogram_body_265 graphic_character .

subprogram_specification ::= subprogram_specification_266 |
                             subprogram_specification_267 .

subprogram_specification_266 ::= subprogram_specification_268 subprogram_specification_269 .

subprogram_specification_268 ::= 'procedure' identifier |
                                 '\"' subprogram_specification_270 '\"' .

subprogram_specification_270 ::= # |
                                 subprogram_specification_270 graphic_character .

subprogram_specification_269 ::= # |
                                 '(' parameter_interface_list ')' .

subprogram_specification_267 ::= subprogram_specification_271 subprogram_specification_272 subprogram_specification_273 'return' type_mark .

subprogram_specification_271 ::= # |
                                 'pure' |
                                 'impure' .

subprogram_specification_272 ::= 'function' identifier |
                                 '\"' subprogram_specification_274 '\"' .

subprogram_specification_274 ::= # |
                                 subprogram_specification_274 graphic_character .

subprogram_specification_273 ::= # |
                                 '(' parameter_interface_list ')' .

subtype_declaration ::= 'subtype' identifier 'is' subtype_declaration_275 type_mark subtype_declaration_276 ';' .

subtype_declaration_275 ::= # |
                            resolution_function_name .

subtype_declaration_276 ::= # |
                            constraint .

subtype_indication ::= subtype_indication_277 type_mark subtype_indication_278 .

subtype_indication_277 ::= # |
                           resolution_function_name .

subtype_indication_278 ::= # |
                           constraint .

suffix ::= identifier |
           suffix_279 |
           suffix_280 |
           'all' .

suffix_279 ::= '\'' graphic_character '\'' .

suffix_280 ::= '\"' suffix_281 '\"' .

suffix_281 ::= # |
               suffix_281 graphic_character .

term ::= factor term_282 .

term_282 ::= # |
             term_282 term_283 factor .

term_283 ::= '*' |
             '/' |
             'mod' |
             'rem' .

type_declaration ::= 'type' identifier ';' |
                     'type' identifier 'is' type_declaration_284 .

type_declaration_284 ::= '(' type_declaration_285 type_declaration_286 ')' ';' |
                         range_constraint ';' |
                         physical_type_definition ';' |
                         record_type_definition ';' |
                         'access' subtype_indication ';' |
                         'file' 'of' type_mark ';' |
                         'array' index_constraint 'of' element_subtype_indication ';' |
                         'array' '(' type_mark 'range' '<>' type_declaration_287 ')' 'of' element_subtype_indication ';' .

type_declaration_285 ::= identifier |
                         type_declaration_288 .

type_declaration_288 ::= '\'' graphic_character '\'' .

type_declaration_286 ::= # |
                         type_declaration_286 ',' identifier |
                         type_declaration_286 type_declaration_289 .

type_declaration_289 ::= '\'' graphic_character '\'' .

type_declaration_287 ::= # |
                         type_declaration_287 ',' type_mark 'range' '<>' .

type_mark ::= type_name |
              subtype_name .

use_clause ::= 'use' prefix '.' suffix use_clause_290 ';' .

use_clause_290 ::= # |
                   use_clause_290 ',' prefix '.' suffix .

variable_assignment_statement ::= variable_assignment_statement_291 variable_assignment_statement_292 ':=' expression ';' .

variable_assignment_statement_291 ::= # |
                                      label ':' .

variable_assignment_statement_292 ::= name |
                                      aggregate .

variable_declaration ::= variable_declaration_293 'variable' identifier variable_declaration_294 ':' subtype_indication variable_declaration_295 ';' .

variable_declaration_293 ::= # |
                             'shared' .

variable_declaration_294 ::= # |
                             variable_declaration_294 ',' identifier .

variable_declaration_295 ::= # |
                             ':=' expression .

wait_statement ::= wait_statement_296 'wait' wait_statement_297 wait_statement_298 wait_statement_299 ';' .

wait_statement_296 ::= # |
                       label ':' .

wait_statement_297 ::= # |
                       'on' signal_name wait_statement_300 .

wait_statement_300 ::= # |
                       wait_statement_300 ',' signal_name .

wait_statement_298 ::= # |
                       'until' boolean_expression .

wait_statement_299 ::= # |
                       'for' time_expression .

waveform ::= waveform_element waveform_301 |
             'unaffected' .

waveform_301 ::= # |
                 waveform_301 ',' waveform_element .

waveform_element ::= value_expression waveform_element_302 |
                     'null' waveform_element_303 .

waveform_element_302 ::= # |
                         'after' time_expression .

waveform_element_303 ::= # |
                         'after' time_expression .

signal_name ::= name .

variable_name ::= name .

file_name ::= name .

function_name ::= name .

entity_name ::= name .

architecture_identifier ::= identifier .

boolean_expression ::= expression .

attribute_identifier ::= identifier .

DIGIT ::= 'INTEGER' |
          'REAL' .

LETTER ::= 'STRING' |
           'ID' .

UNDERLINE ::= '_' .

UPPER_CASE_LETTER ::= 'STRING' .

LOWER_CASE_LETTER ::= 'STRING' .

SPECIAL_CHARACTER ::= '(' |
                      ')' |
                      '#' |
                      '&' |
                      '\'' |
                      '*' |
                      '+' |
                      ',' |
                      '-' |
                      '.' |
                      '/' |
                      ':' |
                      ';' |
                      '<' |
                      '=' |
                      '>' |
                      '_' |
                      '|' .

OTHER_SPECIAL_CHARACTER ::= 'ID' .

SPACE_CHARACTER ::= 'SPACE' .

architecture_name ::= name .

block_statement_label ::= label .

generate_statement_label ::= label .

discrete_subtype_indication ::= subtype_indication .

static_expression ::= expression .

shared_variable_declaration ::= variable_declaration .

block_label ::= label .

guard_expression ::= expression .

generic_interface_list ::= interface_list .

generic_association_list ::= association_list .

port_interface_list ::= interface_list .

port_association_list ::= association_list .

case_label ::= label .

element_identifier ::= identifier .

instantiation_label ::= label .

component_name ::= name .

configuration_name ::= name .

local_generic_interface_list ::= interface_list .

local_port_interface_list ::= interface_list .

component_identifier ::= identifier .

time_expression ::= expression .

configuration_identifier ::= identifier .

guarded_signal_list ::= signal_list .

formal_generic_interface_list ::= interface_list .

formal_port_interface_list ::= interface_list .

record_type_identifier ::= identifier .

parameter_interface_list ::= interface_list .

resolution_function_name ::= function_name .

element_subtype_indication ::= subtype_indication .

type_name ::= name .

subtype_name ::= name .

value_expression ::= expression .

passive_procedure_call ::= procedure_call .

passive_process_statement ::= process_statement .

entity_identifier ::= identifier .

loop_label ::= label .

file_open_kind_expression ::= expression .

string_expression ::= expression .

generic_name ::= name .

port_name ::= name .

parameter_name ::= name .

parameter_association_list ::= association_list .

generate_label ::= label .

group_template_name ::= name .

if_label ::= label .

package_identifier ::= identifier .

unit_name ::= name .

physical_type_identifier ::= identifier .

procedure_name ::= name .

process_label ::= label .

range_attribute_name ::= attribute_name .



(
write["\n" gtb_version " processing '" gtb_main_file_name "' on " date_time "\n\n"]

this_grammar := grammar[expression]


this_nfa := nfa[this_grammar lr_1]

(*
add_nullable_accepting_states[this_nfa]

dfa := subset_construction[this_nfa]
*)

write["\n" CPU_time " CPU seconds elapsed\n\n"]
)
