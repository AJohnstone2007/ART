(* Generated by ebnf2bnf V2.00 from 'iso7q.ebf' Aug 13 2003 21:57:26 *)

(*
This is designed to produce a smaller example grammar which displays 
the problem with iso7gF2 and full4.

This is a version os ahiso7q.gtb in which all the non-terminals have
been terminalised including the immediate ones. 

*)


T ::= #  |  ~T 'a'  |  'if' ~T  ~I .

I ::= # .


(

STRINGview := "
if if a 
"

(* Main script *)

gdg_file := open["gdg.vcg"]
nfa_file := open["nfa.vcg"]
dfa_file := open["dfa.vcg"]
table_file := open["lr1.tbl"]
table_export_file := open["lr1.tbx"]
ssg_file := open["ssg.vcg"]

write["\n" gtb_version " processing '" gtb_main_file_name "' on " date_time "\n\n"]

this_grammar := grammar[T]
(*
write[this_grammar] 
*)

(* gtb v1.4 *)
(*
nfa := fsa[this_grammar lr_1]
add_nullable_accepting_states[nfa]
write[nfa_file nfa]

dfa := subset_construction[nfa]
write[dfa_file dfa]

(* table := resolved_parse_table[dfa] *)
table := parse_table[dfa]

write[table_file table]

export[table_export_file table]

(*
import[table_import_file table] 

export[table_export_file_new table]
*)

lr_parse[table STRINGview]

ssg := tomita_1_nullable_accepts_parse[table STRINGview]

(* ssg := tomita_1_parse[table eSTRING] *)
(* write[ssg_file ssg] *)

write["\n" CPU_time " CPU seconds elapsed\n\n"]
*)

(* gtb v2 *)
(*
(*
this_gdg := gdg[this_grammar]
write[gdg_file this_gdg]
close[gdg_file]
*)

(* write_concise[this_grammar] *)


this_nfa := nfa[this_grammar lr 1 terminal_lookahead_sets singleton_lookahead_sets] 

add_nullable_accepting_states[nfa] 
(*write[nfa_file nfa] *)

this_dfa := dfa[this_nfa] 

(* write[dfa_file this_dfa] *)

(*table := resolved_parse_table[this_dfa]*)
table := parse_table[this_dfa]
(*write[table_file table]*)

(*export_concise[table_export_file table]*)
(*export[table_export_file table]*)
*)

(* AH bits *)

tilde[this_grammar terminal]

prefix_grammar := ah_automaton[this_grammar] 
(* write[prefix_grammar] *)

this_ah_table := ah_table[this_grammar]

write["\n" CPU_time " CPU seconds elapsed\n\n"]


ah_recognise[this_ah_table STRINGview]


write["\n" CPU_time " CPU seconds elapsed\n\n"]

)

(*
S ::= ~T ~E  .

T ::= # |
      ~T ~E  'end' |
      'if' ~T  ~I.

E ::= # |  'a' ~T .

I ::= # .
*)


