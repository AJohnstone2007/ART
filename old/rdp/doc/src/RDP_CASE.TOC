\contentsline {chapter}{\numberline {1}Translation tools}{1}
\contentsline {section}{\numberline {1.1}The spectrum of language translators and the limitations of single pass translators}{2}
\contentsline {section}{\numberline {1.2}Intermediate forms, and translation to virtual machine code}{3}
\contentsline {section}{\numberline {1.3}The {\tt mini} family}{5}
\contentsline {chapter}{\numberline {2}The {\tt minicalc} language: a simple calculator with declared variables}{7}
\contentsline {section}{\numberline {2.1}{\tt minicalc} features}{8}
\contentsline {section}{\numberline {2.2}{\tt minicalc} limitations}{8}
\contentsline {section}{\numberline {2.3}A grammar for {\tt minicalc}}{8}
\contentsline {subsection}{\numberline {2.3.1}Specifying expressions}{11}
\contentsline {subsubsection}{Specifying operator priority}{13}
\contentsline {subsubsection}{Specifying operator associativity}{13}
\contentsline {subsubsection}{Left to right evaluation and left associative operators}{14}
\contentsline {subsubsection}{Right to left evaluation and right associative operators}{14}
\contentsline {subsubsection}{Operators that do not combine}{15}
\contentsline {section}{\numberline {2.4}Hints on selecting operator priority and associativity}{15}
\contentsline {section}{\numberline {2.5}A {\tt minicalc} syntax checker}{16}
\contentsline {chapter}{\numberline {3}An interpreter for {\tt minicalc}}{18}
\contentsline {section}{\numberline {3.1}Declaring symbol tables}{19}
\contentsline {section}{\numberline {3.2}Using synthesized attributes}{19}
\contentsline {section}{\numberline {3.3}Expression evaluation}{22}
\contentsline {section}{\numberline {3.4}Accessing the symbol table}{22}
\contentsline {chapter}{\numberline {4}The {\tt minicond} language: interpretation with conditionals}{24}
\contentsline {section}{\numberline {4.1}A grammar for {\tt minicond}}{26}
\contentsline {section}{\numberline {4.2}Adding conditional operators}{26}
\contentsline {section}{\numberline {4.3}Using inherited attributes}{29}
\contentsline {section}{\numberline {4.4}Using semantic rules}{30}
\contentsline {section}{\numberline {4.5}Adding conditional execution}{31}
\contentsline {subsection}{\numberline {4.5.1}Semantic actions for conditional execution}{33}
\contentsline {section}{\numberline {4.6}Next steps}{34}
\contentsline {chapter}{\numberline {5}The Mini Virtual Machine (MVM)}{35}
\contentsline {section}{\numberline {5.1}MVM memory}{36}
\contentsline {section}{\numberline {5.2}MVM instruction execution}{37}
\contentsline {section}{\numberline {5.3}MVM addressing modes}{39}
\contentsline {section}{\numberline {5.4}MVM instructions}{40}
\contentsline {subsection}{\numberline {5.4.1}Instruction set capabilities}{40}
\contentsline {subsection}{\numberline {5.4.2}Address mode encoding}{41}
\contentsline {section}{\numberline {5.5}Example MVM instructions}{42}
\contentsline {subsection}{\numberline {5.5.1}Data manipulation instructions and address modes}{42}
\contentsline {subsection}{\numberline {5.5.2}Control manipulation instructions}{43}
\contentsline {section}{\numberline {5.6}Using an assembler to program MVM}{43}
\contentsline {section}{\numberline {5.7}{\tt mvmsim} -- a simulator for MVM byte codes}{44}
\contentsline {subsection}{\numberline {5.7.1}Using {\tt mvmsim}}{44}
\contentsline {subsection}{\numberline {5.7.2}The {\tt mvmsim} input file format}{45}
\contentsline {subsection}{\numberline {5.7.3}Running a simulation}{46}
\contentsline {subsection}{\numberline {5.7.4}Implementing {\tt mvmsim}}{47}
\contentsline {subsubsection}{Memory and program counter declarations}{47}
\contentsline {subsubsection}{The main execution loop}{48}
\contentsline {chapter}{\numberline {6}{\tt mvmasm} -- an assembler for MVM}{52}
\contentsline {section}{\numberline {6.1}A first example}{52}
\contentsline {subsection}{\numberline {6.1.1}Assembler output}{53}
\contentsline {subsubsection}{Listing format}{54}
\contentsline {subsubsection}{Assembly using the {\tt DATA} and {\tt CODE} pointers}{54}
\contentsline {subsubsection}{Labels}{54}
\contentsline {subsubsection}{Machine instructions and addressing modes}{55}
\contentsline {subsubsection}{Data declaration directives}{55}
\contentsline {subsubsection}{The {\tt END} directive}{55}
\contentsline {subsection}{\numberline {6.1.2}Using the assembler and the simulator together}{55}
\contentsline {section}{\numberline {6.2}Assembler syntax reference}{56}
\contentsline {subsection}{\numberline {6.2.1}Line oriented and free format languages}{56}
\contentsline {subsection}{\numberline {6.2.2}Lexical elements}{57}
\contentsline {subsection}{\numberline {6.2.3}Expressions}{57}
\contentsline {subsection}{\numberline {6.2.4}Instructions and addressing modes}{57}
\contentsline {subsection}{\numberline {6.2.5}Directives}{59}
\contentsline {subsubsection}{File inclusion}{59}
\contentsline {subsubsection}{Assembly pointer manipulation}{59}
\contentsline {subsubsection}{Data declaration directives}{60}
\contentsline {subsubsection}{Symbol assignment}{60}
\contentsline {subsubsection}{Transfer address specification}{60}
\contentsline {section}{\numberline {6.3}Implementing {\tt mvmasm}}{60}
\contentsline {subsection}{\numberline {6.3.1}Multiple pass parsers}{61}
\contentsline {subsection}{\numberline {6.3.2}The {\tt EOLN} scanner primitive}{63}
\contentsline {section}{\numberline {6.4}The {\tt mvmasm} grammar}{63}
\contentsline {subsection}{\numberline {6.4.1}Directives for setting up the parser}{63}
\contentsline {subsection}{\numberline {6.4.2}The MVM definition header}{63}
\contentsline {subsection}{\numberline {6.4.3}The main {\tt mvmasm} grammar}{67}
\contentsline {subsection}{\numberline {6.4.4}The expression evaluator}{69}
\contentsline {section}{\numberline {6.5}{\tt mvmasm} auxiliary functions}{69}
\contentsline {chapter}{\numberline {7}A single pass compiler for {\tt miniloop}}{74}
\contentsline {section}{\numberline {7.1}{\tt miniloop} features}{75}
\contentsline {subsection}{\numberline {7.1.1}The {\tt begin} {\tt end} block (compound statement)}{75}
\contentsline {subsection}{\numberline {7.1.2}{The \tt while} loop}{75}
\contentsline {section}{\numberline {7.2}Arranging data and code in memory}{77}
\contentsline {section}{\numberline {7.3}Compiling declarations}{78}
\contentsline {section}{\numberline {7.4}Compiling arithmetic expressions}{79}
\contentsline {section}{\numberline {7.5}Compiling {\tt print} statements}{79}
\contentsline {section}{\numberline {7.6}Compiling {\tt if} statements}{80}
\contentsline {section}{\numberline {7.7}Compiling {\tt while} loops}{81}
\contentsline {section}{\numberline {7.8}Typical compiler output}{82}
\contentsline {section}{\numberline {7.9}Implementing {\tt miniloop}}{82}
\contentsline {subsection}{\numberline {7.9.1}A grammar for {\tt miniloop}}{86}
\contentsline {subsection}{\numberline {7.9.2}{\tt miniloop} auxiliary functions}{86}
\contentsline {chapter}{\numberline {8}{\tt minitree} -- a multiple pass compiler}{92}
\contentsline {section}{\numberline {8.1}{\tt minitree} intermediate form}{93}
\contentsline {section}{\numberline {8.2}Implementing {\tt minitree}}{101}
\contentsline {subsection}{\numberline {8.2.1}A grammar for {\tt minitree}}{101}
\contentsline {section}{\numberline {8.3}{\tt minitree} auxiliary functions}{104}
\contentsline {subsection}{\numberline {8.3.1}Use of the graph library}{104}
\contentsline {subsection}{\numberline {8.3.2}The tree walker}{105}
\contentsline {chapter}{\numberline {9}A pretty-printer for ANSI-C}{112}
\contentsline {section}{\numberline {9.1}Using the pretty-printer}{113}
\contentsline {subsection}{\numberline {9.1.1}Command line options}{114}
\contentsline {subsection}{{\tt -i} indent spacing}{114}
\contentsline {subsection}{{\tt -c} comment start column}{114}
\contentsline {subsection}{\numberline {9.1.2}File usage}{114}
\contentsline {subsection}{\numberline {9.1.3}Making a listing}{114}
\contentsline {subsection}{\numberline {9.1.4}Error messages}{115}
\contentsline {section}{\numberline {9.2}Pretty-printer features}{115}
\contentsline {section}{\numberline {9.3}Pretty-printer limitations}{117}
\contentsline {subsection}{\numberline {9.3.1}Operators which may be monadic or diadic}{117}
\contentsline {subsection}{\numberline {9.3.2}Consecutive indenting keywords}{117}
\contentsline {subsection}{\numberline {9.3.3}Continuation lines}{118}
\contentsline {subsection}{\numberline {9.3.4}Embedded comments}{118}
\contentsline {subsection}{\numberline {9.3.5}Formatting of lexemes}{119}
\contentsline {section}{\numberline {9.4}A grammar for a superset of ANSI-C}{119}
\contentsline {section}{\numberline {9.5}Auxiliary routines}{123}
\contentsline {subsection}{\numberline {9.5.1}The space array}{123}
\contentsline {subsection}{\numberline {9.5.2}The pretty-print function}{126}
\contentsline {chapter}{\numberline {10}Design projects}{131}
\contentsline {chapter}{\numberline {A}Acquiring and installing {\fontseries m\selectfont \tt rdp}}{134}
\contentsline {section}{\numberline {A.1}Installation}{134}
\contentsline {section}{\numberline {A.2}Build log}{136}
